[tool.poetry]
name = "humlab-penelope"
version = "0.5.21"
description = "Utilities that simplify enelpeing in Jupyter Lab"
authors = ["Roger MÃ¤hler <roger.mahler@hotmail.com>"]
packages = [{ include = "penelope" }]
classifiers = [
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: OS Independent',
    'Topic :: Software Development',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/humlab/penelope"
repository = "https://github.com/humlab/penelope"

# FIXME #75 Upgrade gensim to ^4.0
# FIXME #76 Upgrade spaCy to ^4.0
# FIXME #77 Upgrade JupyterLab to ^3.0
[tool.poetry.dependencies]
# cutter-ng = "^2.5"
# glove-python-binary = { version = "*", markers = "sys_platform != 'darwin'"}
alive-progress = "^1.6.1"
click = "^7.1.2"
ftfy = "^5.8"
gensim = "^3.8.3"
holoviews = "^1.13.5"
lxml = "^4.5.2"
memoization = "^0.3.1"
more_itertools = "^8.5.0"
nltk = "^3.5"
numpy = "==1.19.3"
openpyxl = "^3.0.5"
pandas = "^1.1.2"
pydotplus = "^2.0.2"
python = "==3.8.*"
python-louvain = "^0.14"
PyYAML = "^5.3.1"
requests = "^2.24.0"
scipy = "^1.5.2"
sklearn = "*"
smart_open = "^2.2.1"
spacy = "^2.3.2"
statsmodels = "^0.12.0"
textacy = "^0.10.1"
toml = "^0.10.2"
wordcloud = "^1.8.0"
pyarrow = "^3.0.0"
loguru = "^0.5.3"

ipyfilechooser = "*"
ipyaggrid = "*"
jupyter_bokeh = "*"
ipywidgets = "*"
bokeh = "*"
ipycytoscape = "*"
perspective-python = "*"
msgpack = "^1.0.2"
numba = "^0.53.1"
tqdm = "^4.62.3"

[tool.poetry.dev-dependencies]
black = "==20.*,>=20.8.0.b1"
coverage = "==5.*,>=5.3.0"
flake8 = "==3.*,>=3.8.4"
flake8-black = "==0.*,>=0.2.1"
flake8-pytest-style = "==1.*,>=1.3.0"
isort = "==5.*,>=5.5.4"
pep8-naming = "==0.*,>=0.11.1"
pycodestyle = "==2.*,>=2.6.0"
pyflakes = "==2.*,>=2.2.0"
pylint = "==2.*,>=2.6.0"
pytest = "==6.*,>=6.1.0"
pytest-cov = "==2.*,>=2.10.1"
rope = "==0.*,>=0.17.0"
yapf = "==0.*,>=0.30.0"
pytest-xdist = "==2.*,>=2.2.0"
mypy = "==0.*,>=0.790.0"
Sphinx = "==3.*,>=3.5.1"
recommonmark = "==0.*,>=0.7.1"
pyinstrument = "==3.*,>=3.4.1"
tomlkit = "^0.7.2"
pytest-timeout = "^1.4.2"
memory-profiler = "^0.58.0"
pyright = "^0.0.9"

[tool.poetry.scripts]
vectorize = "penelope.scripts.vectorize:main"
topic-model = "penelope.scripts.topic_model:click_main"
co-occurrence = "penelope.scripts.co_occurrence:main"
pos-tag = "penelope.scripts.pos_tag:main"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-rfE",
    "-q",
    # "-s",
    #"-n4",
]
log_cli = "False"
testpaths = ["tests"]
norecursedirs = [
    "test_data",
    "output",
    "__pycache__",
    "deprecated",
    "penelope",
    "docs",
    ".git",
    ".github",
    ".vscode",
    "profile-reports",
    "tmp",

]
python_files = "*_test.py"
python_functions = "test_*"
filterwarnings = [
    "ignore::_pytest.warning_types.PytestCollectionWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::RuntimeWarning",
    "ignore::UserWarning",
]
# timeout = 300

[tool.black]
line-length = 120
target-version = ["py38"]
skip-string-normalization = true
# include = '\.pyi?$'
exclude = '''
(
  \.git
  | \.pypy_cache
  | \.pytest_cache
  | \.mypy_cache
  | deprecated
)
'''

[tool.isort]
# https://github.com/timothycrosley/isort/wiki/isort-Settings
profile = "black"
line_length = 120
py_version = "auto"
float_to_top = true
src_paths = ["penelope", "tests"]

# [tool.taskipy.tasks]
# pytest = "pytest --junitxml=test-results/junit.xml"
# bandit = "bandit -c .bandit.yml -r penelope/"
# black = "black penelope"
# black_ci = "black -check penelope"
# flake8 = "flake8 penelope/ tests/"
# generate_requirements = "poetry export -f requirements.txt -o requirements.txt"
# pre_safety = "task generate_requirements"
# safety = "safety check  -r requirements.txt"
# isort = "isort -rc penelope"
# isort_ci = "isort -rc -c penelope"
# full = "task pytest && task black && task flake8 && task safety && task bandit && task isort"
# ci = "task pytest && task black_ci && task flake8 && task safety && task bandit && task isort_ci"

[tool.coverage]
# https://github.com/nedbat/coveragepy

[tool.coverage.run]
source = ["penelope"]
branch = true
omit = [
    "**/__init__.py",
    "tests/*",
    "interfaces.py",
    "interface.py",
    "penelope/notebook/*",
    "*_gui.py",
]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]
show_missing = true
sort = "Name"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
