Metadata-Version: 2.1
Name: superMatch
Version: 0.0.5
Summary: Local Feature Extractors and Matchers Network Library for PyTorch
Home-page: https://git.woa.com/matching-benchmark/SuperMatch.git
Author: mumuychen
Author-email: mumuychen@tencent.com
License: UNKNOWN
Download-URL: https://git.woa.com/matching-benchmark/SuperMatch.git/archive/0.0.5.tar.gz
Keywords: deep-learningpytorch,image-matching,superpoint-superglue,loftr-cort-aslfeat-r2d2
Platform: UNKNOWN
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: tqdm
Requires-Dist: scipy
Requires-Dist: opencv-contrib-python
Requires-Dist: h5py
Requires-Dist: kornia
Requires-Dist: pydegensac

# dloc - the deeplearning localization toolbox

This is `dloc`, a modular toolbox for state-of-the-art local feature extaction and matching. 

## Support

## Reference 
- [d2net](https://arxiv.org/abs/1905.03561): extract keypoint from 1/8 feature map
- [superpoint](https://arxiv.org/abs/1712.07629): could extract in corner points, pretrained with magicpoint
- [superglue](https://arxiv.org/abs/1911.11763): excellent matching algorithm but pretrained model only support superpoint, we have implementation superglue with sift/superpoint in megadepth datasets.
- [disk](https://arxiv.org/abs/2006.13566): add reinforcement for keypoints extraction
- [aslfeat](https://arxiv.org/abs/2003.10071): build multiscale extraction network
- [cotr](https://arxiv.org/abs/2103.14167): build transformer network for points matching
- [loftr](https://arxiv.org/abs/2104.00680): dense extraction and matching with end-to-end network
- [r2d2](https://arxiv.org/abs/1906.06195): add repeatability and reliability for keypoints extraction
- [contextdesc](https://arxiv.org/abs/1904.04084): keypoints use sift, use full image context to enhence descriptor. expensive calculation.
- [NGRANSAC](https://arxiv.org/abs/1905.04132)

If you are interested in local feature, https://drive.weixin.qq.com/s?k=AJEAIQdfAAo0ta3HBsAKMA9AatACk is useful. 
## Installation

```
pip install superMatch
```

`dloc` could run on mirrors.tencent.com/xlab/colmap:v2.0 with python3.

## Debugging and Visualization
Download https://drive.weixin.qq.com/s?k=AJEAIQdfAAob00fTSEAKMA9AatACk datasets to assets.

Weights could be download from https://drive.weixin.qq.com/s?k=AJEAIQdfAAo97Nnovq.

## industrial visualization and debug 
```python
## initial model
model, config = dloc.build_model('superpoint_aachen', 'superglue_outdoor', 'SuperMatch/weights', landmark=False, direct=False)
## get matches or relative pose
results = dloc.get_matches('SuperMatch/assets/2543051003_7b970fc234_o.jpg', 'SuperMatch/assets/301490830_aded42bc67_o.jpg', model, config, landmarks=None)
or
results_pose = dloc.get_pose('SuperMatch/assets/2543051003_7b970fc234_o.jpg', 'SuperMatch/assets/301490830_aded42bc67_o.jpg', model, config, mode='H')
```
### explanation
```python
build_model(extractor, matcher, model_path='', landmark=False, direct=False)
get_matches(name0, name1, model, config, resize=[-1], with_desc=False, landmarks=None)
get_pose(img1, img2, model, config, resize=[-1], landmarks=None, mode='H')
```
- extractors: 'superpoint_aachen', 'superpoint_inloc', 'd2net-ss', 
        'r2d2-desc','context-desc', 'landmark', 'aslfeat-desc', 'disk-desc', 'swin-disk-desc'
- matchers: 'superglue_outdoor', 'superglue_disk', 'superglue_swin_disk',
        'superglue_indoor', 'NN', 'disk', 'cotr', 'loftr'



