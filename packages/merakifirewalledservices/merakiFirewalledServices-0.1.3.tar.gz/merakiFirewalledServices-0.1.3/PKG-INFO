Metadata-Version: 2.1
Name: merakifirewalledservices
Version: 0.1.3
Summary: Get Security Appliance Firewalled Services status from Meraki dashboard
Home-page: https://github.com/routetonull/merakiFirewalledServices
License: Apache-2.0
Keywords: meraki,python
Author: Gian Paolo Boarina
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: Pygments (==2.10.0)
Requires-Dist: aiohttp (==3.7.4.post0)
Requires-Dist: async-timeout (==3.0.1)
Requires-Dist: attrs (==21.2.0)
Requires-Dist: certifi (==2021.5.30)
Requires-Dist: chardet (==4.0.0)
Requires-Dist: charset-normalizer (==2.0.5)
Requires-Dist: click (==8.0.1)
Requires-Dist: colorama (==0.4.4)
Requires-Dist: commonmark (==0.9.1)
Requires-Dist: idna (==3.2)
Requires-Dist: meraki (==1.12.0)
Requires-Dist: multidict (==5.1.0)
Requires-Dist: requests (==2.26.0)
Requires-Dist: rich (==10.9.0)
Requires-Dist: typing-extensions (==3.10.0.2)
Requires-Dist: urllib3 (==1.26.6)
Requires-Dist: yarl (==1.6.3)
Project-URL: Repository, https://github.com/routetonull/merakiFirewalledServices
Description-Content-Type: text/plain

# Get Security Appliance Firewalled Services status from Meraki dashboard

The script collects the status of the Meraki MX firewalled services status from the Meraki Dashboard and prints a report.

## Installation

python -m pip install merakifirewalledservices


## Usage

Provide API Key and Organization ID from CLI:

```
merakiFirewalledServices --apikey <myApiKey> --orgid <myOrgId>
```

Or from env vars:

```
export APIKEY=<myApiKey>
export ORGID=<myOrgId>
```

If OrgId is not provided the script prints the list of accessible organization with the provides API Key.

