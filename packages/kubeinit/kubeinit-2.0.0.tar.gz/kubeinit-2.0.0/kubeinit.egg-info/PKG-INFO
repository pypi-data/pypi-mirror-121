Metadata-Version: 2.1
Name: kubeinit
Version: 2.0.0
Summary: The Kubeinit CLI
Home-page: https://www.kubeinit.com
Author: Carlos Camacho
Author-email: carloscamachoucv@gmail.com
License: UNKNOWN
Description: <p style="text-align: center" align="center">
            <a href="https://www.kubeinit.com"><img src="https://raw.githubusercontent.com/Kubeinit/kubeinit/master/images/logo.svg?sanitize=true" alt="The KUBErnetes INITiator"/></a>
        </p>
        
        **The KUBErnetes INITiator**
        
        <p style="text-align: center" align="center">
            <a href="https://www.python.org"><img height="30px" src="https://raw.githubusercontent.com/pystol/pystol-docs/master/assets/badges/made-with-python.svg?sanitize=true"/> </a>
            <a href="https://www.ansible.com"><img height="30px" src="https://raw.githubusercontent.com/pystol/pystol-docs/master/assets/badges/made-with-ansible.svg?sanitize=true"/> </a>
            <a href="https://www.kubeinit.com"><img height="30px" src="https://raw.githubusercontent.com/pystol/pystol-docs/master/assets/badges/made-with-love.svg?sanitize=true"/> </a>
            <a href="https://www.kubeinit.com"><img height="30px" src="https://raw.githubusercontent.com/pystol/pystol-docs/master/assets/badges/cloud-native.svg?sanitize=true"/> </a>
        </p>
        
        <p style="text-align: center" align="center">
            <a href="https://github.com/Kubeinit/kubeinit/actions?workflow=docs_build_pr"><img height="20px" src="https://github.com/Kubeinit/kubeinit/workflows/docs_build_pr/badge.svg?event=schedule"/> </a>
            <a href="https://github.com/Kubeinit/kubeinit/actions?workflow=linters"><img height="20px" src="https://github.com/Kubeinit/kubeinit/workflows/linters/badge.svg?event=schedule"/> </a>
            <a href="https://github.com/Kubeinit/kubeinit/actions?workflow=units"><img height="20px" src="https://github.com/Kubeinit/kubeinit/workflows/units/badge.svg?event=schedule"/> </a>
            <a href="https://github.com/Kubeinit/kubeinit/actions?workflow=molecule"><img height="20px" src="https://github.com/Kubeinit/kubeinit/workflows/molecule/badge.svg?event=schedule"/> </a>
            <a href="https://github.com/Kubeinit/kubeinit/actions?workflow=release"><img height="20px" src="https://github.com/Kubeinit/kubeinit/workflows/release/badge.svg?event=push"/> </a>
            <a href="https://github.com/Kubeinit/kubeinit/actions?workflow=container_image"><img height="20px" src="https://github.com/Kubeinit/kubeinit/workflows/container_image/badge.svg?event=schedule"/> </a>
            <a href="https://github.com/Kubeinit/kubeinit/actions?workflow=distro_test"><img height="20px" src="https://github.com/Kubeinit/kubeinit/workflows/distro_test/badge.svg?event=schedule"/> </a>
            <a href="https://kubernetes.slack.com/archives/C01FKK19T0B"><img height="20px" src="https://img.shields.io/badge/chat-on%20slack-blue.svg?logo=slack&longCache=true&style=flat"/> </a>
        </p>
        
        # What is KubeInit?
        
        KubeInit provides Ansible playbooks and roles for the deployment
        and configuration of multiple Kubernetes distributions.
        KubeInit's mission is to have a fully automated way to deploy in
        a single command a curated list of prescribed architectures.
        
        ## Documentation
        
        KubeInit's documentation is hosted in [this same repository](https://docs.kubeinit.com).
        
        ## Periodic jobs status
        
        There is a set of predefined scenarios that are tested on
        a weekly basis, the result of those executions is
        presented in the [periodic job execution page](periodic_jobs.md).
        
        
        ## KubeInit supported scenarios
        
        **K8s distribution:** OKD (testing K8S, RKE, EKS, RKE)
        
        **Driver:** Libvirt
        
        **OS:** CentOS/Fedora, Debian/Ubuntu
        
        ## Requirements
        
        * A fresh deployed server with enough RAM and disk space (120GB in RAM and 300GB in disk) and CentOS 8 (it should work also in Fedora/Debian/Ubuntu hosts).
        * Adjust the inventory file to suit your needs i.e. [the worker nodes](https://github.com/Kubeinit/kubeinit/blob/master/kubeinit/hosts/okd/inventory#L66)
         you will need in your cluster.
        * By default the hypervisor node is called nyctea (defined in the inventory). Replace it with the hostname you specified if you changed it.
        * Have root passwordless access with certificates.
        * Having podman installed in the machine where you are running ansible-playbook.
        
        ### Check if nyctea is reachable
        
        ```bash
        ping nyctea
        nslookup nyctea
        ```
        
        If you are not able to reach the hosts,
        edit your /etc/hosts, your DNS or your inventory files.
        
        ### Passwordless root access
        
        ```bash
        ssh root@nyctea
        ```
        
        If it fails. check if you have a ssh key, and generate one if you don't
        
        ```bash
        if [ -f /root/.ssh/id_rsa ]; then
          ssh-keygen
          ssh-copy-id /root/.ssh/id_rsa root@nyctea
        fi
        ```
        
        # How to run
        
        There are two ways of launching Kubeinit, directly using the
        ansible-playbook command, or by running it inside a container.
        
        ## Directly executing the deployment playbook
        
        The following example command will deploy a multi-master OKD 4.5 cluster with 1 worker node
        in a single command and in approximately 30 minutes.
        
        ```bash
        # Install the requirements assuming python3/pip3 is installed
        pip3 install \
                --upgrade \
                pip \
                shyaml \
                ansible \
                netaddr
        
        # Get the project's source code
        git clone https://github.com/Kubeinit/kubeinit.git
        cd kubeinit
        
        # Install the Ansible collection requirements
        ansible-galaxy collection install --force -r kubeinit/requirements.yml
        
        # Build and install the collection
        rm -rf ~/.ansible/collections/ansible_collections/kubeinit/kubeinit
        ansible-galaxy collection build -v --force --output-path releases/
        ansible-galaxy collection install --force --force-with-deps releases/kubeinit-kubeinit-`cat galaxy.yml | shyaml get-value version`.tar.gz
        
        # Run the playbook
        ansible-playbook \
            --user root \
            -v -i ./hosts/okd/inventory \
            --become \
            --become-user root \
            ./playbooks/okd.yml
        ```
        
        After provisioning any of the scenarios, you should have your environment ready to go.
        To connect to the nodes from the hypervisor use the IP addresses from the inventory files.
        
        ## Running the deployment command from a container
        
        The whole process is explained in the [HowTo's](https://www.anstack.com/blog/2020/09/11/Deploying-KubeInit-from-a-container.html).
        The following commands build a container image with the project inside of it, and then
        launches the container executing the ansible-playbook command with all the
        standard ansible-playbook parameters.
        
        Kubeinit is built and installed when deploying from a container as those steps
        are included in the Dockerfile, there is no need to build and install
        the collection locally if its used through a container.
        
        Note: When running the deployment from a container,
        `nyctea` can not be 127.0.0.1, it needs to be
        the hypervisor's IP address. Also when running the
        deployment as a user different than root, the
        keys needs to be also updated.
        
        ### Running from the GIT repository
        
        ```
        git clone https://github.com/Kubeinit/kubeinit.git
        cd kubeinit
        podman build -t kubeinit/kubeinit .
        
        run_as='root'
        podman run --rm -it \
            -v ~/.ssh/id_rsa:/${run_as}/.ssh/id_rsa:z \
            -v ~/.ssh/id_rsa.pub:/${run_as}/.ssh/id_rsa.pub:z \
            -v /etc/hosts:/etc/hosts \
            kubeinit/kubeinit \
                --user ${run_as} \
                -v -i ./hosts/okd/inventory \
                --become \
                --become-user ${run_as} \
                ./playbooks/okd.yml
        ```
        
        ### Running from a release
        
        ```
        # Get latest release tag name
        TAG=$(curl --silent "https://api.github.com/repos/kubeinit/kubeinit/releases/latest" | jq -r .tag_name)
        podman run --rm -it \
            -v ~/.ssh/id_rsa:/root/.ssh/id_rsa:z \
            -v ~/.ssh/id_rsa.pub:/${run_as}/.ssh/id_rsa.pub:z \
            -v /etc/hosts:/etc/hosts \
            quay.io/kubeinit/kubeinit:$TAG \
                --user root \
                -v -i ./hosts/okd/inventory \
                --become \
                --become-user root \
                ./playbooks/okd.yml
        ```
        
        # HowTo's and presentations
        
        * [The easiest and fastest way to deploy an OKD 4.5 cluster in a Libvirt/KVM Host](https://www.anstack.com/blog/2020/07/31/the-fastest-and-simplest-way-to-deploy-okd-openshift-4-5.html).
        * [KubeInit external access for OpenShift/OKD deployments with Libvirt](https://www.anstack.com/blog/2020/08/25/KubeInit-External-access-for-OpenShift-OKD-deployments-with-Libvirt.html).
        * [Deploying KubeInit from a container](https://www.anstack.com/blog/2020/09/11/Deploying-KubeInit-from-a-container.html).
        * [KubeInit: Bringing good practices from the OpenStack ecosystem to improve the way OKD/OpenShift deploys](https://www.twitch.tv/videos/750577055), [slides](https://speakerdeck.com/redhatopenshift/openshift-deploys).
        * [Persistent Volumes And Claims In KubeInit](https://www.anstack.com/blog/2020/09/28/Persistent-volumes-and-claims-in-KubeInit.html)
        * [Deploying Multiple KubeInit Clusters In The Same Hypervisor](https://www.anstack.com/blog/2020/10/04/Multiple-KubeInit-clusters-in-the-same-hypervisor.html)
        * [KubeInit 4-In-1 - Deploying Multiple Kubernetes Distributions (K8S, OKD, RKE, And CDK) With The Same Platform](https://www.anstack.com/blog/2020/10/19/KubeInit-4-in-1-Deploying-multiple-Kubernetes-distributions-K8S-OKD-RKE-and-CDK-with-the-same-platform.html)
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development :: Testing
Description-Content-Type: text/markdown
