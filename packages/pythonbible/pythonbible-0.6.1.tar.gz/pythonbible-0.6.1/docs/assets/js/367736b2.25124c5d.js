"use strict";(self.webpackChunkpythonbible_docs=self.webpackChunkpythonbible_docs||[]).push([[4209],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return t?r.createElement(m,a(a({ref:n},p),{},{components:t})):r.createElement(m,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5890:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={sidebar_position:7},c="count_books",s={unversionedId:"reference/count_books",id:"reference/count_books",isDocsHomePage:!1,title:"count_books",description:"The count_books function, given a string containing one or more Scripture references or a NormalizedReference object or a List of NormalizedReference objects, returns the int count of the books of the Bible included in the given reference(s).",source:"@site/docs/reference/count_books.md",sourceDirName:"reference",slug:"/reference/count_books",permalink:"/docs/reference/count_books",editUrl:"https://github.com/avendesora/pythonbible/edit/main/pythonbible-docs/docs/reference/count_books.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"convert_verse_ids_to_references",permalink:"/docs/reference/convert-verse-ids-to-references"},next:{title:"count_chapters",permalink:"/docs/reference/count_chapters"}},p=[{value:"Input",id:"input",children:[]},{value:"Output",id:"output",children:[]},{value:"Examples",id:"examples",children:[{value:"String Input Example",id:"string-input-example",children:[]},{value:"NormalizedReference Input Example",id:"normalizedreference-input-example",children:[]},{value:"List of NormalizedReferences Input Example",id:"list-of-normalizedreferences-input-example",children:[]}]}],u={toc:p};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"count_books"},"count_books"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"count_books")," function, given a ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," containing one or more Scripture references or a ",(0,i.kt)("inlineCode",{parentName:"p"},"NormalizedReference")," object or a ",(0,i.kt)("inlineCode",{parentName:"p"},"List")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"NormalizedReference")," objects, returns the ",(0,i.kt)("inlineCode",{parentName:"p"},"int")," count of the books of the Bible included in the given reference(s)."),(0,i.kt)("h2",{id:"input"},"Input"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"count_books")," function accepts a single argument of one of the following three types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"string")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NormalizedReference")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"List[NormalizedReference]"))),(0,i.kt)("h2",{id:"output"},"Output"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"count_books")," function returns an ",(0,i.kt)("inlineCode",{parentName:"p"},"int")," greater than or equal to 0 that represents the number of books of the Bible contained in the given reference(s)."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"string-input-example"},"String Input Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Code"',title:'"Code"'},'import pythonbible as bible\n\n# Genesis - Deuteronomy\nbible.count_books("The first five books of the Bible are Genesis - Deuteronomy.")\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Result"',title:'"Result"'},"5\n")),(0,i.kt)("h3",{id:"normalizedreference-input-example"},"NormalizedReference Input Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Code"',title:'"Code"'},'import pythonbible as bible\n\n# Matthew - John (i.e. bible.get_references("Matthew - John")\nreference = bible.NormalizedReference(\n    book=bible.Book.MATTHEW,\n    start_chapter=1,\n    start_verse=1,\n    end_chapter=21,\n    end_verse=25,\n    end_book=bible.Book.JOHN\n)\nbible.count_books(reference)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Result"',title:'"Result"'},"4\n")),(0,i.kt)("h3",{id:"list-of-normalizedreferences-input-example"},"List of NormalizedReferences Input Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Code"',title:'"Code"'},'import pythonbible as bible\n\n# Genesis and Matthew - John (i.e. bible.get_references("Genesis, Matthew - John"))\nreferences = [\n    bible.NormalizedReference(\n        book=bible.Book.GENESIS,\n        start_chapter=1,\n        start_verse=1,\n        end_chapter=50,\n        end_verse=26,\n        end_book=None\n    ),\n    bible.NormalizedReference(\n        book=bible.Book.MATTHEW,\n        start_chapter=1,\n        start_verse=1,\n        end_chapter=21,\n        end_verse=25,\n        end_book=bible.Book.JOHN\n    ),\n]\nbible.count_books(references)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="Result"',title:'"Result"'},"5\n")))}d.isMDXComponent=!0}}]);