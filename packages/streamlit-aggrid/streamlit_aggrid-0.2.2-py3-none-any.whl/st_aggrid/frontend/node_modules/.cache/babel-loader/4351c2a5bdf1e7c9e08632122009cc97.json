{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean, BeanStub, _ } from \"@ag-grid-community/core\";\n\nvar PivotStage = function (_super) {\n  __extends(PivotStage, _super);\n\n  function PivotStage() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.uniqueValues = {};\n    return _this;\n  }\n\n  PivotStage.prototype.execute = function (params) {\n    var rootNode = params.rowNode;\n    var changedPath = params.changedPath;\n\n    if (this.columnModel.isPivotActive()) {\n      this.executePivotOn(rootNode, changedPath);\n    } else {\n      this.executePivotOff(changedPath);\n    }\n  };\n\n  PivotStage.prototype.executePivotOff = function (changedPath) {\n    this.aggregationColumnsHashLastTime = null;\n    this.uniqueValues = {};\n\n    if (this.columnModel.isSecondaryColumnsPresent()) {\n      this.columnModel.setSecondaryColumns(null, \"rowModelUpdated\");\n\n      if (changedPath) {\n        changedPath.setInactive();\n      }\n    }\n  };\n\n  PivotStage.prototype.executePivotOn = function (rootNode, changedPath) {\n    var uniqueValues = this.bucketUpRowNodes(rootNode);\n    var uniqueValuesChanged = this.setUniqueValues(uniqueValues);\n    var aggregationColumns = this.columnModel.getValueColumns();\n    var aggregationColumnsHash = aggregationColumns.map(function (column) {\n      return column.getId();\n    }).join('#');\n    var aggregationFuncsHash = aggregationColumns.map(function (column) {\n      return column.getAggFunc().toString();\n    }).join('#');\n    var aggregationColumnsChanged = this.aggregationColumnsHashLastTime !== aggregationColumnsHash;\n    var aggregationFuncsChanged = this.aggregationFuncsHashLastTime !== aggregationFuncsHash;\n    this.aggregationColumnsHashLastTime = aggregationColumnsHash;\n    this.aggregationFuncsHashLastTime = aggregationFuncsHash;\n\n    if (uniqueValuesChanged || aggregationColumnsChanged || aggregationFuncsChanged) {\n      var _a = this.pivotColDefService.createPivotColumnDefs(this.uniqueValues),\n          pivotColumnGroupDefs = _a.pivotColumnGroupDefs,\n          pivotColumnDefs = _a.pivotColumnDefs;\n\n      this.pivotColumnDefs = pivotColumnDefs;\n      this.columnModel.setSecondaryColumns(pivotColumnGroupDefs, \"rowModelUpdated\"); // because the secondary columns have changed, then the aggregation needs to visit the whole\n      // tree again, so we make the changedPath not active, to force aggregation to visit all paths.\n\n      if (changedPath) {\n        changedPath.setInactive();\n      }\n    }\n  };\n\n  PivotStage.prototype.setUniqueValues = function (newValues) {\n    var json1 = JSON.stringify(newValues);\n    var json2 = JSON.stringify(this.uniqueValues);\n    var uniqueValuesChanged = json1 !== json2; // we only continue the below if the unique values are different, as otherwise\n    // the result will be the same as the last time we did it\n\n    if (uniqueValuesChanged) {\n      this.uniqueValues = newValues;\n      return true;\n    } else {\n      return false;\n    }\n  }; // returns true if values were different\n\n\n  PivotStage.prototype.bucketUpRowNodes = function (rootNode) {\n    var _this = this; // accessed from inside inner function\n\n\n    var uniqueValues = {}; // finds all leaf groups and calls mapRowNode with it\n\n    var recursivelySearchForLeafNodes = function recursivelySearchForLeafNodes(rowNode) {\n      if (rowNode.leafGroup) {\n        _this.bucketRowNode(rowNode, uniqueValues);\n      } else {\n        rowNode.childrenAfterFilter.forEach(function (child) {\n          recursivelySearchForLeafNodes(child);\n        });\n      }\n    };\n\n    recursivelySearchForLeafNodes(rootNode);\n    return uniqueValues;\n  };\n\n  PivotStage.prototype.bucketRowNode = function (rowNode, uniqueValues) {\n    var pivotColumns = this.columnModel.getPivotColumns();\n\n    if (pivotColumns.length === 0) {\n      rowNode.childrenMapped = null;\n      return;\n    }\n\n    rowNode.childrenMapped = this.bucketChildren(rowNode.childrenAfterFilter, pivotColumns, 0, uniqueValues);\n  };\n\n  PivotStage.prototype.bucketChildren = function (children, pivotColumns, pivotIndex, uniqueValues) {\n    var _this = this;\n\n    var mappedChildren = {};\n    var pivotColumn = pivotColumns[pivotIndex]; // map the children out based on the pivot column\n\n    children.forEach(function (child) {\n      var key = _this.valueService.getKeyForNode(pivotColumn, child);\n\n      if (_.missing(key)) {\n        key = '';\n      }\n\n      if (!uniqueValues[key]) {\n        uniqueValues[key] = {};\n      }\n\n      if (!mappedChildren[key]) {\n        mappedChildren[key] = [];\n      }\n\n      mappedChildren[key].push(child);\n    }); // if it's the last pivot column, return as is, otherwise go one level further in the map\n\n    if (pivotIndex === pivotColumns.length - 1) {\n      return mappedChildren;\n    } else {\n      var result_1 = {};\n\n      _.iterateObject(mappedChildren, function (key, value) {\n        result_1[key] = _this.bucketChildren(value, pivotColumns, pivotIndex + 1, uniqueValues[key]);\n      });\n\n      return result_1;\n    }\n  };\n\n  PivotStage.prototype.getPivotColumnDefs = function () {\n    return this.pivotColumnDefs;\n  };\n\n  __decorate([Autowired('valueService')], PivotStage.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('columnModel')], PivotStage.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('pivotColDefService')], PivotStage.prototype, \"pivotColDefService\", void 0);\n\n  PivotStage = __decorate([Bean('pivotStage')], PivotStage);\n  return PivotStage;\n}(BeanStub);\n\nexport { PivotStage };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/row-grouping/dist/es6/rowGrouping/pivotStage.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","BeanStub","_","PivotStage","_super","_this","apply","uniqueValues","execute","params","rootNode","rowNode","changedPath","columnModel","isPivotActive","executePivotOn","executePivotOff","aggregationColumnsHashLastTime","isSecondaryColumnsPresent","setSecondaryColumns","setInactive","bucketUpRowNodes","uniqueValuesChanged","setUniqueValues","aggregationColumns","getValueColumns","aggregationColumnsHash","map","column","getId","join","aggregationFuncsHash","getAggFunc","toString","aggregationColumnsChanged","aggregationFuncsChanged","aggregationFuncsHashLastTime","_a","pivotColDefService","createPivotColumnDefs","pivotColumnGroupDefs","pivotColumnDefs","newValues","json1","JSON","stringify","json2","recursivelySearchForLeafNodes","leafGroup","bucketRowNode","childrenAfterFilter","forEach","child","pivotColumns","getPivotColumns","childrenMapped","bucketChildren","children","pivotIndex","mappedChildren","pivotColumn","valueService","getKeyForNode","missing","push","result_1","iterateObject","value","getPivotColumnDefs"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean, BeanStub, _ } from \"@ag-grid-community/core\";\nvar PivotStage = /** @class */ (function (_super) {\n    __extends(PivotStage, _super);\n    function PivotStage() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.uniqueValues = {};\n        return _this;\n    }\n    PivotStage.prototype.execute = function (params) {\n        var rootNode = params.rowNode;\n        var changedPath = params.changedPath;\n        if (this.columnModel.isPivotActive()) {\n            this.executePivotOn(rootNode, changedPath);\n        }\n        else {\n            this.executePivotOff(changedPath);\n        }\n    };\n    PivotStage.prototype.executePivotOff = function (changedPath) {\n        this.aggregationColumnsHashLastTime = null;\n        this.uniqueValues = {};\n        if (this.columnModel.isSecondaryColumnsPresent()) {\n            this.columnModel.setSecondaryColumns(null, \"rowModelUpdated\");\n            if (changedPath) {\n                changedPath.setInactive();\n            }\n        }\n    };\n    PivotStage.prototype.executePivotOn = function (rootNode, changedPath) {\n        var uniqueValues = this.bucketUpRowNodes(rootNode);\n        var uniqueValuesChanged = this.setUniqueValues(uniqueValues);\n        var aggregationColumns = this.columnModel.getValueColumns();\n        var aggregationColumnsHash = aggregationColumns.map(function (column) { return column.getId(); }).join('#');\n        var aggregationFuncsHash = aggregationColumns.map(function (column) { return column.getAggFunc().toString(); }).join('#');\n        var aggregationColumnsChanged = this.aggregationColumnsHashLastTime !== aggregationColumnsHash;\n        var aggregationFuncsChanged = this.aggregationFuncsHashLastTime !== aggregationFuncsHash;\n        this.aggregationColumnsHashLastTime = aggregationColumnsHash;\n        this.aggregationFuncsHashLastTime = aggregationFuncsHash;\n        if (uniqueValuesChanged || aggregationColumnsChanged || aggregationFuncsChanged) {\n            var _a = this.pivotColDefService.createPivotColumnDefs(this.uniqueValues), pivotColumnGroupDefs = _a.pivotColumnGroupDefs, pivotColumnDefs = _a.pivotColumnDefs;\n            this.pivotColumnDefs = pivotColumnDefs;\n            this.columnModel.setSecondaryColumns(pivotColumnGroupDefs, \"rowModelUpdated\");\n            // because the secondary columns have changed, then the aggregation needs to visit the whole\n            // tree again, so we make the changedPath not active, to force aggregation to visit all paths.\n            if (changedPath) {\n                changedPath.setInactive();\n            }\n        }\n    };\n    PivotStage.prototype.setUniqueValues = function (newValues) {\n        var json1 = JSON.stringify(newValues);\n        var json2 = JSON.stringify(this.uniqueValues);\n        var uniqueValuesChanged = json1 !== json2;\n        // we only continue the below if the unique values are different, as otherwise\n        // the result will be the same as the last time we did it\n        if (uniqueValuesChanged) {\n            this.uniqueValues = newValues;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    // returns true if values were different\n    PivotStage.prototype.bucketUpRowNodes = function (rootNode) {\n        var _this = this;\n        // accessed from inside inner function\n        var uniqueValues = {};\n        // finds all leaf groups and calls mapRowNode with it\n        var recursivelySearchForLeafNodes = function (rowNode) {\n            if (rowNode.leafGroup) {\n                _this.bucketRowNode(rowNode, uniqueValues);\n            }\n            else {\n                rowNode.childrenAfterFilter.forEach(function (child) {\n                    recursivelySearchForLeafNodes(child);\n                });\n            }\n        };\n        recursivelySearchForLeafNodes(rootNode);\n        return uniqueValues;\n    };\n    PivotStage.prototype.bucketRowNode = function (rowNode, uniqueValues) {\n        var pivotColumns = this.columnModel.getPivotColumns();\n        if (pivotColumns.length === 0) {\n            rowNode.childrenMapped = null;\n            return;\n        }\n        rowNode.childrenMapped = this.bucketChildren(rowNode.childrenAfterFilter, pivotColumns, 0, uniqueValues);\n    };\n    PivotStage.prototype.bucketChildren = function (children, pivotColumns, pivotIndex, uniqueValues) {\n        var _this = this;\n        var mappedChildren = {};\n        var pivotColumn = pivotColumns[pivotIndex];\n        // map the children out based on the pivot column\n        children.forEach(function (child) {\n            var key = _this.valueService.getKeyForNode(pivotColumn, child);\n            if (_.missing(key)) {\n                key = '';\n            }\n            if (!uniqueValues[key]) {\n                uniqueValues[key] = {};\n            }\n            if (!mappedChildren[key]) {\n                mappedChildren[key] = [];\n            }\n            mappedChildren[key].push(child);\n        });\n        // if it's the last pivot column, return as is, otherwise go one level further in the map\n        if (pivotIndex === pivotColumns.length - 1) {\n            return mappedChildren;\n        }\n        else {\n            var result_1 = {};\n            _.iterateObject(mappedChildren, function (key, value) {\n                result_1[key] = _this.bucketChildren(value, pivotColumns, pivotIndex + 1, uniqueValues[key]);\n            });\n            return result_1;\n        }\n    };\n    PivotStage.prototype.getPivotColumnDefs = function () {\n        return this.pivotColumnDefs;\n    };\n    __decorate([\n        Autowired('valueService')\n    ], PivotStage.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], PivotStage.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('pivotColDefService')\n    ], PivotStage.prototype, \"pivotColDefService\", void 0);\n    PivotStage = __decorate([\n        Bean('pivotStage')\n    ], PivotStage);\n    return PivotStage;\n}(BeanStub));\nexport { PivotStage };\n"]},"metadata":{},"sourceType":"module"}