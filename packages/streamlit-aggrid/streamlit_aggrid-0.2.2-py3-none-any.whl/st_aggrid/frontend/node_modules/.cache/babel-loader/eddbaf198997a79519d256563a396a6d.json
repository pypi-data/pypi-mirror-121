{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { _, AgAbstractField, AgCheckbox, AgGroupComponent, AgRadioButton, AgToggleButton, Autowired, ChartType, Component, DragAndDropService, DragSourceType, PostConstruct, VerticalDirection } from \"@ag-grid-community/core\";\nimport { ChartController } from \"../../chartController\";\n\nvar ChartDataPanel = function (_super) {\n  __extends(ChartDataPanel, _super);\n\n  function ChartDataPanel(chartController) {\n    var _this = _super.call(this, ChartDataPanel.TEMPLATE) || this;\n\n    _this.columnComps = new Map();\n    _this.chartController = chartController;\n    return _this;\n  }\n\n  ChartDataPanel.prototype.init = function () {\n    this.updatePanels();\n    this.addManagedListener(this.chartController, ChartController.EVENT_CHART_UPDATED, this.updatePanels.bind(this));\n  };\n\n  ChartDataPanel.prototype.destroy = function () {\n    this.clearComponents();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  ChartDataPanel.prototype.updatePanels = function () {\n    var _this = this;\n\n    var currentChartType = this.chartType;\n\n    var _a = this.chartController.getColStateForMenu(),\n        dimensionCols = _a.dimensionCols,\n        valueCols = _a.valueCols;\n\n    var colIds = dimensionCols.map(function (c) {\n      return c.colId;\n    }).concat(valueCols.map(function (c) {\n      return c.colId;\n    }));\n    this.chartType = this.chartController.getChartType();\n\n    if (_.areEqual(_.keys(this.columnComps), colIds) && this.chartType === currentChartType) {\n      // if possible, we just update existing components\n      __spreadArrays(dimensionCols, valueCols).forEach(function (col) {\n        _this.columnComps.get(col.colId).setValue(col.selected, true);\n      });\n\n      if (this.chartController.isActiveXYChart()) {\n        var getSeriesLabel_1 = this.generateGetSeriesLabel();\n        valueCols.forEach(function (col) {\n          _this.columnComps.get(col.colId).setLabel(getSeriesLabel_1(col));\n        });\n      }\n    } else {\n      // otherwise we re-create everything\n      this.clearComponents();\n      this.createCategoriesGroupComponent(dimensionCols);\n      this.createSeriesGroupComponent(valueCols);\n    }\n  };\n\n  ChartDataPanel.prototype.addComponent = function (parent, component) {\n    var eDiv = document.createElement('div');\n    eDiv.className = 'ag-chart-data-section';\n    eDiv.appendChild(component.getGui());\n    parent.appendChild(eDiv);\n  };\n\n  ChartDataPanel.prototype.addChangeListener = function (component, columnState) {\n    var _this = this;\n\n    this.addManagedListener(component, AgAbstractField.EVENT_CHANGED, function () {\n      columnState.selected = component.getValue();\n\n      _this.chartController.updateForPanelChange(columnState);\n    });\n  };\n\n  ChartDataPanel.prototype.createCategoriesGroupComponent = function (columns) {\n    var _this = this;\n\n    this.categoriesGroupComp = this.createBean(new AgGroupComponent({\n      title: this.getCategoryGroupTitle(),\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      suppressOpenCloseIcons: false,\n      cssIdentifier: 'charts-data'\n    }));\n    var inputName = \"chartDimension\" + this.getCompId();\n    columns.forEach(function (col) {\n      var comp = _this.categoriesGroupComp.createManagedBean(new AgRadioButton());\n\n      comp.setLabel(_.escapeString(col.displayName));\n      comp.setValue(col.selected);\n      comp.setInputName(inputName);\n\n      _this.addChangeListener(comp, col);\n\n      _this.categoriesGroupComp.addItem(comp);\n\n      _this.columnComps.set(col.colId, comp);\n    });\n    this.addComponent(this.getGui(), this.categoriesGroupComp);\n  };\n\n  ChartDataPanel.prototype.createSeriesGroupComponent = function (columns) {\n    var _this = this;\n\n    this.seriesGroupComp = this.createManagedBean(new AgGroupComponent({\n      title: this.getSeriesGroupTitle(),\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      suppressOpenCloseIcons: false,\n      cssIdentifier: 'charts-data'\n    }));\n\n    if (this.chartController.isActiveXYChart()) {\n      var pairedModeToggle = this.seriesGroupComp.createManagedBean(new AgToggleButton());\n      var chartProxy_1 = this.chartController.getChartProxy();\n      pairedModeToggle.setLabel(this.chartTranslator.translate('paired')).setLabelAlignment('left').setLabelWidth('flex').setInputWidth(45).setValue(chartProxy_1.getSeriesOption('paired') || false).onValueChange(function (newValue) {\n        chartProxy_1.setSeriesOption('paired', newValue);\n\n        _this.chartController.updateForGridChange();\n      });\n      this.seriesGroupComp.addItem(pairedModeToggle);\n    }\n\n    var getSeriesLabel = this.generateGetSeriesLabel();\n    columns.forEach(function (col) {\n      var comp = _this.seriesGroupComp.createManagedBean(new AgCheckbox());\n\n      comp.addCssClass('ag-data-select-checkbox');\n      var label = getSeriesLabel(col);\n      comp.setLabel(label);\n      comp.setValue(col.selected);\n\n      _this.addChangeListener(comp, col);\n\n      _this.seriesGroupComp.addItem(comp);\n\n      _this.columnComps.set(col.colId, comp);\n\n      _this.addDragHandle(comp, col);\n    });\n    this.addComponent(this.getGui(), this.seriesGroupComp);\n    var dropTarget = {\n      getContainer: this.getGui.bind(this),\n      onDragging: this.onDragging.bind(this),\n      isInterestedIn: this.isInterestedIn.bind(this)\n    };\n    this.dragAndDropService.addDropTarget(dropTarget);\n  };\n\n  ChartDataPanel.prototype.addDragHandle = function (comp, col) {\n    var _this = this;\n\n    var eDragHandle = _.createIconNoSpan('columnDrag', this.gridOptionsWrapper);\n\n    _.addCssClass(eDragHandle, 'ag-drag-handle');\n\n    _.addCssClass(eDragHandle, 'ag-chart-data-column-drag-handle');\n\n    comp.getGui().insertAdjacentElement('beforeend', eDragHandle);\n    var dragSource = {\n      type: DragSourceType.ChartPanel,\n      eElement: eDragHandle,\n      dragItemName: col.displayName,\n      defaultIconName: DragAndDropService.ICON_MOVE,\n      getDragItem: function () {\n        return {\n          columns: [col.column]\n        };\n      },\n      onDragStopped: function () {\n        _this.insertIndex = undefined;\n      }\n    };\n    this.dragAndDropService.addDragSource(dragSource, true);\n    this.addDestroyFunc(function () {\n      return _this.dragAndDropService.removeDragSource(dragSource);\n    });\n  };\n\n  ChartDataPanel.prototype.generateGetSeriesLabel = function () {\n    if (!this.chartController.isActiveXYChart()) {\n      return function (col) {\n        return _.escapeString(col.displayName);\n      };\n    }\n\n    var isBubble = this.chartType === ChartType.Bubble;\n    var isInPairedMode = this.isInPairedMode();\n    var selectedValuesCount = 0;\n    var indexToAxisLabel = new Map();\n    indexToAxisLabel.set(0, 'X');\n    indexToAxisLabel.set(1, 'Y');\n    indexToAxisLabel.set(2, 'size');\n    return function (col) {\n      var escapedLabel = _.escapeString(col.displayName);\n\n      if (!col.selected) {\n        return escapedLabel;\n      }\n\n      var axisLabel;\n\n      if (isInPairedMode) {\n        axisLabel = indexToAxisLabel.get(selectedValuesCount % (isBubble ? 3 : 2));\n      } else {\n        if (selectedValuesCount === 0) {\n          axisLabel = 'X';\n        } else {\n          axisLabel = isBubble && selectedValuesCount % 2 === 0 ? 'size' : 'Y';\n        }\n      }\n\n      selectedValuesCount++;\n      return escapedLabel + \" (\" + axisLabel + \")\";\n    };\n  };\n\n  ChartDataPanel.prototype.getCategoryGroupTitle = function () {\n    return this.chartTranslator.translate(this.chartController.isActiveXYChart() ? 'labels' : 'categories');\n  };\n\n  ChartDataPanel.prototype.getSeriesGroupTitle = function () {\n    return this.chartTranslator.translate(this.chartController.isActiveXYChart() ? 'xyValues' : 'series');\n  };\n\n  ChartDataPanel.prototype.isInPairedMode = function () {\n    return this.chartController.isActiveXYChart() && this.chartController.getChartProxy().getSeriesOption('paired');\n  };\n\n  ChartDataPanel.prototype.clearComponents = function () {\n    _.clearElement(this.getGui());\n\n    this.categoriesGroupComp = this.destroyBean(this.categoriesGroupComp);\n    this.seriesGroupComp = this.destroyBean(this.seriesGroupComp);\n    this.columnComps.clear();\n  };\n\n  ChartDataPanel.prototype.onDragging = function (draggingEvent) {\n    var _this = this;\n\n    if (this.checkInsertIndex(draggingEvent)) {\n      var column_1 = draggingEvent.dragItem.columns[0];\n\n      var _a = this.chartController.getColStateForMenu(),\n          dimensionCols = _a.dimensionCols,\n          valueCols = _a.valueCols;\n\n      __spreadArrays(dimensionCols, valueCols).filter(function (state) {\n        return state.column === column_1;\n      }).forEach(function (state) {\n        state.order = _this.insertIndex;\n\n        _this.chartController.updateForPanelChange(state);\n      });\n    }\n  };\n\n  ChartDataPanel.prototype.checkInsertIndex = function (draggingEvent) {\n    if (_.missing(draggingEvent.vDirection)) {\n      return false;\n    }\n\n    var newIndex = 0;\n    var mouseEvent = draggingEvent.event;\n    this.columnComps.forEach(function (comp) {\n      var rect = comp.getGui().getBoundingClientRect();\n      var verticalFit = mouseEvent.clientY >= (draggingEvent.vDirection === VerticalDirection.Down ? rect.top : rect.bottom);\n\n      if (verticalFit) {\n        newIndex++;\n      }\n    });\n    var changed = this.insertIndex !== undefined && newIndex !== this.insertIndex;\n    this.insertIndex = newIndex;\n    return changed;\n  };\n\n  ChartDataPanel.prototype.isInterestedIn = function (type) {\n    return type === DragSourceType.ChartPanel;\n  };\n\n  ChartDataPanel.TEMPLATE = \"<div class=\\\"ag-chart-data-wrapper\\\"></div>\";\n\n  __decorate([Autowired('dragAndDropService')], ChartDataPanel.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([Autowired('chartTranslator')], ChartDataPanel.prototype, \"chartTranslator\", void 0);\n\n  __decorate([PostConstruct], ChartDataPanel.prototype, \"init\", null);\n\n  return ChartDataPanel;\n}(Component);\n\nexport { ChartDataPanel };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/charts/dist/es6/charts/chartComp/menu/data/chartDataPanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","_","AgAbstractField","AgCheckbox","AgGroupComponent","AgRadioButton","AgToggleButton","Autowired","ChartType","Component","DragAndDropService","DragSourceType","PostConstruct","VerticalDirection","ChartController","ChartDataPanel","_super","chartController","_this","call","TEMPLATE","columnComps","Map","init","updatePanels","addManagedListener","EVENT_CHART_UPDATED","bind","destroy","clearComponents","currentChartType","chartType","_a","getColStateForMenu","dimensionCols","valueCols","colIds","map","colId","concat","getChartType","areEqual","keys","forEach","col","get","setValue","selected","isActiveXYChart","getSeriesLabel_1","generateGetSeriesLabel","setLabel","createCategoriesGroupComponent","createSeriesGroupComponent","addComponent","parent","component","eDiv","document","createElement","className","appendChild","getGui","addChangeListener","columnState","EVENT_CHANGED","getValue","updateForPanelChange","columns","categoriesGroupComp","createBean","title","getCategoryGroupTitle","enabled","suppressEnabledCheckbox","suppressOpenCloseIcons","cssIdentifier","inputName","getCompId","comp","createManagedBean","escapeString","displayName","setInputName","addItem","set","seriesGroupComp","getSeriesGroupTitle","pairedModeToggle","chartProxy_1","getChartProxy","chartTranslator","translate","setLabelAlignment","setLabelWidth","setInputWidth","getSeriesOption","onValueChange","newValue","setSeriesOption","updateForGridChange","getSeriesLabel","addCssClass","label","addDragHandle","dropTarget","getContainer","onDragging","isInterestedIn","dragAndDropService","addDropTarget","eDragHandle","createIconNoSpan","gridOptionsWrapper","insertAdjacentElement","dragSource","type","ChartPanel","eElement","dragItemName","defaultIconName","ICON_MOVE","getDragItem","column","onDragStopped","insertIndex","undefined","addDragSource","addDestroyFunc","removeDragSource","isBubble","Bubble","isInPairedMode","selectedValuesCount","indexToAxisLabel","escapedLabel","axisLabel","clearElement","destroyBean","clear","draggingEvent","checkInsertIndex","column_1","dragItem","filter","state","order","missing","vDirection","newIndex","mouseEvent","event","rect","getBoundingClientRect","verticalFit","clientY","Down","top","bottom","changed"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { _, AgAbstractField, AgCheckbox, AgGroupComponent, AgRadioButton, AgToggleButton, Autowired, ChartType, Component, DragAndDropService, DragSourceType, PostConstruct, VerticalDirection } from \"@ag-grid-community/core\";\nimport { ChartController } from \"../../chartController\";\nvar ChartDataPanel = /** @class */ (function (_super) {\n    __extends(ChartDataPanel, _super);\n    function ChartDataPanel(chartController) {\n        var _this = _super.call(this, ChartDataPanel.TEMPLATE) || this;\n        _this.columnComps = new Map();\n        _this.chartController = chartController;\n        return _this;\n    }\n    ChartDataPanel.prototype.init = function () {\n        this.updatePanels();\n        this.addManagedListener(this.chartController, ChartController.EVENT_CHART_UPDATED, this.updatePanels.bind(this));\n    };\n    ChartDataPanel.prototype.destroy = function () {\n        this.clearComponents();\n        _super.prototype.destroy.call(this);\n    };\n    ChartDataPanel.prototype.updatePanels = function () {\n        var _this = this;\n        var currentChartType = this.chartType;\n        var _a = this.chartController.getColStateForMenu(), dimensionCols = _a.dimensionCols, valueCols = _a.valueCols;\n        var colIds = dimensionCols.map(function (c) { return c.colId; }).concat(valueCols.map(function (c) { return c.colId; }));\n        this.chartType = this.chartController.getChartType();\n        if (_.areEqual(_.keys(this.columnComps), colIds) && this.chartType === currentChartType) {\n            // if possible, we just update existing components\n            __spreadArrays(dimensionCols, valueCols).forEach(function (col) {\n                _this.columnComps.get(col.colId).setValue(col.selected, true);\n            });\n            if (this.chartController.isActiveXYChart()) {\n                var getSeriesLabel_1 = this.generateGetSeriesLabel();\n                valueCols.forEach(function (col) {\n                    _this.columnComps.get(col.colId).setLabel(getSeriesLabel_1(col));\n                });\n            }\n        }\n        else {\n            // otherwise we re-create everything\n            this.clearComponents();\n            this.createCategoriesGroupComponent(dimensionCols);\n            this.createSeriesGroupComponent(valueCols);\n        }\n    };\n    ChartDataPanel.prototype.addComponent = function (parent, component) {\n        var eDiv = document.createElement('div');\n        eDiv.className = 'ag-chart-data-section';\n        eDiv.appendChild(component.getGui());\n        parent.appendChild(eDiv);\n    };\n    ChartDataPanel.prototype.addChangeListener = function (component, columnState) {\n        var _this = this;\n        this.addManagedListener(component, AgAbstractField.EVENT_CHANGED, function () {\n            columnState.selected = component.getValue();\n            _this.chartController.updateForPanelChange(columnState);\n        });\n    };\n    ChartDataPanel.prototype.createCategoriesGroupComponent = function (columns) {\n        var _this = this;\n        this.categoriesGroupComp = this.createBean(new AgGroupComponent({\n            title: this.getCategoryGroupTitle(),\n            enabled: true,\n            suppressEnabledCheckbox: true,\n            suppressOpenCloseIcons: false,\n            cssIdentifier: 'charts-data'\n        }));\n        var inputName = \"chartDimension\" + this.getCompId();\n        columns.forEach(function (col) {\n            var comp = _this.categoriesGroupComp.createManagedBean(new AgRadioButton());\n            comp.setLabel(_.escapeString(col.displayName));\n            comp.setValue(col.selected);\n            comp.setInputName(inputName);\n            _this.addChangeListener(comp, col);\n            _this.categoriesGroupComp.addItem(comp);\n            _this.columnComps.set(col.colId, comp);\n        });\n        this.addComponent(this.getGui(), this.categoriesGroupComp);\n    };\n    ChartDataPanel.prototype.createSeriesGroupComponent = function (columns) {\n        var _this = this;\n        this.seriesGroupComp = this.createManagedBean(new AgGroupComponent({\n            title: this.getSeriesGroupTitle(),\n            enabled: true,\n            suppressEnabledCheckbox: true,\n            suppressOpenCloseIcons: false,\n            cssIdentifier: 'charts-data'\n        }));\n        if (this.chartController.isActiveXYChart()) {\n            var pairedModeToggle = this.seriesGroupComp.createManagedBean(new AgToggleButton());\n            var chartProxy_1 = this.chartController.getChartProxy();\n            pairedModeToggle\n                .setLabel(this.chartTranslator.translate('paired'))\n                .setLabelAlignment('left')\n                .setLabelWidth('flex')\n                .setInputWidth(45)\n                .setValue(chartProxy_1.getSeriesOption('paired') || false)\n                .onValueChange(function (newValue) {\n                chartProxy_1.setSeriesOption('paired', newValue);\n                _this.chartController.updateForGridChange();\n            });\n            this.seriesGroupComp.addItem(pairedModeToggle);\n        }\n        var getSeriesLabel = this.generateGetSeriesLabel();\n        columns.forEach(function (col) {\n            var comp = _this.seriesGroupComp.createManagedBean(new AgCheckbox());\n            comp.addCssClass('ag-data-select-checkbox');\n            var label = getSeriesLabel(col);\n            comp.setLabel(label);\n            comp.setValue(col.selected);\n            _this.addChangeListener(comp, col);\n            _this.seriesGroupComp.addItem(comp);\n            _this.columnComps.set(col.colId, comp);\n            _this.addDragHandle(comp, col);\n        });\n        this.addComponent(this.getGui(), this.seriesGroupComp);\n        var dropTarget = {\n            getContainer: this.getGui.bind(this),\n            onDragging: this.onDragging.bind(this),\n            isInterestedIn: this.isInterestedIn.bind(this),\n        };\n        this.dragAndDropService.addDropTarget(dropTarget);\n    };\n    ChartDataPanel.prototype.addDragHandle = function (comp, col) {\n        var _this = this;\n        var eDragHandle = _.createIconNoSpan('columnDrag', this.gridOptionsWrapper);\n        _.addCssClass(eDragHandle, 'ag-drag-handle');\n        _.addCssClass(eDragHandle, 'ag-chart-data-column-drag-handle');\n        comp.getGui().insertAdjacentElement('beforeend', eDragHandle);\n        var dragSource = {\n            type: DragSourceType.ChartPanel,\n            eElement: eDragHandle,\n            dragItemName: col.displayName,\n            defaultIconName: DragAndDropService.ICON_MOVE,\n            getDragItem: function () { return ({ columns: [col.column] }); },\n            onDragStopped: function () { _this.insertIndex = undefined; }\n        };\n        this.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource); });\n    };\n    ChartDataPanel.prototype.generateGetSeriesLabel = function () {\n        if (!this.chartController.isActiveXYChart()) {\n            return function (col) { return _.escapeString(col.displayName); };\n        }\n        var isBubble = this.chartType === ChartType.Bubble;\n        var isInPairedMode = this.isInPairedMode();\n        var selectedValuesCount = 0;\n        var indexToAxisLabel = new Map();\n        indexToAxisLabel.set(0, 'X');\n        indexToAxisLabel.set(1, 'Y');\n        indexToAxisLabel.set(2, 'size');\n        return function (col) {\n            var escapedLabel = _.escapeString(col.displayName);\n            if (!col.selected) {\n                return escapedLabel;\n            }\n            var axisLabel;\n            if (isInPairedMode) {\n                axisLabel = indexToAxisLabel.get(selectedValuesCount % (isBubble ? 3 : 2));\n            }\n            else {\n                if (selectedValuesCount === 0) {\n                    axisLabel = 'X';\n                }\n                else {\n                    axisLabel = isBubble && selectedValuesCount % 2 === 0 ? 'size' : 'Y';\n                }\n            }\n            selectedValuesCount++;\n            return escapedLabel + \" (\" + axisLabel + \")\";\n        };\n    };\n    ChartDataPanel.prototype.getCategoryGroupTitle = function () {\n        return this.chartTranslator.translate(this.chartController.isActiveXYChart() ? 'labels' : 'categories');\n    };\n    ChartDataPanel.prototype.getSeriesGroupTitle = function () {\n        return this.chartTranslator.translate(this.chartController.isActiveXYChart() ? 'xyValues' : 'series');\n    };\n    ChartDataPanel.prototype.isInPairedMode = function () {\n        return this.chartController.isActiveXYChart() && this.chartController.getChartProxy().getSeriesOption('paired');\n    };\n    ChartDataPanel.prototype.clearComponents = function () {\n        _.clearElement(this.getGui());\n        this.categoriesGroupComp = this.destroyBean(this.categoriesGroupComp);\n        this.seriesGroupComp = this.destroyBean(this.seriesGroupComp);\n        this.columnComps.clear();\n    };\n    ChartDataPanel.prototype.onDragging = function (draggingEvent) {\n        var _this = this;\n        if (this.checkInsertIndex(draggingEvent)) {\n            var column_1 = draggingEvent.dragItem.columns[0];\n            var _a = this.chartController.getColStateForMenu(), dimensionCols = _a.dimensionCols, valueCols = _a.valueCols;\n            __spreadArrays(dimensionCols, valueCols).filter(function (state) { return state.column === column_1; })\n                .forEach(function (state) {\n                state.order = _this.insertIndex;\n                _this.chartController.updateForPanelChange(state);\n            });\n        }\n    };\n    ChartDataPanel.prototype.checkInsertIndex = function (draggingEvent) {\n        if (_.missing(draggingEvent.vDirection)) {\n            return false;\n        }\n        var newIndex = 0;\n        var mouseEvent = draggingEvent.event;\n        this.columnComps.forEach(function (comp) {\n            var rect = comp.getGui().getBoundingClientRect();\n            var verticalFit = mouseEvent.clientY >= (draggingEvent.vDirection === VerticalDirection.Down ? rect.top : rect.bottom);\n            if (verticalFit) {\n                newIndex++;\n            }\n        });\n        var changed = this.insertIndex !== undefined && newIndex !== this.insertIndex;\n        this.insertIndex = newIndex;\n        return changed;\n    };\n    ChartDataPanel.prototype.isInterestedIn = function (type) {\n        return type === DragSourceType.ChartPanel;\n    };\n    ChartDataPanel.TEMPLATE = \"<div class=\\\"ag-chart-data-wrapper\\\"></div>\";\n    __decorate([\n        Autowired('dragAndDropService')\n    ], ChartDataPanel.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        Autowired('chartTranslator')\n    ], ChartDataPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        PostConstruct\n    ], ChartDataPanel.prototype, \"init\", null);\n    return ChartDataPanel;\n}(Component));\nexport { ChartDataPanel };\n"]},"metadata":{},"sourceType":"module"}