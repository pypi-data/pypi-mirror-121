{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Events, Bean, Autowired, _ } from \"@ag-grid-community/core\";\n\nvar ModelItemUtils = function () {\n  function ModelItemUtils() {}\n\n  ModelItemUtils.prototype.selectAllChildren = function (colTree, selectAllChecked, eventType) {\n    var cols = this.extractAllLeafColumns(colTree);\n    this.setAllColumns(cols, selectAllChecked, eventType);\n  };\n\n  ModelItemUtils.prototype.setColumn = function (col, selectAllChecked, eventType) {\n    this.setAllColumns([col], selectAllChecked, eventType);\n  };\n\n  ModelItemUtils.prototype.setAllColumns = function (cols, selectAllChecked, eventType) {\n    if (this.columnModel.isPivotMode()) {\n      this.setAllPivot(cols, selectAllChecked, eventType);\n    } else {\n      this.setAllVisible(cols, selectAllChecked, eventType);\n    }\n  };\n\n  ModelItemUtils.prototype.extractAllLeafColumns = function (allItems) {\n    var res = [];\n\n    var recursiveFunc = function (items) {\n      items.forEach(function (item) {\n        if (!item.isPassesFilter()) {\n          return;\n        }\n\n        if (item.isGroup()) {\n          recursiveFunc(item.getChildren());\n        } else {\n          res.push(item.getColumn());\n        }\n      });\n    };\n\n    recursiveFunc(allItems);\n    return res;\n  };\n\n  ModelItemUtils.prototype.setAllVisible = function (columns, visible, eventType) {\n    var colStateItems = [];\n    columns.forEach(function (col) {\n      if (col.getColDef().lockVisible) {\n        return;\n      }\n\n      if (col.isVisible() != visible) {\n        colStateItems.push({\n          colId: col.getId(),\n          hide: !visible\n        });\n      }\n    });\n\n    if (colStateItems.length > 0) {\n      this.columnModel.applyColumnState({\n        state: colStateItems\n      }, eventType);\n    }\n  };\n\n  ModelItemUtils.prototype.setAllPivot = function (columns, value, eventType) {\n    if (this.gridOptionsWrapper.isFunctionsPassive()) {\n      this.setAllPivotPassive(columns, value);\n    } else {\n      this.setAllPivotActive(columns, value, eventType);\n    }\n  };\n\n  ModelItemUtils.prototype.setAllPivotPassive = function (columns, value) {\n    var copyOfPivotColumns = this.columnModel.getPivotColumns().slice();\n    var copyOfValueColumns = this.columnModel.getValueColumns().slice();\n    var copyOfRowGroupColumns = this.columnModel.getRowGroupColumns().slice();\n    var pivotChanged = false;\n    var valueChanged = false;\n    var rowGroupChanged = false;\n\n    var turnOnAction = function (col) {\n      // don't change any column that's already got a function active\n      if (col.isAnyFunctionActive()) {\n        return;\n      }\n\n      if (col.isAllowValue()) {\n        copyOfValueColumns.push(col);\n        valueChanged = true;\n      } else if (col.isAllowRowGroup()) {\n        copyOfRowGroupColumns.push(col);\n        pivotChanged = true;\n      } else if (col.isAllowPivot()) {\n        copyOfPivotColumns.push(col);\n        rowGroupChanged = true;\n      }\n    };\n\n    var turnOffAction = function (col) {\n      if (!col.isAnyFunctionActive()) {\n        return;\n      }\n\n      if (copyOfPivotColumns.indexOf(col) >= 0) {\n        _.removeFromArray(copyOfPivotColumns, col);\n\n        pivotChanged = true;\n      }\n\n      if (copyOfValueColumns.indexOf(col) >= 0) {\n        _.removeFromArray(copyOfValueColumns, col);\n\n        valueChanged = true;\n      }\n\n      if (copyOfRowGroupColumns.indexOf(col) >= 0) {\n        _.removeFromArray(copyOfRowGroupColumns, col);\n\n        rowGroupChanged = true;\n      }\n    };\n\n    var action = value ? turnOnAction : turnOffAction;\n    columns.forEach(action);\n\n    if (pivotChanged) {\n      var event_1 = {\n        type: Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,\n        columns: copyOfPivotColumns,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_1);\n    }\n\n    if (rowGroupChanged) {\n      var event_2 = {\n        type: Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,\n        columns: copyOfRowGroupColumns,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_2);\n    }\n\n    if (valueChanged) {\n      var event_3 = {\n        type: Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,\n        columns: copyOfRowGroupColumns,\n        api: this.gridApi,\n        columnApi: this.columnApi\n      };\n      this.eventService.dispatchEvent(event_3);\n    }\n  };\n\n  ModelItemUtils.prototype.setAllPivotActive = function (columns, value, eventType) {\n    var _this = this;\n\n    var colStateItems = [];\n\n    var turnOnAction = function (col) {\n      // don't change any column that's already got a function active\n      if (col.isAnyFunctionActive()) {\n        return;\n      }\n\n      if (col.isAllowValue()) {\n        var aggFunc = typeof col.getAggFunc() === 'string' ? col.getAggFunc() : _this.aggFuncService.getDefaultAggFunc(col);\n        colStateItems.push({\n          colId: col.getId(),\n          aggFunc: aggFunc\n        });\n      } else if (col.isAllowRowGroup()) {\n        colStateItems.push({\n          colId: col.getId(),\n          rowGroup: true\n        });\n      } else if (col.isAllowPivot()) {\n        colStateItems.push({\n          colId: col.getId(),\n          pivot: true\n        });\n      }\n    };\n\n    var turnOffAction = function (col) {\n      var isActive = col.isPivotActive() || col.isRowGroupActive() || col.isValueActive();\n\n      if (isActive) {\n        colStateItems.push({\n          colId: col.getId(),\n          pivot: false,\n          rowGroup: false,\n          aggFunc: null\n        });\n      }\n    };\n\n    var action = value ? turnOnAction : turnOffAction;\n    columns.forEach(action);\n\n    if (colStateItems.length > 0) {\n      this.columnModel.applyColumnState({\n        state: colStateItems\n      }, eventType);\n    }\n  };\n\n  __decorate([Autowired('aggFuncService')], ModelItemUtils.prototype, \"aggFuncService\", void 0);\n\n  __decorate([Autowired('columnModel')], ModelItemUtils.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], ModelItemUtils.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([Autowired('columnApi')], ModelItemUtils.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], ModelItemUtils.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('eventService')], ModelItemUtils.prototype, \"eventService\", void 0);\n\n  ModelItemUtils = __decorate([Bean('modelItemUtils')], ModelItemUtils);\n  return ModelItemUtils;\n}();\n\nexport { ModelItemUtils };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/column-tool-panel/dist/es6/columnToolPanel/modelItemUtils.js"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","Events","Bean","Autowired","_","ModelItemUtils","prototype","selectAllChildren","colTree","selectAllChecked","eventType","cols","extractAllLeafColumns","setAllColumns","setColumn","col","columnModel","isPivotMode","setAllPivot","setAllVisible","allItems","res","recursiveFunc","items","forEach","item","isPassesFilter","isGroup","getChildren","push","getColumn","columns","visible","colStateItems","getColDef","lockVisible","isVisible","colId","getId","hide","applyColumnState","state","value","gridOptionsWrapper","isFunctionsPassive","setAllPivotPassive","setAllPivotActive","copyOfPivotColumns","getPivotColumns","slice","copyOfValueColumns","getValueColumns","copyOfRowGroupColumns","getRowGroupColumns","pivotChanged","valueChanged","rowGroupChanged","turnOnAction","isAnyFunctionActive","isAllowValue","isAllowRowGroup","isAllowPivot","turnOffAction","indexOf","removeFromArray","action","event_1","type","EVENT_COLUMN_PIVOT_CHANGE_REQUEST","api","gridApi","columnApi","eventService","dispatchEvent","event_2","EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST","event_3","EVENT_COLUMN_VALUE_CHANGE_REQUEST","_this","aggFunc","getAggFunc","aggFuncService","getDefaultAggFunc","rowGroup","pivot","isActive","isPivotActive","isRowGroupActive","isValueActive"],"mappings":"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","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Events, Bean, Autowired, _ } from \"@ag-grid-community/core\";\nvar ModelItemUtils = /** @class */ (function () {\n    function ModelItemUtils() {\n    }\n    ModelItemUtils.prototype.selectAllChildren = function (colTree, selectAllChecked, eventType) {\n        var cols = this.extractAllLeafColumns(colTree);\n        this.setAllColumns(cols, selectAllChecked, eventType);\n    };\n    ModelItemUtils.prototype.setColumn = function (col, selectAllChecked, eventType) {\n        this.setAllColumns([col], selectAllChecked, eventType);\n    };\n    ModelItemUtils.prototype.setAllColumns = function (cols, selectAllChecked, eventType) {\n        if (this.columnModel.isPivotMode()) {\n            this.setAllPivot(cols, selectAllChecked, eventType);\n        }\n        else {\n            this.setAllVisible(cols, selectAllChecked, eventType);\n        }\n    };\n    ModelItemUtils.prototype.extractAllLeafColumns = function (allItems) {\n        var res = [];\n        var recursiveFunc = function (items) {\n            items.forEach(function (item) {\n                if (!item.isPassesFilter()) {\n                    return;\n                }\n                if (item.isGroup()) {\n                    recursiveFunc(item.getChildren());\n                }\n                else {\n                    res.push(item.getColumn());\n                }\n            });\n        };\n        recursiveFunc(allItems);\n        return res;\n    };\n    ModelItemUtils.prototype.setAllVisible = function (columns, visible, eventType) {\n        var colStateItems = [];\n        columns.forEach(function (col) {\n            if (col.getColDef().lockVisible) {\n                return;\n            }\n            if (col.isVisible() != visible) {\n                colStateItems.push({\n                    colId: col.getId(),\n                    hide: !visible\n                });\n            }\n        });\n        if (colStateItems.length > 0) {\n            this.columnModel.applyColumnState({ state: colStateItems }, eventType);\n        }\n    };\n    ModelItemUtils.prototype.setAllPivot = function (columns, value, eventType) {\n        if (this.gridOptionsWrapper.isFunctionsPassive()) {\n            this.setAllPivotPassive(columns, value);\n        }\n        else {\n            this.setAllPivotActive(columns, value, eventType);\n        }\n    };\n    ModelItemUtils.prototype.setAllPivotPassive = function (columns, value) {\n        var copyOfPivotColumns = this.columnModel.getPivotColumns().slice();\n        var copyOfValueColumns = this.columnModel.getValueColumns().slice();\n        var copyOfRowGroupColumns = this.columnModel.getRowGroupColumns().slice();\n        var pivotChanged = false;\n        var valueChanged = false;\n        var rowGroupChanged = false;\n        var turnOnAction = function (col) {\n            // don't change any column that's already got a function active\n            if (col.isAnyFunctionActive()) {\n                return;\n            }\n            if (col.isAllowValue()) {\n                copyOfValueColumns.push(col);\n                valueChanged = true;\n            }\n            else if (col.isAllowRowGroup()) {\n                copyOfRowGroupColumns.push(col);\n                pivotChanged = true;\n            }\n            else if (col.isAllowPivot()) {\n                copyOfPivotColumns.push(col);\n                rowGroupChanged = true;\n            }\n        };\n        var turnOffAction = function (col) {\n            if (!col.isAnyFunctionActive()) {\n                return;\n            }\n            if (copyOfPivotColumns.indexOf(col) >= 0) {\n                _.removeFromArray(copyOfPivotColumns, col);\n                pivotChanged = true;\n            }\n            if (copyOfValueColumns.indexOf(col) >= 0) {\n                _.removeFromArray(copyOfValueColumns, col);\n                valueChanged = true;\n            }\n            if (copyOfRowGroupColumns.indexOf(col) >= 0) {\n                _.removeFromArray(copyOfRowGroupColumns, col);\n                rowGroupChanged = true;\n            }\n        };\n        var action = value ? turnOnAction : turnOffAction;\n        columns.forEach(action);\n        if (pivotChanged) {\n            var event_1 = {\n                type: Events.EVENT_COLUMN_PIVOT_CHANGE_REQUEST,\n                columns: copyOfPivotColumns,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n        if (rowGroupChanged) {\n            var event_2 = {\n                type: Events.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST,\n                columns: copyOfRowGroupColumns,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_2);\n        }\n        if (valueChanged) {\n            var event_3 = {\n                type: Events.EVENT_COLUMN_VALUE_CHANGE_REQUEST,\n                columns: copyOfRowGroupColumns,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event_3);\n        }\n    };\n    ModelItemUtils.prototype.setAllPivotActive = function (columns, value, eventType) {\n        var _this = this;\n        var colStateItems = [];\n        var turnOnAction = function (col) {\n            // don't change any column that's already got a function active\n            if (col.isAnyFunctionActive()) {\n                return;\n            }\n            if (col.isAllowValue()) {\n                var aggFunc = typeof col.getAggFunc() === 'string'\n                    ? col.getAggFunc()\n                    : _this.aggFuncService.getDefaultAggFunc(col);\n                colStateItems.push({\n                    colId: col.getId(),\n                    aggFunc: aggFunc\n                });\n            }\n            else if (col.isAllowRowGroup()) {\n                colStateItems.push({\n                    colId: col.getId(),\n                    rowGroup: true\n                });\n            }\n            else if (col.isAllowPivot()) {\n                colStateItems.push({\n                    colId: col.getId(),\n                    pivot: true\n                });\n            }\n        };\n        var turnOffAction = function (col) {\n            var isActive = col.isPivotActive() || col.isRowGroupActive() || col.isValueActive();\n            if (isActive) {\n                colStateItems.push({\n                    colId: col.getId(),\n                    pivot: false,\n                    rowGroup: false,\n                    aggFunc: null\n                });\n            }\n        };\n        var action = value ? turnOnAction : turnOffAction;\n        columns.forEach(action);\n        if (colStateItems.length > 0) {\n            this.columnModel.applyColumnState({ state: colStateItems }, eventType);\n        }\n    };\n    __decorate([\n        Autowired('aggFuncService')\n    ], ModelItemUtils.prototype, \"aggFuncService\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], ModelItemUtils.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], ModelItemUtils.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], ModelItemUtils.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], ModelItemUtils.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('eventService')\n    ], ModelItemUtils.prototype, \"eventService\", void 0);\n    ModelItemUtils = __decorate([\n        Bean('modelItemUtils')\n    ], ModelItemUtils);\n    return ModelItemUtils;\n}());\nexport { ModelItemUtils };\n"]},"metadata":{},"sourceType":"module"}