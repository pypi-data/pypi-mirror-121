{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ChartType } from \"@ag-grid-community/core\";\nimport { AgChart } from \"ag-charts-community\";\nimport { CartesianChartProxy } from \"./cartesianChartProxy\";\n\nvar AreaChartProxy = function (_super) {\n  __extends(AreaChartProxy, _super);\n\n  function AreaChartProxy(params) {\n    var _this = _super.call(this, params) || this;\n\n    _this.initChartOptions();\n\n    _this.recreateChart();\n\n    return _this;\n  }\n\n  AreaChartProxy.prototype.createChart = function () {\n    var _a = this.chartProxyParams,\n        grouping = _a.grouping,\n        parentElement = _a.parentElement;\n    var seriesDefaults = this.getSeriesDefaults();\n\n    var marker = __assign({}, seriesDefaults.marker);\n\n    if (marker.type) {\n      // deprecated\n      marker.shape = marker.type;\n      delete marker.type;\n    }\n\n    var options = this.iChartOptions;\n    var agChartOptions = options;\n    var xAxisType = options.xAxis.type ? options.xAxis.type : 'category';\n\n    if (grouping) {\n      agChartOptions.type = 'groupedCategory';\n    }\n\n    agChartOptions.autoSize = true;\n    agChartOptions.axes = [__assign({\n      type: grouping ? 'groupedCategory' : xAxisType,\n      position: 'bottom',\n      paddingInner: 1,\n      paddingOuter: 0\n    }, this.getXAxisDefaults(xAxisType, options)), __assign({\n      type: 'number',\n      position: 'left'\n    }, options.yAxis)];\n    agChartOptions.series = [__assign(__assign({}, seriesDefaults), {\n      type: 'area',\n      fills: seriesDefaults.fill.colors,\n      fillOpacity: seriesDefaults.fill.opacity,\n      strokes: seriesDefaults.stroke.colors,\n      strokeOpacity: seriesDefaults.stroke.opacity,\n      strokeWidth: seriesDefaults.stroke.width,\n      tooltip: {\n        enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n        renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.renderer\n      },\n      marker: marker\n    })];\n    return AgChart.create(agChartOptions, parentElement);\n  };\n\n  AreaChartProxy.prototype.update = function (params) {\n    this.chartProxyParams.grouping = params.grouping;\n    var axisType = this.isTimeAxis(params) ? 'time' : 'category';\n    this.updateAxes(axisType);\n\n    if (this.chartType === ChartType.Area) {\n      // area charts have multiple series\n      this.updateAreaChart(params);\n    } else {\n      // stacked and normalized has a single series\n      var areaSeries = this.chart.series[0];\n\n      if (!areaSeries) {\n        var seriesDefaults = this.getSeriesDefaults();\n\n        var marker = __assign({}, seriesDefaults.marker);\n\n        if (marker.type) {\n          // deprecated\n          marker.shape = marker.type;\n          delete marker.type;\n        }\n\n        areaSeries = AgChart.createComponent(__assign(__assign({}, seriesDefaults), {\n          fills: seriesDefaults.fill.colors,\n          fillOpacity: seriesDefaults.fill.opacity,\n          strokes: seriesDefaults.stroke.colors,\n          strokeOpacity: seriesDefaults.stroke.opacity,\n          strokeWidth: seriesDefaults.stroke.width,\n          marker: marker\n        }), 'area.series');\n\n        if (areaSeries) {\n          this.chart.addSeries(areaSeries);\n        } else {\n          return;\n        }\n      }\n\n      var _a = this.getPalette(),\n          fills = _a.fills,\n          strokes = _a.strokes;\n\n      areaSeries.data = this.transformData(params.data, params.category.id);\n      areaSeries.xKey = params.category.id;\n      areaSeries.xName = params.category.name;\n      areaSeries.yKeys = params.fields.map(function (f) {\n        return f.colId;\n      });\n      areaSeries.yNames = params.fields.map(function (f) {\n        return f.displayName;\n      });\n      areaSeries.fills = fills;\n      areaSeries.strokes = strokes;\n    }\n\n    this.updateLabelRotation(params.category.id, false, axisType);\n  };\n\n  AreaChartProxy.prototype.updateAreaChart = function (params) {\n    var _this = this;\n\n    var chart = this.chart;\n\n    if (params.fields.length === 0) {\n      chart.removeAllSeries();\n      return;\n    }\n\n    var fieldIds = params.fields.map(function (f) {\n      return f.colId;\n    });\n    var existingSeriesById = chart.series.reduceRight(function (map, series, i) {\n      var id = series.yKeys[0];\n\n      if (fieldIds.indexOf(id) === i) {\n        map.set(id, series);\n      } else {\n        chart.removeSeries(series);\n      }\n\n      return map;\n    }, new Map());\n    var data = this.transformData(params.data, params.category.id);\n    var previousSeries;\n\n    var _a = this.getPalette(),\n        fills = _a.fills,\n        strokes = _a.strokes;\n\n    params.fields.forEach(function (f, index) {\n      var _a = _this.processDataForCrossFiltering(data, f.colId, params),\n          yKey = _a.yKey,\n          atLeastOneSelectedPoint = _a.atLeastOneSelectedPoint;\n\n      var areaSeries = existingSeriesById.get(f.colId);\n      var fill = fills[index % fills.length];\n      var stroke = strokes[index % strokes.length];\n\n      if (areaSeries) {\n        areaSeries.data = data;\n        areaSeries.xKey = params.category.id;\n        areaSeries.xName = params.category.name;\n        areaSeries.yKeys = [yKey];\n        areaSeries.yNames = [f.displayName];\n        areaSeries.fills = [fill];\n        areaSeries.strokes = [stroke];\n      } else {\n        var seriesDefaults = _this.getSeriesDefaults();\n\n        var marker = __assign({}, seriesDefaults.marker);\n\n        if (marker.type) {\n          // deprecated\n          marker.shape = marker.type;\n          delete marker.type;\n        }\n\n        var options = __assign(__assign({}, seriesDefaults), {\n          data: data,\n          xKey: params.category.id,\n          xName: params.category.name,\n          yKeys: [yKey],\n          yNames: [f.displayName],\n          fills: [fill],\n          strokes: [stroke],\n          fillOpacity: seriesDefaults.fill.opacity,\n          strokeOpacity: seriesDefaults.stroke.opacity,\n          strokeWidth: seriesDefaults.stroke.width,\n          marker: marker\n        });\n\n        areaSeries = AgChart.createComponent(options, 'area.series');\n        chart.addSeriesAfter(areaSeries, previousSeries);\n      }\n\n      _this.updateSeriesForCrossFiltering(areaSeries, f.colId, chart, params, atLeastOneSelectedPoint);\n\n      previousSeries = areaSeries;\n    });\n  };\n\n  AreaChartProxy.prototype.extractIChartOptionsFromTheme = function (theme) {\n    var options = _super.prototype.extractIChartOptionsFromTheme.call(this, theme);\n\n    var seriesDefaults = theme.getConfig('area.series.area');\n    options.seriesDefaults = {\n      shadow: seriesDefaults.shadow,\n      tooltip: {\n        enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n        renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.renderer\n      },\n      fill: {\n        colors: seriesDefaults.fills || theme.palette.fills,\n        opacity: seriesDefaults.fillOpacity\n      },\n      stroke: {\n        colors: seriesDefaults.strokes || theme.palette.strokes,\n        opacity: seriesDefaults.strokeOpacity,\n        width: seriesDefaults.strokeWidth\n      },\n      label: seriesDefaults.label,\n      marker: {\n        enabled: seriesDefaults.marker.enabled,\n        shape: seriesDefaults.marker.shape,\n        size: seriesDefaults.marker.size,\n        strokeWidth: seriesDefaults.marker.strokeWidth,\n        formatter: seriesDefaults.marker.formatter\n      },\n      lineDash: seriesDefaults.lineDash ? seriesDefaults.lineDash : [0],\n      lineDashOffset: seriesDefaults.lineDashOffset,\n      highlightStyle: seriesDefaults.highlightStyle,\n      listeners: seriesDefaults.listeners\n    };\n    return options;\n  };\n\n  AreaChartProxy.prototype.getDefaultOptions = function () {\n    var options = this.getDefaultCartesianChartOptions();\n    options.xAxis.label.rotation = 335;\n    options.seriesDefaults = __assign(__assign({}, options.seriesDefaults), {\n      fill: __assign(__assign({}, options.seriesDefaults.fill), {\n        opacity: this.chartType === ChartType.Area ? 0.7 : 1\n      }),\n      stroke: __assign(__assign({}, options.seriesDefaults.stroke), {\n        width: 3\n      }),\n      marker: {\n        shape: 'circle',\n        enabled: true,\n        size: 6,\n        strokeWidth: 1\n      },\n      tooltip: {\n        enabled: true\n      },\n      shadow: this.getDefaultDropShadowOptions()\n    });\n    return options;\n  };\n\n  AreaChartProxy.prototype.getSeriesDefaults = function () {\n    return __assign(__assign({}, this.iChartOptions.seriesDefaults), {\n      type: 'area',\n      normalizedTo: this.chartType === ChartType.NormalizedArea ? 100 : undefined\n    });\n  };\n\n  return AreaChartProxy;\n}(CartesianChartProxy);\n\nexport { AreaChartProxy };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/charts/dist/es6/charts/chartComp/chartProxies/cartesian/areaChartProxy.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","ChartType","AgChart","CartesianChartProxy","AreaChartProxy","_super","params","_this","initChartOptions","recreateChart","createChart","_a","chartProxyParams","grouping","parentElement","seriesDefaults","getSeriesDefaults","marker","type","shape","options","iChartOptions","agChartOptions","xAxisType","xAxis","autoSize","axes","position","paddingInner","paddingOuter","getXAxisDefaults","yAxis","series","fills","fill","colors","fillOpacity","opacity","strokes","stroke","strokeOpacity","strokeWidth","width","tooltip","enabled","renderer","update","axisType","isTimeAxis","updateAxes","chartType","Area","updateAreaChart","areaSeries","chart","createComponent","addSeries","getPalette","data","transformData","category","id","xKey","xName","name","yKeys","fields","map","f","colId","yNames","displayName","updateLabelRotation","removeAllSeries","fieldIds","existingSeriesById","reduceRight","indexOf","set","removeSeries","Map","previousSeries","forEach","index","processDataForCrossFiltering","yKey","atLeastOneSelectedPoint","get","addSeriesAfter","updateSeriesForCrossFiltering","extractIChartOptionsFromTheme","theme","getConfig","shadow","palette","label","size","formatter","lineDash","lineDashOffset","highlightStyle","listeners","getDefaultOptions","getDefaultCartesianChartOptions","rotation","getDefaultDropShadowOptions","normalizedTo","NormalizedArea","undefined"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ChartType } from \"@ag-grid-community/core\";\nimport { AgChart } from \"ag-charts-community\";\nimport { CartesianChartProxy } from \"./cartesianChartProxy\";\nvar AreaChartProxy = /** @class */ (function (_super) {\n    __extends(AreaChartProxy, _super);\n    function AreaChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions();\n        _this.recreateChart();\n        return _this;\n    }\n    AreaChartProxy.prototype.createChart = function () {\n        var _a = this.chartProxyParams, grouping = _a.grouping, parentElement = _a.parentElement;\n        var seriesDefaults = this.getSeriesDefaults();\n        var marker = __assign({}, seriesDefaults.marker);\n        if (marker.type) { // deprecated\n            marker.shape = marker.type;\n            delete marker.type;\n        }\n        var options = this.iChartOptions;\n        var agChartOptions = options;\n        var xAxisType = options.xAxis.type ? options.xAxis.type : 'category';\n        if (grouping) {\n            agChartOptions.type = 'groupedCategory';\n        }\n        agChartOptions.autoSize = true;\n        agChartOptions.axes = [__assign({ type: grouping ? 'groupedCategory' : xAxisType, position: 'bottom', paddingInner: 1, paddingOuter: 0 }, this.getXAxisDefaults(xAxisType, options)), __assign({ type: 'number', position: 'left' }, options.yAxis)];\n        agChartOptions.series = [__assign(__assign({}, seriesDefaults), { type: 'area', fills: seriesDefaults.fill.colors, fillOpacity: seriesDefaults.fill.opacity, strokes: seriesDefaults.stroke.colors, strokeOpacity: seriesDefaults.stroke.opacity, strokeWidth: seriesDefaults.stroke.width, tooltip: {\n                    enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n                    renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.renderer\n                }, marker: marker })];\n        return AgChart.create(agChartOptions, parentElement);\n    };\n    AreaChartProxy.prototype.update = function (params) {\n        this.chartProxyParams.grouping = params.grouping;\n        var axisType = this.isTimeAxis(params) ? 'time' : 'category';\n        this.updateAxes(axisType);\n        if (this.chartType === ChartType.Area) {\n            // area charts have multiple series\n            this.updateAreaChart(params);\n        }\n        else {\n            // stacked and normalized has a single series\n            var areaSeries = this.chart.series[0];\n            if (!areaSeries) {\n                var seriesDefaults = this.getSeriesDefaults();\n                var marker = __assign({}, seriesDefaults.marker);\n                if (marker.type) { // deprecated\n                    marker.shape = marker.type;\n                    delete marker.type;\n                }\n                areaSeries = AgChart.createComponent(__assign(__assign({}, seriesDefaults), { fills: seriesDefaults.fill.colors, fillOpacity: seriesDefaults.fill.opacity, strokes: seriesDefaults.stroke.colors, strokeOpacity: seriesDefaults.stroke.opacity, strokeWidth: seriesDefaults.stroke.width, marker: marker }), 'area.series');\n                if (areaSeries) {\n                    this.chart.addSeries(areaSeries);\n                }\n                else {\n                    return;\n                }\n            }\n            var _a = this.getPalette(), fills = _a.fills, strokes = _a.strokes;\n            areaSeries.data = this.transformData(params.data, params.category.id);\n            areaSeries.xKey = params.category.id;\n            areaSeries.xName = params.category.name;\n            areaSeries.yKeys = params.fields.map(function (f) { return f.colId; });\n            areaSeries.yNames = params.fields.map(function (f) { return f.displayName; });\n            areaSeries.fills = fills;\n            areaSeries.strokes = strokes;\n        }\n        this.updateLabelRotation(params.category.id, false, axisType);\n    };\n    AreaChartProxy.prototype.updateAreaChart = function (params) {\n        var _this = this;\n        var chart = this.chart;\n        if (params.fields.length === 0) {\n            chart.removeAllSeries();\n            return;\n        }\n        var fieldIds = params.fields.map(function (f) { return f.colId; });\n        var existingSeriesById = chart.series\n            .reduceRight(function (map, series, i) {\n            var id = series.yKeys[0];\n            if (fieldIds.indexOf(id) === i) {\n                map.set(id, series);\n            }\n            else {\n                chart.removeSeries(series);\n            }\n            return map;\n        }, new Map());\n        var data = this.transformData(params.data, params.category.id);\n        var previousSeries;\n        var _a = this.getPalette(), fills = _a.fills, strokes = _a.strokes;\n        params.fields.forEach(function (f, index) {\n            var _a = _this.processDataForCrossFiltering(data, f.colId, params), yKey = _a.yKey, atLeastOneSelectedPoint = _a.atLeastOneSelectedPoint;\n            var areaSeries = existingSeriesById.get(f.colId);\n            var fill = fills[index % fills.length];\n            var stroke = strokes[index % strokes.length];\n            if (areaSeries) {\n                areaSeries.data = data;\n                areaSeries.xKey = params.category.id;\n                areaSeries.xName = params.category.name;\n                areaSeries.yKeys = [yKey];\n                areaSeries.yNames = [f.displayName];\n                areaSeries.fills = [fill];\n                areaSeries.strokes = [stroke];\n            }\n            else {\n                var seriesDefaults = _this.getSeriesDefaults();\n                var marker = __assign({}, seriesDefaults.marker);\n                if (marker.type) { // deprecated\n                    marker.shape = marker.type;\n                    delete marker.type;\n                }\n                var options = __assign(__assign({}, seriesDefaults), { data: data, xKey: params.category.id, xName: params.category.name, yKeys: [yKey], yNames: [f.displayName], fills: [fill], strokes: [stroke], fillOpacity: seriesDefaults.fill.opacity, strokeOpacity: seriesDefaults.stroke.opacity, strokeWidth: seriesDefaults.stroke.width, marker: marker });\n                areaSeries = AgChart.createComponent(options, 'area.series');\n                chart.addSeriesAfter(areaSeries, previousSeries);\n            }\n            _this.updateSeriesForCrossFiltering(areaSeries, f.colId, chart, params, atLeastOneSelectedPoint);\n            previousSeries = areaSeries;\n        });\n    };\n    AreaChartProxy.prototype.extractIChartOptionsFromTheme = function (theme) {\n        var options = _super.prototype.extractIChartOptionsFromTheme.call(this, theme);\n        var seriesDefaults = theme.getConfig('area.series.area');\n        options.seriesDefaults = {\n            shadow: seriesDefaults.shadow,\n            tooltip: {\n                enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n                renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.renderer\n            },\n            fill: {\n                colors: seriesDefaults.fills || theme.palette.fills,\n                opacity: seriesDefaults.fillOpacity\n            },\n            stroke: {\n                colors: seriesDefaults.strokes || theme.palette.strokes,\n                opacity: seriesDefaults.strokeOpacity,\n                width: seriesDefaults.strokeWidth\n            },\n            label: seriesDefaults.label,\n            marker: {\n                enabled: seriesDefaults.marker.enabled,\n                shape: seriesDefaults.marker.shape,\n                size: seriesDefaults.marker.size,\n                strokeWidth: seriesDefaults.marker.strokeWidth,\n                formatter: seriesDefaults.marker.formatter\n            },\n            lineDash: seriesDefaults.lineDash ? seriesDefaults.lineDash : [0],\n            lineDashOffset: seriesDefaults.lineDashOffset,\n            highlightStyle: seriesDefaults.highlightStyle,\n            listeners: seriesDefaults.listeners\n        };\n        return options;\n    };\n    AreaChartProxy.prototype.getDefaultOptions = function () {\n        var options = this.getDefaultCartesianChartOptions();\n        options.xAxis.label.rotation = 335;\n        options.seriesDefaults = __assign(__assign({}, options.seriesDefaults), { fill: __assign(__assign({}, options.seriesDefaults.fill), { opacity: this.chartType === ChartType.Area ? 0.7 : 1 }), stroke: __assign(__assign({}, options.seriesDefaults.stroke), { width: 3 }), marker: {\n                shape: 'circle',\n                enabled: true,\n                size: 6,\n                strokeWidth: 1,\n            }, tooltip: {\n                enabled: true,\n            }, shadow: this.getDefaultDropShadowOptions() });\n        return options;\n    };\n    AreaChartProxy.prototype.getSeriesDefaults = function () {\n        return __assign(__assign({}, this.iChartOptions.seriesDefaults), { type: 'area', normalizedTo: this.chartType === ChartType.NormalizedArea ? 100 : undefined });\n    };\n    return AreaChartProxy;\n}(CartesianChartProxy));\nexport { AreaChartProxy };\n"]},"metadata":{},"sourceType":"module"}