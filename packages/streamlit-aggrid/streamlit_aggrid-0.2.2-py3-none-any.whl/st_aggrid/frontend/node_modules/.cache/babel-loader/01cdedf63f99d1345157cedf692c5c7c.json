{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean, BeanStub, Events, PostConstruct, ServerSideTransactionResultStatus } from \"@ag-grid-community/core\";\n\nvar TransactionManager = function (_super) {\n  __extends(TransactionManager, _super);\n\n  function TransactionManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.asyncTransactions = [];\n    return _this;\n  }\n\n  TransactionManager.prototype.postConstruct = function () {\n    // only want to be active if SSRM active, otherwise would be interfering with other row models\n    if (!this.gridOptionsWrapper.isRowModelServerSide()) {\n      return;\n    }\n  };\n\n  TransactionManager.prototype.applyTransactionAsync = function (transaction, callback) {\n    if (this.asyncTransactionsTimeout == null) {\n      this.scheduleExecuteAsync();\n    }\n\n    this.asyncTransactions.push({\n      transaction: transaction,\n      callback: callback\n    });\n  };\n\n  TransactionManager.prototype.scheduleExecuteAsync = function () {\n    var _this = this;\n\n    var waitMillis = this.gridOptionsWrapper.getAsyncTransactionWaitMillis();\n    this.asyncTransactionsTimeout = window.setTimeout(function () {\n      _this.executeAsyncTransactions();\n    }, waitMillis);\n  };\n\n  TransactionManager.prototype.executeAsyncTransactions = function () {\n    var _this = this;\n\n    if (!this.asyncTransactions) {\n      return;\n    }\n\n    var resultFuncs = [];\n    var resultsForEvent = [];\n    var transactionsToRetry = [];\n    var atLeastOneTransactionApplied = false;\n    this.asyncTransactions.forEach(function (txWrapper) {\n      var result;\n\n      _this.serverSideRowModel.executeOnStore(txWrapper.transaction.route, function (cache) {\n        result = cache.applyTransaction(txWrapper.transaction);\n      });\n\n      if (result == undefined) {\n        result = {\n          status: ServerSideTransactionResultStatus.StoreNotFound\n        };\n      }\n\n      resultsForEvent.push(result);\n      var retryTransaction = result.status == ServerSideTransactionResultStatus.StoreLoading;\n\n      if (retryTransaction) {\n        transactionsToRetry.push(txWrapper);\n        return;\n      }\n\n      if (txWrapper.callback) {\n        resultFuncs.push(function () {\n          return txWrapper.callback(result);\n        });\n      }\n\n      if (result.status === ServerSideTransactionResultStatus.Applied) {\n        atLeastOneTransactionApplied = true;\n      }\n    }); // do callbacks in next VM turn so it's async\n\n    if (resultFuncs.length > 0) {\n      window.setTimeout(function () {\n        resultFuncs.forEach(function (func) {\n          return func();\n        });\n      }, 0);\n    }\n\n    this.asyncTransactionsTimeout = undefined; // this will be empty list if nothing to retry\n\n    this.asyncTransactions = transactionsToRetry;\n\n    if (atLeastOneTransactionApplied) {\n      this.valueCache.onDataChanged();\n      this.eventService.dispatchEvent({\n        type: Events.EVENT_STORE_UPDATED\n      });\n    }\n\n    if (resultsForEvent.length > 0) {\n      var event_1 = {\n        api: this.gridOptionsWrapper.getApi(),\n        columnApi: this.gridOptionsWrapper.getColumnApi(),\n        type: Events.EVENT_ASYNC_TRANSACTIONS_FLUSHED,\n        results: resultsForEvent\n      };\n      this.eventService.dispatchEvent(event_1);\n    }\n  };\n\n  TransactionManager.prototype.flushAsyncTransactions = function () {\n    // the timeout could be missing, if we are flushing due to row data loaded\n    if (this.asyncTransactionsTimeout != null) {\n      clearTimeout(this.asyncTransactionsTimeout);\n    }\n\n    this.executeAsyncTransactions();\n  };\n\n  TransactionManager.prototype.applyTransaction = function (transaction) {\n    var res;\n    this.serverSideRowModel.executeOnStore(transaction.route, function (store) {\n      res = store.applyTransaction(transaction);\n    });\n\n    if (res) {\n      this.valueCache.onDataChanged();\n      this.eventService.dispatchEvent({\n        type: Events.EVENT_STORE_UPDATED\n      });\n      return res;\n    } else {\n      return {\n        status: ServerSideTransactionResultStatus.StoreNotFound\n      };\n    }\n  };\n\n  __decorate([Autowired('rowNodeBlockLoader')], TransactionManager.prototype, \"rowNodeBlockLoader\", void 0);\n\n  __decorate([Autowired('valueCache')], TransactionManager.prototype, \"valueCache\", void 0);\n\n  __decorate([Autowired('rowModel')], TransactionManager.prototype, \"serverSideRowModel\", void 0);\n\n  __decorate([PostConstruct], TransactionManager.prototype, \"postConstruct\", null);\n\n  TransactionManager = __decorate([Bean('ssrmTransactionManager')], TransactionManager);\n  return TransactionManager;\n}(BeanStub);\n\nexport { TransactionManager };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/server-side-row-model/dist/es6/serverSideRowModel/transactionManager.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","BeanStub","Events","PostConstruct","ServerSideTransactionResultStatus","TransactionManager","_super","_this","apply","asyncTransactions","postConstruct","gridOptionsWrapper","isRowModelServerSide","applyTransactionAsync","transaction","callback","asyncTransactionsTimeout","scheduleExecuteAsync","push","waitMillis","getAsyncTransactionWaitMillis","window","setTimeout","executeAsyncTransactions","resultFuncs","resultsForEvent","transactionsToRetry","atLeastOneTransactionApplied","forEach","txWrapper","result","serverSideRowModel","executeOnStore","route","cache","applyTransaction","undefined","status","StoreNotFound","retryTransaction","StoreLoading","Applied","func","valueCache","onDataChanged","eventService","dispatchEvent","type","EVENT_STORE_UPDATED","event_1","api","getApi","columnApi","getColumnApi","EVENT_ASYNC_TRANSACTIONS_FLUSHED","results","flushAsyncTransactions","clearTimeout","res","store"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean, BeanStub, Events, PostConstruct, ServerSideTransactionResultStatus } from \"@ag-grid-community/core\";\nvar TransactionManager = /** @class */ (function (_super) {\n    __extends(TransactionManager, _super);\n    function TransactionManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.asyncTransactions = [];\n        return _this;\n    }\n    TransactionManager.prototype.postConstruct = function () {\n        // only want to be active if SSRM active, otherwise would be interfering with other row models\n        if (!this.gridOptionsWrapper.isRowModelServerSide()) {\n            return;\n        }\n    };\n    TransactionManager.prototype.applyTransactionAsync = function (transaction, callback) {\n        if (this.asyncTransactionsTimeout == null) {\n            this.scheduleExecuteAsync();\n        }\n        this.asyncTransactions.push({ transaction: transaction, callback: callback });\n    };\n    TransactionManager.prototype.scheduleExecuteAsync = function () {\n        var _this = this;\n        var waitMillis = this.gridOptionsWrapper.getAsyncTransactionWaitMillis();\n        this.asyncTransactionsTimeout = window.setTimeout(function () {\n            _this.executeAsyncTransactions();\n        }, waitMillis);\n    };\n    TransactionManager.prototype.executeAsyncTransactions = function () {\n        var _this = this;\n        if (!this.asyncTransactions) {\n            return;\n        }\n        var resultFuncs = [];\n        var resultsForEvent = [];\n        var transactionsToRetry = [];\n        var atLeastOneTransactionApplied = false;\n        this.asyncTransactions.forEach(function (txWrapper) {\n            var result;\n            _this.serverSideRowModel.executeOnStore(txWrapper.transaction.route, function (cache) {\n                result = cache.applyTransaction(txWrapper.transaction);\n            });\n            if (result == undefined) {\n                result = { status: ServerSideTransactionResultStatus.StoreNotFound };\n            }\n            resultsForEvent.push(result);\n            var retryTransaction = result.status == ServerSideTransactionResultStatus.StoreLoading;\n            if (retryTransaction) {\n                transactionsToRetry.push(txWrapper);\n                return;\n            }\n            if (txWrapper.callback) {\n                resultFuncs.push(function () { return txWrapper.callback(result); });\n            }\n            if (result.status === ServerSideTransactionResultStatus.Applied) {\n                atLeastOneTransactionApplied = true;\n            }\n        });\n        // do callbacks in next VM turn so it's async\n        if (resultFuncs.length > 0) {\n            window.setTimeout(function () {\n                resultFuncs.forEach(function (func) { return func(); });\n            }, 0);\n        }\n        this.asyncTransactionsTimeout = undefined;\n        // this will be empty list if nothing to retry\n        this.asyncTransactions = transactionsToRetry;\n        if (atLeastOneTransactionApplied) {\n            this.valueCache.onDataChanged();\n            this.eventService.dispatchEvent({ type: Events.EVENT_STORE_UPDATED });\n        }\n        if (resultsForEvent.length > 0) {\n            var event_1 = {\n                api: this.gridOptionsWrapper.getApi(),\n                columnApi: this.gridOptionsWrapper.getColumnApi(),\n                type: Events.EVENT_ASYNC_TRANSACTIONS_FLUSHED,\n                results: resultsForEvent\n            };\n            this.eventService.dispatchEvent(event_1);\n        }\n    };\n    TransactionManager.prototype.flushAsyncTransactions = function () {\n        // the timeout could be missing, if we are flushing due to row data loaded\n        if (this.asyncTransactionsTimeout != null) {\n            clearTimeout(this.asyncTransactionsTimeout);\n        }\n        this.executeAsyncTransactions();\n    };\n    TransactionManager.prototype.applyTransaction = function (transaction) {\n        var res;\n        this.serverSideRowModel.executeOnStore(transaction.route, function (store) {\n            res = store.applyTransaction(transaction);\n        });\n        if (res) {\n            this.valueCache.onDataChanged();\n            this.eventService.dispatchEvent({ type: Events.EVENT_STORE_UPDATED });\n            return res;\n        }\n        else {\n            return { status: ServerSideTransactionResultStatus.StoreNotFound };\n        }\n    };\n    __decorate([\n        Autowired('rowNodeBlockLoader')\n    ], TransactionManager.prototype, \"rowNodeBlockLoader\", void 0);\n    __decorate([\n        Autowired('valueCache')\n    ], TransactionManager.prototype, \"valueCache\", void 0);\n    __decorate([\n        Autowired('rowModel')\n    ], TransactionManager.prototype, \"serverSideRowModel\", void 0);\n    __decorate([\n        PostConstruct\n    ], TransactionManager.prototype, \"postConstruct\", null);\n    TransactionManager = __decorate([\n        Bean('ssrmTransactionManager')\n    ], TransactionManager);\n    return TransactionManager;\n}(BeanStub));\nexport { TransactionManager };\n"]},"metadata":{},"sourceType":"module"}