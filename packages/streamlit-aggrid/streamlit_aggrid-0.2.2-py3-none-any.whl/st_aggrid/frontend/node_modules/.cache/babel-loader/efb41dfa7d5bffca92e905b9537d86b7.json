{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\n\nimport { _, Autowired, NumberSequence, PostConstruct, PreDestroy, Qualifier, RowNodeBlock } from \"@ag-grid-community/core\";\n\nvar PartialStoreBlock = function (_super) {\n  __extends(PartialStoreBlock, _super);\n\n  function PartialStoreBlock(blockNumber, parentRowNode, ssrmParams, storeParams, parentStore) {\n    var _this = _super.call(this, blockNumber) || this;\n\n    _this.ssrmParams = ssrmParams;\n    _this.storeParams = storeParams;\n    _this.parentRowNode = parentRowNode; // we don't need to calculate these now, as the inputs don't change,\n    // however it makes the code easier to read if we work them out up front\n\n    _this.startRow = blockNumber * storeParams.cacheBlockSize;\n    _this.parentStore = parentStore;\n    _this.level = parentRowNode.level + 1;\n    _this.groupLevel = ssrmParams.rowGroupCols ? _this.level < ssrmParams.rowGroupCols.length : undefined;\n    _this.leafGroup = ssrmParams.rowGroupCols ? _this.level === ssrmParams.rowGroupCols.length - 1 : false;\n    return _this;\n  }\n\n  PartialStoreBlock.prototype.postConstruct = function () {\n    this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n\n    if (!this.usingTreeData && this.groupLevel) {\n      var groupColVo = this.ssrmParams.rowGroupCols[this.level];\n      this.groupField = groupColVo.field;\n      this.rowGroupColumn = this.columnModel.getRowGroupColumns()[this.level];\n    }\n\n    this.nodeIdPrefix = this.blockUtils.createNodeIdPrefix(this.parentRowNode);\n    this.setData([]);\n  };\n\n  PartialStoreBlock.prototype.isDisplayIndexInBlock = function (displayIndex) {\n    return displayIndex >= this.displayIndexStart && displayIndex < this.displayIndexEnd;\n  };\n\n  PartialStoreBlock.prototype.isBlockBefore = function (displayIndex) {\n    return displayIndex >= this.displayIndexEnd;\n  };\n\n  PartialStoreBlock.prototype.getDisplayIndexStart = function () {\n    return this.displayIndexStart;\n  };\n\n  PartialStoreBlock.prototype.getDisplayIndexEnd = function () {\n    return this.displayIndexEnd;\n  };\n\n  PartialStoreBlock.prototype.getBlockHeightPx = function () {\n    return this.blockHeightPx;\n  };\n\n  PartialStoreBlock.prototype.getBlockTopPx = function () {\n    return this.blockTopPx;\n  };\n\n  PartialStoreBlock.prototype.isGroupLevel = function () {\n    return this.groupLevel;\n  };\n\n  PartialStoreBlock.prototype.getGroupField = function () {\n    return this.groupField;\n  };\n\n  PartialStoreBlock.prototype.prefixId = function (id) {\n    if (this.nodeIdPrefix != null) {\n      return this.nodeIdPrefix + '-' + id;\n    } else {\n      return id.toString();\n    }\n  };\n\n  PartialStoreBlock.prototype.getBlockStateJson = function () {\n    return {\n      id: this.prefixId(this.getId()),\n      state: {\n        blockNumber: this.getId(),\n        startRow: this.startRow,\n        endRow: this.startRow + this.storeParams.cacheBlockSize,\n        pageStatus: this.getState()\n      }\n    };\n  };\n\n  PartialStoreBlock.prototype.isAnyNodeOpen = function () {\n    var openNodeCount = this.rowNodes.filter(function (node) {\n      return node.expanded;\n    }).length;\n    return openNodeCount > 0;\n  }; // this method is repeated, see forEachRowNode, why?\n\n\n  PartialStoreBlock.prototype.forEachNode = function (callback, sequence, includeChildren, filterAndSort) {\n    if (sequence === void 0) {\n      sequence = new NumberSequence();\n    }\n\n    this.rowNodes.forEach(function (rowNode) {\n      callback(rowNode, sequence.next()); // this will only every happen for server side row model, as infinite\n      // row model doesn't have groups\n\n      if (includeChildren && rowNode.childStore) {\n        var childStore = rowNode.childStore;\n\n        if (filterAndSort) {\n          childStore.forEachNodeDeepAfterFilterAndSort(callback, sequence);\n        } else {\n          childStore.forEachNodeDeep(callback, sequence);\n        }\n      }\n    });\n  };\n\n  PartialStoreBlock.prototype.forEachNodeDeep = function (callback, sequence) {\n    this.forEachNode(callback, sequence, true, false);\n  };\n\n  PartialStoreBlock.prototype.forEachNodeAfterFilterAndSort = function (callback, sequence) {\n    this.forEachNode(callback, sequence, true, true);\n  };\n\n  PartialStoreBlock.prototype.forEachNodeShallow = function (callback, sequence) {\n    this.forEachNode(callback, sequence, false, false);\n  };\n\n  PartialStoreBlock.prototype.getLastAccessed = function () {\n    return this.lastAccessed;\n  };\n\n  PartialStoreBlock.prototype.getRowUsingLocalIndex = function (rowIndex) {\n    return this.rowNodes[rowIndex - this.startRow];\n  };\n\n  PartialStoreBlock.prototype.touchLastAccessed = function () {\n    this.lastAccessed = this.ssrmParams.lastAccessedSequence.next();\n  };\n\n  PartialStoreBlock.prototype.processServerFail = function () {\n    this.parentStore.onBlockLoadFailed(this);\n  };\n\n  PartialStoreBlock.prototype.retryLoads = function () {\n    if (this.getState() === RowNodeBlock.STATE_FAILED) {\n      this.setStateWaitingToLoad();\n      this.rowNodeBlockLoader.checkBlockToLoad();\n      this.setData();\n    }\n\n    this.forEachNodeShallow(function (node) {\n      if (node.childStore) {\n        node.childStore.retryLoads();\n      }\n    });\n  };\n\n  PartialStoreBlock.prototype.processServerResult = function (params) {\n    this.parentStore.onBlockLoaded(this, params);\n  };\n\n  PartialStoreBlock.prototype.setData = function (rows, failedLoad) {\n    if (rows === void 0) {\n      rows = [];\n    }\n\n    if (failedLoad === void 0) {\n      failedLoad = false;\n    }\n\n    this.destroyRowNodes();\n    var storeRowCount = this.parentStore.getRowCount();\n    var startRow = this.getId() * this.storeParams.cacheBlockSize;\n    var endRow = Math.min(startRow + this.storeParams.cacheBlockSize, storeRowCount);\n    var rowsToCreate = endRow - startRow;\n\n    for (var i = 0; i < rowsToCreate; i++) {\n      var rowNode = this.blockUtils.createRowNode({\n        field: this.groupField,\n        group: this.groupLevel,\n        leafGroup: this.leafGroup,\n        level: this.level,\n        parent: this.parentRowNode,\n        rowGroupColumn: this.rowGroupColumn\n      });\n      var dataLoadedForThisRow = i < rows.length;\n\n      if (dataLoadedForThisRow) {\n        var data = rows[i];\n        var defaultId = this.prefixId(this.startRow + i);\n        this.blockUtils.setDataIntoRowNode(rowNode, data, defaultId);\n        var newId = rowNode.id;\n        this.parentStore.removeDuplicateNode(newId);\n        this.nodeManager.addRowNode(rowNode);\n        this.allNodesMap[rowNode.id] = rowNode;\n        this.blockUtils.checkOpenByDefault(rowNode);\n      }\n\n      this.rowNodes.push(rowNode);\n\n      if (failedLoad) {\n        rowNode.failedLoad = true;\n      }\n    }\n  }; // to safeguard the grid against duplicate nodes, when a row is loaded, we check\n  // for another row in the same cache. if another row does exist, we delete it.\n  // this covers for when user refreshes the store (which typically happens after a\n  // data change) and the same row ends up coming back in a different block, and the\n  // new block finishes refreshing before the old block has finished refreshing.\n\n\n  PartialStoreBlock.prototype.removeDuplicateNode = function (id) {\n    var rowNode = this.allNodesMap[id];\n\n    if (!rowNode) {\n      return;\n    }\n\n    this.blockUtils.destroyRowNode(rowNode);\n    var index = this.rowNodes.indexOf(rowNode);\n    var stubRowNode = this.blockUtils.createRowNode({\n      field: this.groupField,\n      group: this.groupLevel,\n      leafGroup: this.leafGroup,\n      level: this.level,\n      parent: this.parentRowNode,\n      rowGroupColumn: this.rowGroupColumn\n    });\n    this.rowNodes[index] = stubRowNode;\n  };\n\n  PartialStoreBlock.prototype.refresh = function () {\n    if (this.getState() !== RowNodeBlock.STATE_WAITING_TO_LOAD) {\n      this.setStateWaitingToLoad();\n    }\n  };\n\n  PartialStoreBlock.prototype.destroyRowNodes = function () {\n    this.blockUtils.destroyRowNodes(this.rowNodes);\n    this.rowNodes = [];\n    this.allNodesMap = {};\n  };\n\n  PartialStoreBlock.prototype.setBeans = function (loggerFactory) {\n    this.logger = loggerFactory.create('ServerSideBlock');\n  };\n\n  PartialStoreBlock.prototype.getRowUsingDisplayIndex = function (displayRowIndex) {\n    this.touchLastAccessed();\n    var res = this.blockUtils.binarySearchForDisplayIndex(displayRowIndex, this.rowNodes);\n    return res;\n  };\n\n  PartialStoreBlock.prototype.loadFromDatasource = function () {\n    this.cacheUtils.loadFromDatasource({\n      startRow: this.startRow,\n      endRow: this.startRow + this.storeParams.cacheBlockSize,\n      parentNode: this.parentRowNode,\n      storeParams: this.ssrmParams,\n      successCallback: this.pageLoaded.bind(this, this.getVersion()),\n      success: this.success.bind(this, this.getVersion()),\n      failCallback: this.pageLoadFailed.bind(this, this.getVersion()),\n      fail: this.pageLoadFailed.bind(this, this.getVersion())\n    });\n  };\n\n  PartialStoreBlock.prototype.isPixelInRange = function (pixel) {\n    return pixel >= this.blockTopPx && pixel < this.blockTopPx + this.blockHeightPx;\n  };\n\n  PartialStoreBlock.prototype.getRowBounds = function (index) {\n    var _this = this;\n\n    this.touchLastAccessed();\n    var res;\n\n    _.find(this.rowNodes, function (rowNode) {\n      res = _this.blockUtils.extractRowBounds(rowNode, index);\n      return res != null;\n    });\n\n    return res;\n  };\n\n  PartialStoreBlock.prototype.getRowIndexAtPixel = function (pixel) {\n    var _this = this;\n\n    this.touchLastAccessed();\n    var res = null;\n\n    _.find(this.rowNodes, function (rowNode) {\n      res = _this.blockUtils.getIndexAtPixel(rowNode, pixel);\n      return res != null;\n    });\n\n    return res;\n  };\n\n  PartialStoreBlock.prototype.clearDisplayIndexes = function () {\n    var _this = this;\n\n    this.displayIndexEnd = undefined;\n    this.displayIndexStart = undefined;\n    this.rowNodes.forEach(function (rowNode) {\n      return _this.blockUtils.clearDisplayIndex(rowNode);\n    });\n  };\n\n  PartialStoreBlock.prototype.setDisplayIndexes = function (displayIndexSeq, nextRowTop) {\n    var _this = this;\n\n    this.displayIndexStart = displayIndexSeq.peek();\n    this.blockTopPx = nextRowTop.value;\n    this.rowNodes.forEach(function (rowNode) {\n      return _this.blockUtils.setDisplayIndex(rowNode, displayIndexSeq, nextRowTop);\n    });\n    this.displayIndexEnd = displayIndexSeq.peek();\n    this.blockHeightPx = nextRowTop.value - this.blockTopPx;\n  };\n\n  __decorate([Autowired('columnModel')], PartialStoreBlock.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('ssrmCacheUtils')], PartialStoreBlock.prototype, \"cacheUtils\", void 0);\n\n  __decorate([Autowired('ssrmBlockUtils')], PartialStoreBlock.prototype, \"blockUtils\", void 0);\n\n  __decorate([Autowired('ssrmNodeManager')], PartialStoreBlock.prototype, \"nodeManager\", void 0);\n\n  __decorate([Autowired('rowNodeBlockLoader')], PartialStoreBlock.prototype, \"rowNodeBlockLoader\", void 0);\n\n  __decorate([PostConstruct], PartialStoreBlock.prototype, \"postConstruct\", null);\n\n  __decorate([PreDestroy], PartialStoreBlock.prototype, \"destroyRowNodes\", null);\n\n  __decorate([__param(0, Qualifier('loggerFactory'))], PartialStoreBlock.prototype, \"setBeans\", null);\n\n  return PartialStoreBlock;\n}(RowNodeBlock);\n\nexport { PartialStoreBlock };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/server-side-row-model/dist/es6/serverSideRowModel/blocks/partialStoreBlock.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","_","Autowired","NumberSequence","PostConstruct","PreDestroy","Qualifier","RowNodeBlock","PartialStoreBlock","_super","blockNumber","parentRowNode","ssrmParams","storeParams","parentStore","_this","call","startRow","cacheBlockSize","level","groupLevel","rowGroupCols","undefined","leafGroup","postConstruct","usingTreeData","gridOptionsWrapper","isTreeData","groupColVo","groupField","field","rowGroupColumn","columnModel","getRowGroupColumns","nodeIdPrefix","blockUtils","createNodeIdPrefix","setData","isDisplayIndexInBlock","displayIndex","displayIndexStart","displayIndexEnd","isBlockBefore","getDisplayIndexStart","getDisplayIndexEnd","getBlockHeightPx","blockHeightPx","getBlockTopPx","blockTopPx","isGroupLevel","getGroupField","prefixId","id","toString","getBlockStateJson","getId","state","endRow","pageStatus","getState","isAnyNodeOpen","openNodeCount","rowNodes","filter","node","expanded","forEachNode","callback","sequence","includeChildren","filterAndSort","forEach","rowNode","next","childStore","forEachNodeDeepAfterFilterAndSort","forEachNodeDeep","forEachNodeAfterFilterAndSort","forEachNodeShallow","getLastAccessed","lastAccessed","getRowUsingLocalIndex","rowIndex","touchLastAccessed","lastAccessedSequence","processServerFail","onBlockLoadFailed","retryLoads","STATE_FAILED","setStateWaitingToLoad","rowNodeBlockLoader","checkBlockToLoad","processServerResult","params","onBlockLoaded","rows","failedLoad","destroyRowNodes","storeRowCount","getRowCount","Math","min","rowsToCreate","createRowNode","group","parent","dataLoadedForThisRow","data","defaultId","setDataIntoRowNode","newId","removeDuplicateNode","nodeManager","addRowNode","allNodesMap","checkOpenByDefault","push","destroyRowNode","index","indexOf","stubRowNode","refresh","STATE_WAITING_TO_LOAD","setBeans","loggerFactory","logger","getRowUsingDisplayIndex","displayRowIndex","res","binarySearchForDisplayIndex","loadFromDatasource","cacheUtils","parentNode","successCallback","pageLoaded","bind","getVersion","success","failCallback","pageLoadFailed","fail","isPixelInRange","pixel","getRowBounds","find","extractRowBounds","getRowIndexAtPixel","getIndexAtPixel","clearDisplayIndexes","clearDisplayIndex","setDisplayIndexes","displayIndexSeq","nextRowTop","peek","value","setDisplayIndex"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { _, Autowired, NumberSequence, PostConstruct, PreDestroy, Qualifier, RowNodeBlock } from \"@ag-grid-community/core\";\nvar PartialStoreBlock = /** @class */ (function (_super) {\n    __extends(PartialStoreBlock, _super);\n    function PartialStoreBlock(blockNumber, parentRowNode, ssrmParams, storeParams, parentStore) {\n        var _this = _super.call(this, blockNumber) || this;\n        _this.ssrmParams = ssrmParams;\n        _this.storeParams = storeParams;\n        _this.parentRowNode = parentRowNode;\n        // we don't need to calculate these now, as the inputs don't change,\n        // however it makes the code easier to read if we work them out up front\n        _this.startRow = blockNumber * storeParams.cacheBlockSize;\n        _this.parentStore = parentStore;\n        _this.level = parentRowNode.level + 1;\n        _this.groupLevel = ssrmParams.rowGroupCols ? _this.level < ssrmParams.rowGroupCols.length : undefined;\n        _this.leafGroup = ssrmParams.rowGroupCols ? _this.level === ssrmParams.rowGroupCols.length - 1 : false;\n        return _this;\n    }\n    PartialStoreBlock.prototype.postConstruct = function () {\n        this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n        if (!this.usingTreeData && this.groupLevel) {\n            var groupColVo = this.ssrmParams.rowGroupCols[this.level];\n            this.groupField = groupColVo.field;\n            this.rowGroupColumn = this.columnModel.getRowGroupColumns()[this.level];\n        }\n        this.nodeIdPrefix = this.blockUtils.createNodeIdPrefix(this.parentRowNode);\n        this.setData([]);\n    };\n    PartialStoreBlock.prototype.isDisplayIndexInBlock = function (displayIndex) {\n        return displayIndex >= this.displayIndexStart && displayIndex < this.displayIndexEnd;\n    };\n    PartialStoreBlock.prototype.isBlockBefore = function (displayIndex) {\n        return displayIndex >= this.displayIndexEnd;\n    };\n    PartialStoreBlock.prototype.getDisplayIndexStart = function () {\n        return this.displayIndexStart;\n    };\n    PartialStoreBlock.prototype.getDisplayIndexEnd = function () {\n        return this.displayIndexEnd;\n    };\n    PartialStoreBlock.prototype.getBlockHeightPx = function () {\n        return this.blockHeightPx;\n    };\n    PartialStoreBlock.prototype.getBlockTopPx = function () {\n        return this.blockTopPx;\n    };\n    PartialStoreBlock.prototype.isGroupLevel = function () {\n        return this.groupLevel;\n    };\n    PartialStoreBlock.prototype.getGroupField = function () {\n        return this.groupField;\n    };\n    PartialStoreBlock.prototype.prefixId = function (id) {\n        if (this.nodeIdPrefix != null) {\n            return this.nodeIdPrefix + '-' + id;\n        }\n        else {\n            return id.toString();\n        }\n    };\n    PartialStoreBlock.prototype.getBlockStateJson = function () {\n        return {\n            id: this.prefixId(this.getId()),\n            state: {\n                blockNumber: this.getId(),\n                startRow: this.startRow,\n                endRow: this.startRow + this.storeParams.cacheBlockSize,\n                pageStatus: this.getState()\n            }\n        };\n    };\n    PartialStoreBlock.prototype.isAnyNodeOpen = function () {\n        var openNodeCount = this.rowNodes.filter(function (node) { return node.expanded; }).length;\n        return openNodeCount > 0;\n    };\n    // this method is repeated, see forEachRowNode, why?\n    PartialStoreBlock.prototype.forEachNode = function (callback, sequence, includeChildren, filterAndSort) {\n        if (sequence === void 0) { sequence = new NumberSequence(); }\n        this.rowNodes.forEach(function (rowNode) {\n            callback(rowNode, sequence.next());\n            // this will only every happen for server side row model, as infinite\n            // row model doesn't have groups\n            if (includeChildren && rowNode.childStore) {\n                var childStore = rowNode.childStore;\n                if (filterAndSort) {\n                    childStore.forEachNodeDeepAfterFilterAndSort(callback, sequence);\n                }\n                else {\n                    childStore.forEachNodeDeep(callback, sequence);\n                }\n            }\n        });\n    };\n    PartialStoreBlock.prototype.forEachNodeDeep = function (callback, sequence) {\n        this.forEachNode(callback, sequence, true, false);\n    };\n    PartialStoreBlock.prototype.forEachNodeAfterFilterAndSort = function (callback, sequence) {\n        this.forEachNode(callback, sequence, true, true);\n    };\n    PartialStoreBlock.prototype.forEachNodeShallow = function (callback, sequence) {\n        this.forEachNode(callback, sequence, false, false);\n    };\n    PartialStoreBlock.prototype.getLastAccessed = function () {\n        return this.lastAccessed;\n    };\n    PartialStoreBlock.prototype.getRowUsingLocalIndex = function (rowIndex) {\n        return this.rowNodes[rowIndex - this.startRow];\n    };\n    PartialStoreBlock.prototype.touchLastAccessed = function () {\n        this.lastAccessed = this.ssrmParams.lastAccessedSequence.next();\n    };\n    PartialStoreBlock.prototype.processServerFail = function () {\n        this.parentStore.onBlockLoadFailed(this);\n    };\n    PartialStoreBlock.prototype.retryLoads = function () {\n        if (this.getState() === RowNodeBlock.STATE_FAILED) {\n            this.setStateWaitingToLoad();\n            this.rowNodeBlockLoader.checkBlockToLoad();\n            this.setData();\n        }\n        this.forEachNodeShallow(function (node) {\n            if (node.childStore) {\n                node.childStore.retryLoads();\n            }\n        });\n    };\n    PartialStoreBlock.prototype.processServerResult = function (params) {\n        this.parentStore.onBlockLoaded(this, params);\n    };\n    PartialStoreBlock.prototype.setData = function (rows, failedLoad) {\n        if (rows === void 0) { rows = []; }\n        if (failedLoad === void 0) { failedLoad = false; }\n        this.destroyRowNodes();\n        var storeRowCount = this.parentStore.getRowCount();\n        var startRow = this.getId() * this.storeParams.cacheBlockSize;\n        var endRow = Math.min(startRow + this.storeParams.cacheBlockSize, storeRowCount);\n        var rowsToCreate = endRow - startRow;\n        for (var i = 0; i < rowsToCreate; i++) {\n            var rowNode = this.blockUtils.createRowNode({ field: this.groupField, group: this.groupLevel, leafGroup: this.leafGroup,\n                level: this.level, parent: this.parentRowNode, rowGroupColumn: this.rowGroupColumn });\n            var dataLoadedForThisRow = i < rows.length;\n            if (dataLoadedForThisRow) {\n                var data = rows[i];\n                var defaultId = this.prefixId(this.startRow + i);\n                this.blockUtils.setDataIntoRowNode(rowNode, data, defaultId);\n                var newId = rowNode.id;\n                this.parentStore.removeDuplicateNode(newId);\n                this.nodeManager.addRowNode(rowNode);\n                this.allNodesMap[rowNode.id] = rowNode;\n                this.blockUtils.checkOpenByDefault(rowNode);\n            }\n            this.rowNodes.push(rowNode);\n            if (failedLoad) {\n                rowNode.failedLoad = true;\n            }\n        }\n    };\n    // to safeguard the grid against duplicate nodes, when a row is loaded, we check\n    // for another row in the same cache. if another row does exist, we delete it.\n    // this covers for when user refreshes the store (which typically happens after a\n    // data change) and the same row ends up coming back in a different block, and the\n    // new block finishes refreshing before the old block has finished refreshing.\n    PartialStoreBlock.prototype.removeDuplicateNode = function (id) {\n        var rowNode = this.allNodesMap[id];\n        if (!rowNode) {\n            return;\n        }\n        this.blockUtils.destroyRowNode(rowNode);\n        var index = this.rowNodes.indexOf(rowNode);\n        var stubRowNode = this.blockUtils.createRowNode({ field: this.groupField, group: this.groupLevel, leafGroup: this.leafGroup,\n            level: this.level, parent: this.parentRowNode, rowGroupColumn: this.rowGroupColumn });\n        this.rowNodes[index] = stubRowNode;\n    };\n    PartialStoreBlock.prototype.refresh = function () {\n        if (this.getState() !== RowNodeBlock.STATE_WAITING_TO_LOAD) {\n            this.setStateWaitingToLoad();\n        }\n    };\n    PartialStoreBlock.prototype.destroyRowNodes = function () {\n        this.blockUtils.destroyRowNodes(this.rowNodes);\n        this.rowNodes = [];\n        this.allNodesMap = {};\n    };\n    PartialStoreBlock.prototype.setBeans = function (loggerFactory) {\n        this.logger = loggerFactory.create('ServerSideBlock');\n    };\n    PartialStoreBlock.prototype.getRowUsingDisplayIndex = function (displayRowIndex) {\n        this.touchLastAccessed();\n        var res = this.blockUtils.binarySearchForDisplayIndex(displayRowIndex, this.rowNodes);\n        return res;\n    };\n    PartialStoreBlock.prototype.loadFromDatasource = function () {\n        this.cacheUtils.loadFromDatasource({\n            startRow: this.startRow,\n            endRow: this.startRow + this.storeParams.cacheBlockSize,\n            parentNode: this.parentRowNode,\n            storeParams: this.ssrmParams,\n            successCallback: this.pageLoaded.bind(this, this.getVersion()),\n            success: this.success.bind(this, this.getVersion()),\n            failCallback: this.pageLoadFailed.bind(this, this.getVersion()),\n            fail: this.pageLoadFailed.bind(this, this.getVersion())\n        });\n    };\n    PartialStoreBlock.prototype.isPixelInRange = function (pixel) {\n        return pixel >= this.blockTopPx && pixel < (this.blockTopPx + this.blockHeightPx);\n    };\n    PartialStoreBlock.prototype.getRowBounds = function (index) {\n        var _this = this;\n        this.touchLastAccessed();\n        var res;\n        _.find(this.rowNodes, function (rowNode) {\n            res = _this.blockUtils.extractRowBounds(rowNode, index);\n            return res != null;\n        });\n        return res;\n    };\n    PartialStoreBlock.prototype.getRowIndexAtPixel = function (pixel) {\n        var _this = this;\n        this.touchLastAccessed();\n        var res = null;\n        _.find(this.rowNodes, function (rowNode) {\n            res = _this.blockUtils.getIndexAtPixel(rowNode, pixel);\n            return res != null;\n        });\n        return res;\n    };\n    PartialStoreBlock.prototype.clearDisplayIndexes = function () {\n        var _this = this;\n        this.displayIndexEnd = undefined;\n        this.displayIndexStart = undefined;\n        this.rowNodes.forEach(function (rowNode) { return _this.blockUtils.clearDisplayIndex(rowNode); });\n    };\n    PartialStoreBlock.prototype.setDisplayIndexes = function (displayIndexSeq, nextRowTop) {\n        var _this = this;\n        this.displayIndexStart = displayIndexSeq.peek();\n        this.blockTopPx = nextRowTop.value;\n        this.rowNodes.forEach(function (rowNode) { return _this.blockUtils.setDisplayIndex(rowNode, displayIndexSeq, nextRowTop); });\n        this.displayIndexEnd = displayIndexSeq.peek();\n        this.blockHeightPx = nextRowTop.value - this.blockTopPx;\n    };\n    __decorate([\n        Autowired('columnModel')\n    ], PartialStoreBlock.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('ssrmCacheUtils')\n    ], PartialStoreBlock.prototype, \"cacheUtils\", void 0);\n    __decorate([\n        Autowired('ssrmBlockUtils')\n    ], PartialStoreBlock.prototype, \"blockUtils\", void 0);\n    __decorate([\n        Autowired('ssrmNodeManager')\n    ], PartialStoreBlock.prototype, \"nodeManager\", void 0);\n    __decorate([\n        Autowired('rowNodeBlockLoader')\n    ], PartialStoreBlock.prototype, \"rowNodeBlockLoader\", void 0);\n    __decorate([\n        PostConstruct\n    ], PartialStoreBlock.prototype, \"postConstruct\", null);\n    __decorate([\n        PreDestroy\n    ], PartialStoreBlock.prototype, \"destroyRowNodes\", null);\n    __decorate([\n        __param(0, Qualifier('loggerFactory'))\n    ], PartialStoreBlock.prototype, \"setBeans\", null);\n    return PartialStoreBlock;\n}(RowNodeBlock));\nexport { PartialStoreBlock };\n"]},"metadata":{},"sourceType":"module"}