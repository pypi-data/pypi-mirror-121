{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, AgCheckbox, Autowired, Column, Component, CssClassApplier, DragSourceType, Events, KeyCode, PostConstruct, RefSelector, TouchListener } from \"@ag-grid-community/core\";\nimport { ColumnModelItem } from \"./columnModelItem\";\n\nvar ToolPanelColumnGroupComp = function (_super) {\n  __extends(ToolPanelColumnGroupComp, _super);\n\n  function ToolPanelColumnGroupComp(modelItem, allowDragging, eventType, focusWrapper) {\n    var _this = _super.call(this) || this;\n\n    _this.modelItem = modelItem;\n    _this.allowDragging = allowDragging;\n    _this.eventType = eventType;\n    _this.focusWrapper = focusWrapper;\n    _this.processingColumnStateChange = false;\n    _this.modelItem = modelItem;\n    _this.columnGroup = modelItem.getColumnGroup();\n    _this.columnDept = modelItem.getDept();\n    _this.allowDragging = allowDragging;\n    return _this;\n  }\n\n  ToolPanelColumnGroupComp.prototype.init = function () {\n    this.setTemplate(ToolPanelColumnGroupComp.TEMPLATE);\n    this.eDragHandle = _.createIconNoSpan('columnDrag', this.gridOptionsWrapper);\n\n    _.addCssClass(this.eDragHandle, 'ag-drag-handle');\n\n    _.addCssClass(this.eDragHandle, 'ag-column-select-column-group-drag-handle');\n\n    this.cbSelect.getGui().insertAdjacentElement('afterend', this.eDragHandle);\n    this.displayName = this.columnModel.getDisplayNameForOriginalColumnGroup(null, this.columnGroup, this.eventType);\n\n    if (_.missing(this.displayName)) {\n      this.displayName = '>>';\n    }\n\n    this.eLabel.innerHTML = this.displayName ? this.displayName : '';\n    this.setupExpandContract();\n    this.addCssClass('ag-column-select-indent-' + this.columnDept);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onColumnStateChanged.bind(this));\n    this.addManagedListener(this.eLabel, 'click', this.onLabelClicked.bind(this));\n    this.addManagedListener(this.cbSelect, AgCheckbox.EVENT_CHANGED, this.onCheckboxChanged.bind(this));\n    this.addManagedListener(this.modelItem, ColumnModelItem.EVENT_EXPANDED_CHANGED, this.onExpandChanged.bind(this));\n    this.addManagedListener(this.focusWrapper, 'keydown', this.handleKeyDown.bind(this));\n    this.setOpenClosedIcons();\n    this.setupDragging();\n    this.onColumnStateChanged();\n    this.addVisibilityListenersToAllChildren();\n    this.refreshAriaExpanded();\n    this.refreshAriaLabel();\n    this.setupTooltip();\n    CssClassApplier.addToolPanelClassesFromColDef(this.columnGroup.getColGroupDef(), this.getGui(), this.gridOptionsWrapper, null, this.columnGroup);\n  };\n\n  ToolPanelColumnGroupComp.prototype.setupTooltip = function () {\n    var _this = this;\n\n    var colGroupDef = this.columnGroup.getColGroupDef();\n\n    if (!colGroupDef) {\n      return;\n    }\n\n    var refresh = function () {\n      var newTooltipText = colGroupDef.headerTooltip;\n\n      _this.setTooltip(newTooltipText);\n    };\n\n    refresh();\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, refresh);\n  };\n\n  ToolPanelColumnGroupComp.prototype.getTooltipParams = function () {\n    var res = _super.prototype.getTooltipParams.call(this);\n\n    res.location = 'columnToolPanelColumnGroup';\n    return res;\n  };\n\n  ToolPanelColumnGroupComp.prototype.handleKeyDown = function (e) {\n    switch (e.keyCode) {\n      case KeyCode.LEFT:\n        e.preventDefault();\n        this.modelItem.setExpanded(false);\n        break;\n\n      case KeyCode.RIGHT:\n        e.preventDefault();\n        this.modelItem.setExpanded(true);\n        break;\n\n      case KeyCode.SPACE:\n        e.preventDefault();\n\n        if (this.isSelectable()) {\n          this.onSelectAllChanged(!this.isSelected());\n        }\n\n        break;\n    }\n  };\n\n  ToolPanelColumnGroupComp.prototype.addVisibilityListenersToAllChildren = function () {\n    var _this = this;\n\n    this.columnGroup.getLeafColumns().forEach(function (column) {\n      _this.addManagedListener(column, Column.EVENT_VISIBLE_CHANGED, _this.onColumnStateChanged.bind(_this));\n\n      _this.addManagedListener(column, Column.EVENT_VALUE_CHANGED, _this.onColumnStateChanged.bind(_this));\n\n      _this.addManagedListener(column, Column.EVENT_PIVOT_CHANGED, _this.onColumnStateChanged.bind(_this));\n\n      _this.addManagedListener(column, Column.EVENT_ROW_GROUP_CHANGED, _this.onColumnStateChanged.bind(_this));\n    });\n  };\n\n  ToolPanelColumnGroupComp.prototype.setupDragging = function () {\n    var _this = this;\n\n    if (!this.allowDragging) {\n      _.setDisplayed(this.eDragHandle, false);\n\n      return;\n    }\n\n    var dragSource = {\n      type: DragSourceType.ToolPanel,\n      eElement: this.eDragHandle,\n      dragItemName: this.displayName,\n      getDragItem: function () {\n        return _this.createDragItem();\n      }\n    };\n    this.dragAndDropService.addDragSource(dragSource, true);\n    this.addDestroyFunc(function () {\n      return _this.dragAndDropService.removeDragSource(dragSource);\n    });\n  };\n\n  ToolPanelColumnGroupComp.prototype.createDragItem = function () {\n    var visibleState = {};\n    this.columnGroup.getLeafColumns().forEach(function (col) {\n      visibleState[col.getId()] = col.isVisible();\n    });\n    return {\n      columns: this.columnGroup.getLeafColumns(),\n      visibleState: visibleState\n    };\n  };\n\n  ToolPanelColumnGroupComp.prototype.setupExpandContract = function () {\n    this.eGroupClosedIcon.appendChild(_.createIcon('columnSelectClosed', this.gridOptionsWrapper, null));\n    this.eGroupOpenedIcon.appendChild(_.createIcon('columnSelectOpen', this.gridOptionsWrapper, null));\n    this.addManagedListener(this.eGroupClosedIcon, 'click', this.onExpandOrContractClicked.bind(this));\n    this.addManagedListener(this.eGroupOpenedIcon, 'click', this.onExpandOrContractClicked.bind(this));\n    var touchListener = new TouchListener(this.eColumnGroupIcons, true);\n    this.addManagedListener(touchListener, TouchListener.EVENT_TAP, this.onExpandOrContractClicked.bind(this));\n    this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n  };\n\n  ToolPanelColumnGroupComp.prototype.onLabelClicked = function () {\n    var nextState = !this.cbSelect.getValue();\n    this.onChangeCommon(nextState);\n  };\n\n  ToolPanelColumnGroupComp.prototype.onCheckboxChanged = function (event) {\n    this.onChangeCommon(event.selected);\n  };\n\n  ToolPanelColumnGroupComp.prototype.getVisibleLeafColumns = function () {\n    var childColumns = [];\n\n    var extractCols = function (children) {\n      children.forEach(function (child) {\n        if (!child.isPassesFilter()) {\n          return;\n        }\n\n        if (child.isGroup()) {\n          extractCols(child.getChildren());\n        } else {\n          childColumns.push(child.getColumn());\n        }\n      });\n    };\n\n    extractCols(this.modelItem.getChildren());\n    return childColumns;\n  };\n\n  ToolPanelColumnGroupComp.prototype.onChangeCommon = function (nextState) {\n    this.refreshAriaLabel();\n\n    if (this.processingColumnStateChange) {\n      return;\n    }\n\n    this.modelItemUtils.selectAllChildren(this.modelItem.getChildren(), nextState, this.eventType);\n  };\n\n  ToolPanelColumnGroupComp.prototype.refreshAriaLabel = function () {\n    var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n    var state = this.cbSelect.getValue() ? translate('ariaVisible', 'visible') : translate('ariaHidden', 'hidden');\n    var label = translate('ariaColumnGroupToggleVisibility', 'column group toggle visibility');\n\n    _.setAriaLabel(this.focusWrapper, this.displayName + \" \" + label + \" (\" + state + \")\");\n  };\n\n  ToolPanelColumnGroupComp.prototype.onColumnStateChanged = function () {\n    var selectedValue = this.workOutSelectedValue();\n    var readOnlyValue = this.workOutReadOnlyValue();\n    this.processingColumnStateChange = true;\n    this.cbSelect.setValue(selectedValue);\n    this.cbSelect.setReadOnly(readOnlyValue);\n\n    _.addOrRemoveCssClass(this.getGui(), 'ag-column-select-column-group-readonly', readOnlyValue);\n\n    this.processingColumnStateChange = false;\n  };\n\n  ToolPanelColumnGroupComp.prototype.workOutSelectedValue = function () {\n    var _this = this;\n\n    var pivotMode = this.columnModel.isPivotMode();\n    var visibleLeafColumns = this.getVisibleLeafColumns();\n    var checkedCount = 0;\n    var uncheckedCount = 0;\n    visibleLeafColumns.forEach(function (column) {\n      if (!pivotMode && column.getColDef().lockVisible) {\n        return;\n      }\n\n      if (_this.isColumnChecked(column, pivotMode)) {\n        checkedCount++;\n      } else {\n        uncheckedCount++;\n      }\n    });\n\n    if (checkedCount > 0 && uncheckedCount > 0) {\n      return undefined;\n    } else {\n      return checkedCount > 0;\n    }\n  };\n\n  ToolPanelColumnGroupComp.prototype.workOutReadOnlyValue = function () {\n    var pivotMode = this.columnModel.isPivotMode();\n    var colsThatCanAction = 0;\n    this.columnGroup.getLeafColumns().forEach(function (col) {\n      if (pivotMode) {\n        if (col.isAnyFunctionAllowed()) {\n          colsThatCanAction++;\n        }\n      } else {\n        if (!col.getColDef().lockVisible) {\n          colsThatCanAction++;\n        }\n      }\n    });\n    return colsThatCanAction === 0;\n  };\n\n  ToolPanelColumnGroupComp.prototype.isColumnChecked = function (column, pivotMode) {\n    if (pivotMode) {\n      var pivoted = column.isPivotActive();\n      var grouped = column.isRowGroupActive();\n      var aggregated = column.isValueActive();\n      return pivoted || grouped || aggregated;\n    } else {\n      return column.isVisible();\n    }\n  };\n\n  ToolPanelColumnGroupComp.prototype.onExpandOrContractClicked = function () {\n    var oldState = this.modelItem.isExpanded();\n    this.modelItem.setExpanded(!oldState);\n  };\n\n  ToolPanelColumnGroupComp.prototype.onExpandChanged = function () {\n    this.setOpenClosedIcons();\n    this.refreshAriaExpanded();\n  };\n\n  ToolPanelColumnGroupComp.prototype.setOpenClosedIcons = function () {\n    var folderOpen = this.modelItem.isExpanded();\n\n    _.setDisplayed(this.eGroupClosedIcon, !folderOpen);\n\n    _.setDisplayed(this.eGroupOpenedIcon, folderOpen);\n  };\n\n  ToolPanelColumnGroupComp.prototype.refreshAriaExpanded = function () {\n    _.setAriaExpanded(this.focusWrapper, this.modelItem.isExpanded());\n  };\n\n  ToolPanelColumnGroupComp.prototype.getDisplayName = function () {\n    return this.displayName;\n  };\n\n  ToolPanelColumnGroupComp.prototype.onSelectAllChanged = function (value) {\n    var cbValue = this.cbSelect.getValue();\n    var readOnly = this.cbSelect.isReadOnly();\n\n    if (!readOnly && (value && !cbValue || !value && cbValue)) {\n      this.cbSelect.toggle();\n    }\n  };\n\n  ToolPanelColumnGroupComp.prototype.isSelected = function () {\n    return this.cbSelect.getValue();\n  };\n\n  ToolPanelColumnGroupComp.prototype.isSelectable = function () {\n    return !this.cbSelect.isReadOnly();\n  };\n\n  ToolPanelColumnGroupComp.prototype.setSelected = function (selected) {\n    this.cbSelect.setValue(selected, true);\n  };\n\n  ToolPanelColumnGroupComp.TEMPLATE = \"<div class=\\\"ag-column-select-column-group\\\" aria-hidden=\\\"true\\\">\\n            <span class=\\\"ag-column-group-icons\\\" ref=\\\"eColumnGroupIcons\\\" >\\n                <span class=\\\"ag-column-group-closed-icon\\\" ref=\\\"eGroupClosedIcon\\\"></span>\\n                <span class=\\\"ag-column-group-opened-icon\\\" ref=\\\"eGroupOpenedIcon\\\"></span>\\n            </span>\\n            <ag-checkbox ref=\\\"cbSelect\\\" class=\\\"ag-column-select-checkbox\\\"></ag-checkbox>\\n            <span class=\\\"ag-column-select-column-label\\\" ref=\\\"eLabel\\\"></span>\\n        </div>\";\n\n  __decorate([Autowired('columnModel')], ToolPanelColumnGroupComp.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('dragAndDropService')], ToolPanelColumnGroupComp.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([Autowired('modelItemUtils')], ToolPanelColumnGroupComp.prototype, \"modelItemUtils\", void 0);\n\n  __decorate([RefSelector('cbSelect')], ToolPanelColumnGroupComp.prototype, \"cbSelect\", void 0);\n\n  __decorate([RefSelector('eLabel')], ToolPanelColumnGroupComp.prototype, \"eLabel\", void 0);\n\n  __decorate([RefSelector('eGroupOpenedIcon')], ToolPanelColumnGroupComp.prototype, \"eGroupOpenedIcon\", void 0);\n\n  __decorate([RefSelector('eGroupClosedIcon')], ToolPanelColumnGroupComp.prototype, \"eGroupClosedIcon\", void 0);\n\n  __decorate([RefSelector('eColumnGroupIcons')], ToolPanelColumnGroupComp.prototype, \"eColumnGroupIcons\", void 0);\n\n  __decorate([PostConstruct], ToolPanelColumnGroupComp.prototype, \"init\", null);\n\n  return ToolPanelColumnGroupComp;\n}(Component);\n\nexport { ToolPanelColumnGroupComp };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/column-tool-panel/dist/es6/columnToolPanel/toolPanelColumnGroupComp.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","AgCheckbox","Autowired","Column","Component","CssClassApplier","DragSourceType","Events","KeyCode","PostConstruct","RefSelector","TouchListener","ColumnModelItem","ToolPanelColumnGroupComp","_super","modelItem","allowDragging","eventType","focusWrapper","_this","call","processingColumnStateChange","columnGroup","getColumnGroup","columnDept","getDept","init","setTemplate","TEMPLATE","eDragHandle","createIconNoSpan","gridOptionsWrapper","addCssClass","cbSelect","getGui","insertAdjacentElement","displayName","columnModel","getDisplayNameForOriginalColumnGroup","missing","eLabel","innerHTML","setupExpandContract","addManagedListener","eventService","EVENT_COLUMN_PIVOT_MODE_CHANGED","onColumnStateChanged","bind","onLabelClicked","EVENT_CHANGED","onCheckboxChanged","EVENT_EXPANDED_CHANGED","onExpandChanged","handleKeyDown","setOpenClosedIcons","setupDragging","addVisibilityListenersToAllChildren","refreshAriaExpanded","refreshAriaLabel","setupTooltip","addToolPanelClassesFromColDef","getColGroupDef","colGroupDef","refresh","newTooltipText","headerTooltip","setTooltip","EVENT_NEW_COLUMNS_LOADED","getTooltipParams","res","location","e","keyCode","LEFT","preventDefault","setExpanded","RIGHT","SPACE","isSelectable","onSelectAllChanged","isSelected","getLeafColumns","forEach","column","EVENT_VISIBLE_CHANGED","EVENT_VALUE_CHANGED","EVENT_PIVOT_CHANGED","EVENT_ROW_GROUP_CHANGED","setDisplayed","dragSource","type","ToolPanel","eElement","dragItemName","getDragItem","createDragItem","dragAndDropService","addDragSource","addDestroyFunc","removeDragSource","visibleState","col","getId","isVisible","columns","eGroupClosedIcon","appendChild","createIcon","eGroupOpenedIcon","onExpandOrContractClicked","touchListener","eColumnGroupIcons","EVENT_TAP","destroy","nextState","getValue","onChangeCommon","event","selected","getVisibleLeafColumns","childColumns","extractCols","children","child","isPassesFilter","isGroup","getChildren","push","getColumn","modelItemUtils","selectAllChildren","translate","getLocaleTextFunc","state","label","setAriaLabel","selectedValue","workOutSelectedValue","readOnlyValue","workOutReadOnlyValue","setValue","setReadOnly","addOrRemoveCssClass","pivotMode","isPivotMode","visibleLeafColumns","checkedCount","uncheckedCount","getColDef","lockVisible","isColumnChecked","undefined","colsThatCanAction","isAnyFunctionAllowed","pivoted","isPivotActive","grouped","isRowGroupActive","aggregated","isValueActive","oldState","isExpanded","folderOpen","setAriaExpanded","getDisplayName","value","cbValue","readOnly","isReadOnly","toggle","setSelected"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, AgCheckbox, Autowired, Column, Component, CssClassApplier, DragSourceType, Events, KeyCode, PostConstruct, RefSelector, TouchListener } from \"@ag-grid-community/core\";\nimport { ColumnModelItem } from \"./columnModelItem\";\nvar ToolPanelColumnGroupComp = /** @class */ (function (_super) {\n    __extends(ToolPanelColumnGroupComp, _super);\n    function ToolPanelColumnGroupComp(modelItem, allowDragging, eventType, focusWrapper) {\n        var _this = _super.call(this) || this;\n        _this.modelItem = modelItem;\n        _this.allowDragging = allowDragging;\n        _this.eventType = eventType;\n        _this.focusWrapper = focusWrapper;\n        _this.processingColumnStateChange = false;\n        _this.modelItem = modelItem;\n        _this.columnGroup = modelItem.getColumnGroup();\n        _this.columnDept = modelItem.getDept();\n        _this.allowDragging = allowDragging;\n        return _this;\n    }\n    ToolPanelColumnGroupComp.prototype.init = function () {\n        this.setTemplate(ToolPanelColumnGroupComp.TEMPLATE);\n        this.eDragHandle = _.createIconNoSpan('columnDrag', this.gridOptionsWrapper);\n        _.addCssClass(this.eDragHandle, 'ag-drag-handle');\n        _.addCssClass(this.eDragHandle, 'ag-column-select-column-group-drag-handle');\n        this.cbSelect.getGui().insertAdjacentElement('afterend', this.eDragHandle);\n        this.displayName = this.columnModel.getDisplayNameForOriginalColumnGroup(null, this.columnGroup, this.eventType);\n        if (_.missing(this.displayName)) {\n            this.displayName = '>>';\n        }\n        this.eLabel.innerHTML = this.displayName ? this.displayName : '';\n        this.setupExpandContract();\n        this.addCssClass('ag-column-select-indent-' + this.columnDept);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onColumnStateChanged.bind(this));\n        this.addManagedListener(this.eLabel, 'click', this.onLabelClicked.bind(this));\n        this.addManagedListener(this.cbSelect, AgCheckbox.EVENT_CHANGED, this.onCheckboxChanged.bind(this));\n        this.addManagedListener(this.modelItem, ColumnModelItem.EVENT_EXPANDED_CHANGED, this.onExpandChanged.bind(this));\n        this.addManagedListener(this.focusWrapper, 'keydown', this.handleKeyDown.bind(this));\n        this.setOpenClosedIcons();\n        this.setupDragging();\n        this.onColumnStateChanged();\n        this.addVisibilityListenersToAllChildren();\n        this.refreshAriaExpanded();\n        this.refreshAriaLabel();\n        this.setupTooltip();\n        CssClassApplier.addToolPanelClassesFromColDef(this.columnGroup.getColGroupDef(), this.getGui(), this.gridOptionsWrapper, null, this.columnGroup);\n    };\n    ToolPanelColumnGroupComp.prototype.setupTooltip = function () {\n        var _this = this;\n        var colGroupDef = this.columnGroup.getColGroupDef();\n        if (!colGroupDef) {\n            return;\n        }\n        var refresh = function () {\n            var newTooltipText = colGroupDef.headerTooltip;\n            _this.setTooltip(newTooltipText);\n        };\n        refresh();\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, refresh);\n    };\n    ToolPanelColumnGroupComp.prototype.getTooltipParams = function () {\n        var res = _super.prototype.getTooltipParams.call(this);\n        res.location = 'columnToolPanelColumnGroup';\n        return res;\n    };\n    ToolPanelColumnGroupComp.prototype.handleKeyDown = function (e) {\n        switch (e.keyCode) {\n            case KeyCode.LEFT:\n                e.preventDefault();\n                this.modelItem.setExpanded(false);\n                break;\n            case KeyCode.RIGHT:\n                e.preventDefault();\n                this.modelItem.setExpanded(true);\n                break;\n            case KeyCode.SPACE:\n                e.preventDefault();\n                if (this.isSelectable()) {\n                    this.onSelectAllChanged(!this.isSelected());\n                }\n                break;\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.addVisibilityListenersToAllChildren = function () {\n        var _this = this;\n        this.columnGroup.getLeafColumns().forEach(function (column) {\n            _this.addManagedListener(column, Column.EVENT_VISIBLE_CHANGED, _this.onColumnStateChanged.bind(_this));\n            _this.addManagedListener(column, Column.EVENT_VALUE_CHANGED, _this.onColumnStateChanged.bind(_this));\n            _this.addManagedListener(column, Column.EVENT_PIVOT_CHANGED, _this.onColumnStateChanged.bind(_this));\n            _this.addManagedListener(column, Column.EVENT_ROW_GROUP_CHANGED, _this.onColumnStateChanged.bind(_this));\n        });\n    };\n    ToolPanelColumnGroupComp.prototype.setupDragging = function () {\n        var _this = this;\n        if (!this.allowDragging) {\n            _.setDisplayed(this.eDragHandle, false);\n            return;\n        }\n        var dragSource = {\n            type: DragSourceType.ToolPanel,\n            eElement: this.eDragHandle,\n            dragItemName: this.displayName,\n            getDragItem: function () { return _this.createDragItem(); }\n        };\n        this.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource); });\n    };\n    ToolPanelColumnGroupComp.prototype.createDragItem = function () {\n        var visibleState = {};\n        this.columnGroup.getLeafColumns().forEach(function (col) {\n            visibleState[col.getId()] = col.isVisible();\n        });\n        return {\n            columns: this.columnGroup.getLeafColumns(),\n            visibleState: visibleState\n        };\n    };\n    ToolPanelColumnGroupComp.prototype.setupExpandContract = function () {\n        this.eGroupClosedIcon.appendChild(_.createIcon('columnSelectClosed', this.gridOptionsWrapper, null));\n        this.eGroupOpenedIcon.appendChild(_.createIcon('columnSelectOpen', this.gridOptionsWrapper, null));\n        this.addManagedListener(this.eGroupClosedIcon, 'click', this.onExpandOrContractClicked.bind(this));\n        this.addManagedListener(this.eGroupOpenedIcon, 'click', this.onExpandOrContractClicked.bind(this));\n        var touchListener = new TouchListener(this.eColumnGroupIcons, true);\n        this.addManagedListener(touchListener, TouchListener.EVENT_TAP, this.onExpandOrContractClicked.bind(this));\n        this.addDestroyFunc(touchListener.destroy.bind(touchListener));\n    };\n    ToolPanelColumnGroupComp.prototype.onLabelClicked = function () {\n        var nextState = !this.cbSelect.getValue();\n        this.onChangeCommon(nextState);\n    };\n    ToolPanelColumnGroupComp.prototype.onCheckboxChanged = function (event) {\n        this.onChangeCommon(event.selected);\n    };\n    ToolPanelColumnGroupComp.prototype.getVisibleLeafColumns = function () {\n        var childColumns = [];\n        var extractCols = function (children) {\n            children.forEach(function (child) {\n                if (!child.isPassesFilter()) {\n                    return;\n                }\n                if (child.isGroup()) {\n                    extractCols(child.getChildren());\n                }\n                else {\n                    childColumns.push(child.getColumn());\n                }\n            });\n        };\n        extractCols(this.modelItem.getChildren());\n        return childColumns;\n    };\n    ToolPanelColumnGroupComp.prototype.onChangeCommon = function (nextState) {\n        this.refreshAriaLabel();\n        if (this.processingColumnStateChange) {\n            return;\n        }\n        this.modelItemUtils.selectAllChildren(this.modelItem.getChildren(), nextState, this.eventType);\n    };\n    ToolPanelColumnGroupComp.prototype.refreshAriaLabel = function () {\n        var translate = this.gridOptionsWrapper.getLocaleTextFunc();\n        var state = this.cbSelect.getValue() ? translate('ariaVisible', 'visible') : translate('ariaHidden', 'hidden');\n        var label = translate('ariaColumnGroupToggleVisibility', 'column group toggle visibility');\n        _.setAriaLabel(this.focusWrapper, this.displayName + \" \" + label + \" (\" + state + \")\");\n    };\n    ToolPanelColumnGroupComp.prototype.onColumnStateChanged = function () {\n        var selectedValue = this.workOutSelectedValue();\n        var readOnlyValue = this.workOutReadOnlyValue();\n        this.processingColumnStateChange = true;\n        this.cbSelect.setValue(selectedValue);\n        this.cbSelect.setReadOnly(readOnlyValue);\n        _.addOrRemoveCssClass(this.getGui(), 'ag-column-select-column-group-readonly', readOnlyValue);\n        this.processingColumnStateChange = false;\n    };\n    ToolPanelColumnGroupComp.prototype.workOutSelectedValue = function () {\n        var _this = this;\n        var pivotMode = this.columnModel.isPivotMode();\n        var visibleLeafColumns = this.getVisibleLeafColumns();\n        var checkedCount = 0;\n        var uncheckedCount = 0;\n        visibleLeafColumns.forEach(function (column) {\n            if (!pivotMode && column.getColDef().lockVisible) {\n                return;\n            }\n            if (_this.isColumnChecked(column, pivotMode)) {\n                checkedCount++;\n            }\n            else {\n                uncheckedCount++;\n            }\n        });\n        if (checkedCount > 0 && uncheckedCount > 0) {\n            return undefined;\n        }\n        else {\n            return checkedCount > 0;\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.workOutReadOnlyValue = function () {\n        var pivotMode = this.columnModel.isPivotMode();\n        var colsThatCanAction = 0;\n        this.columnGroup.getLeafColumns().forEach(function (col) {\n            if (pivotMode) {\n                if (col.isAnyFunctionAllowed()) {\n                    colsThatCanAction++;\n                }\n            }\n            else {\n                if (!col.getColDef().lockVisible) {\n                    colsThatCanAction++;\n                }\n            }\n        });\n        return colsThatCanAction === 0;\n    };\n    ToolPanelColumnGroupComp.prototype.isColumnChecked = function (column, pivotMode) {\n        if (pivotMode) {\n            var pivoted = column.isPivotActive();\n            var grouped = column.isRowGroupActive();\n            var aggregated = column.isValueActive();\n            return pivoted || grouped || aggregated;\n        }\n        else {\n            return column.isVisible();\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.onExpandOrContractClicked = function () {\n        var oldState = this.modelItem.isExpanded();\n        this.modelItem.setExpanded(!oldState);\n    };\n    ToolPanelColumnGroupComp.prototype.onExpandChanged = function () {\n        this.setOpenClosedIcons();\n        this.refreshAriaExpanded();\n    };\n    ToolPanelColumnGroupComp.prototype.setOpenClosedIcons = function () {\n        var folderOpen = this.modelItem.isExpanded();\n        _.setDisplayed(this.eGroupClosedIcon, !folderOpen);\n        _.setDisplayed(this.eGroupOpenedIcon, folderOpen);\n    };\n    ToolPanelColumnGroupComp.prototype.refreshAriaExpanded = function () {\n        _.setAriaExpanded(this.focusWrapper, this.modelItem.isExpanded());\n    };\n    ToolPanelColumnGroupComp.prototype.getDisplayName = function () {\n        return this.displayName;\n    };\n    ToolPanelColumnGroupComp.prototype.onSelectAllChanged = function (value) {\n        var cbValue = this.cbSelect.getValue();\n        var readOnly = this.cbSelect.isReadOnly();\n        if (!readOnly && ((value && !cbValue) || (!value && cbValue))) {\n            this.cbSelect.toggle();\n        }\n    };\n    ToolPanelColumnGroupComp.prototype.isSelected = function () {\n        return this.cbSelect.getValue();\n    };\n    ToolPanelColumnGroupComp.prototype.isSelectable = function () {\n        return !this.cbSelect.isReadOnly();\n    };\n    ToolPanelColumnGroupComp.prototype.setSelected = function (selected) {\n        this.cbSelect.setValue(selected, true);\n    };\n    ToolPanelColumnGroupComp.TEMPLATE = \"<div class=\\\"ag-column-select-column-group\\\" aria-hidden=\\\"true\\\">\\n            <span class=\\\"ag-column-group-icons\\\" ref=\\\"eColumnGroupIcons\\\" >\\n                <span class=\\\"ag-column-group-closed-icon\\\" ref=\\\"eGroupClosedIcon\\\"></span>\\n                <span class=\\\"ag-column-group-opened-icon\\\" ref=\\\"eGroupOpenedIcon\\\"></span>\\n            </span>\\n            <ag-checkbox ref=\\\"cbSelect\\\" class=\\\"ag-column-select-checkbox\\\"></ag-checkbox>\\n            <span class=\\\"ag-column-select-column-label\\\" ref=\\\"eLabel\\\"></span>\\n        </div>\";\n    __decorate([\n        Autowired('columnModel')\n    ], ToolPanelColumnGroupComp.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('dragAndDropService')\n    ], ToolPanelColumnGroupComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        Autowired('modelItemUtils')\n    ], ToolPanelColumnGroupComp.prototype, \"modelItemUtils\", void 0);\n    __decorate([\n        RefSelector('cbSelect')\n    ], ToolPanelColumnGroupComp.prototype, \"cbSelect\", void 0);\n    __decorate([\n        RefSelector('eLabel')\n    ], ToolPanelColumnGroupComp.prototype, \"eLabel\", void 0);\n    __decorate([\n        RefSelector('eGroupOpenedIcon')\n    ], ToolPanelColumnGroupComp.prototype, \"eGroupOpenedIcon\", void 0);\n    __decorate([\n        RefSelector('eGroupClosedIcon')\n    ], ToolPanelColumnGroupComp.prototype, \"eGroupClosedIcon\", void 0);\n    __decorate([\n        RefSelector('eColumnGroupIcons')\n    ], ToolPanelColumnGroupComp.prototype, \"eColumnGroupIcons\", void 0);\n    __decorate([\n        PostConstruct\n    ], ToolPanelColumnGroupComp.prototype, \"init\", null);\n    return ToolPanelColumnGroupComp;\n}(Component));\nexport { ToolPanelColumnGroupComp };\n"]},"metadata":{},"sourceType":"module"}