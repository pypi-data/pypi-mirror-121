{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, Autowired, Bean, BeanStub } from \"@ag-grid-community/core\";\n\nvar ChartCrossFilter = function (_super) {\n  __extends(ChartCrossFilter, _super);\n\n  function ChartCrossFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ChartCrossFilter_1 = ChartCrossFilter;\n\n  ChartCrossFilter.prototype.filter = function (event, reset) {\n    if (reset === void 0) {\n      reset = false;\n    }\n\n    var filterModel = this.gridApi.getFilterModel(); // filters should be reset when user clicks on canvas background\n\n    if (reset) {\n      this.resetFilters(filterModel);\n      return;\n    }\n\n    var colId = ChartCrossFilter_1.extractFilterColId(event);\n\n    if (this.isValidColumnFilter(colId)) {\n      // update filters based on current chart selections\n      this.updateFilters(filterModel, event);\n    } else {\n      console.warn(\"AG Grid: cross filtering requires a 'agSetColumnFilter' or 'agMultiColumnFilter' \" + \"to be defined on the column with id: '\" + colId + \"'\");\n    }\n  };\n\n  ChartCrossFilter.prototype.resetFilters = function (filterModel) {\n    var filtersExist = Object.keys(filterModel).length > 0;\n\n    if (filtersExist) {\n      // only reset filters / charts when necessary to prevent undesirable flickering effect\n      this.gridApi.setFilterModel(null);\n      this.gridApi.onFilterChanged();\n    }\n  };\n\n  ChartCrossFilter.prototype.updateFilters = function (filterModel, event) {\n    var _a;\n\n    var dataKey = ChartCrossFilter_1.extractFilterColId(event);\n    var rawValue = event.datum[dataKey];\n\n    if (rawValue === undefined) {\n      return;\n    }\n\n    var selectedValue = rawValue.toString();\n    var filterColId = dataKey.replace('-filtered-out', '');\n\n    if (event.event.metaKey || event.event.ctrlKey) {\n      var existingGridValues = this.getCurrentGridValuesForCategory(filterColId);\n\n      var valueAlreadyExists = _.includes(existingGridValues, selectedValue);\n\n      var updatedValues = void 0;\n\n      if (valueAlreadyExists) {\n        updatedValues = existingGridValues.filter(function (v) {\n          return v !== selectedValue;\n        });\n      } else {\n        updatedValues = existingGridValues;\n        updatedValues.push(selectedValue);\n      }\n\n      filterModel[filterColId] = this.getUpdatedFilterModel(filterColId, updatedValues);\n    } else {\n      var updatedValues = [selectedValue];\n      filterModel = (_a = {}, _a[filterColId] = this.getUpdatedFilterModel(filterColId, updatedValues), _a);\n    }\n\n    this.gridApi.setFilterModel(filterModel);\n  };\n\n  ChartCrossFilter.prototype.getUpdatedFilterModel = function (colId, updatedValues) {\n    var columnFilterType = this.getColumnFilterType(colId);\n\n    if (columnFilterType === 'agMultiColumnFilter') {\n      return {\n        filterType: 'multi',\n        filterModels: [null, {\n          filterType: 'set',\n          values: updatedValues\n        }]\n      };\n    }\n\n    return {\n      filterType: 'set',\n      values: updatedValues\n    };\n  };\n\n  ChartCrossFilter.prototype.getCurrentGridValuesForCategory = function (dataKey) {\n    var filteredValues = [];\n    var gridContainsValue = _.includes;\n    this.gridApi.forEachNodeAfterFilter(function (rowNode) {\n      if (!rowNode.group) {\n        var value = rowNode.data[dataKey] + '';\n\n        if (!gridContainsValue(filteredValues, value)) {\n          filteredValues.push(value);\n        }\n      }\n    });\n    return filteredValues;\n  };\n\n  ChartCrossFilter.extractFilterColId = function (event) {\n    return event.xKey ? event.xKey : event.labelKey;\n  };\n\n  ChartCrossFilter.prototype.isValidColumnFilter = function (colId) {\n    if (colId.indexOf('-filtered-out')) {\n      colId = colId.replace('-filtered-out', '');\n    }\n\n    var filterType = this.getColumnFilterType(colId);\n\n    if (typeof filterType === 'boolean') {\n      return filterType;\n    }\n\n    return _.includes(['agSetColumnFilter', 'agMultiColumnFilter'], filterType);\n  };\n\n  ChartCrossFilter.prototype.getColumnFilterType = function (colId) {\n    var gridColumn = this.columnModel.getGridColumn(colId);\n    return gridColumn ? gridColumn.getColDef().filter : undefined;\n  };\n\n  var ChartCrossFilter_1;\n\n  __decorate([Autowired('gridApi')], ChartCrossFilter.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('columnModel')], ChartCrossFilter.prototype, \"columnModel\", void 0);\n\n  ChartCrossFilter = ChartCrossFilter_1 = __decorate([Bean(\"chartCrossFilter\")], ChartCrossFilter);\n  return ChartCrossFilter;\n}(BeanStub);\n\nexport { ChartCrossFilter };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/charts/dist/es6/charts/chartComp/chartCrossFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","Autowired","Bean","BeanStub","ChartCrossFilter","_super","apply","ChartCrossFilter_1","filter","event","reset","filterModel","gridApi","getFilterModel","resetFilters","colId","extractFilterColId","isValidColumnFilter","updateFilters","console","warn","filtersExist","keys","setFilterModel","onFilterChanged","_a","dataKey","rawValue","datum","undefined","selectedValue","toString","filterColId","replace","metaKey","ctrlKey","existingGridValues","getCurrentGridValuesForCategory","valueAlreadyExists","includes","updatedValues","v","push","getUpdatedFilterModel","columnFilterType","getColumnFilterType","filterType","filterModels","values","filteredValues","gridContainsValue","forEachNodeAfterFilter","rowNode","group","value","data","xKey","labelKey","indexOf","gridColumn","columnModel","getGridColumn","getColDef"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Bean, BeanStub } from \"@ag-grid-community/core\";\nvar ChartCrossFilter = /** @class */ (function (_super) {\n    __extends(ChartCrossFilter, _super);\n    function ChartCrossFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ChartCrossFilter_1 = ChartCrossFilter;\n    ChartCrossFilter.prototype.filter = function (event, reset) {\n        if (reset === void 0) { reset = false; }\n        var filterModel = this.gridApi.getFilterModel();\n        // filters should be reset when user clicks on canvas background\n        if (reset) {\n            this.resetFilters(filterModel);\n            return;\n        }\n        var colId = ChartCrossFilter_1.extractFilterColId(event);\n        if (this.isValidColumnFilter(colId)) {\n            // update filters based on current chart selections\n            this.updateFilters(filterModel, event);\n        }\n        else {\n            console.warn(\"AG Grid: cross filtering requires a 'agSetColumnFilter' or 'agMultiColumnFilter' \" +\n                \"to be defined on the column with id: '\" + colId + \"'\");\n        }\n    };\n    ChartCrossFilter.prototype.resetFilters = function (filterModel) {\n        var filtersExist = Object.keys(filterModel).length > 0;\n        if (filtersExist) {\n            // only reset filters / charts when necessary to prevent undesirable flickering effect\n            this.gridApi.setFilterModel(null);\n            this.gridApi.onFilterChanged();\n        }\n    };\n    ChartCrossFilter.prototype.updateFilters = function (filterModel, event) {\n        var _a;\n        var dataKey = ChartCrossFilter_1.extractFilterColId(event);\n        var rawValue = event.datum[dataKey];\n        if (rawValue === undefined) {\n            return;\n        }\n        var selectedValue = rawValue.toString();\n        var filterColId = dataKey.replace('-filtered-out', '');\n        if (event.event.metaKey || event.event.ctrlKey) {\n            var existingGridValues = this.getCurrentGridValuesForCategory(filterColId);\n            var valueAlreadyExists = _.includes(existingGridValues, selectedValue);\n            var updatedValues = void 0;\n            if (valueAlreadyExists) {\n                updatedValues = existingGridValues.filter(function (v) { return v !== selectedValue; });\n            }\n            else {\n                updatedValues = existingGridValues;\n                updatedValues.push(selectedValue);\n            }\n            filterModel[filterColId] = this.getUpdatedFilterModel(filterColId, updatedValues);\n        }\n        else {\n            var updatedValues = [selectedValue];\n            filterModel = (_a = {}, _a[filterColId] = this.getUpdatedFilterModel(filterColId, updatedValues), _a);\n        }\n        this.gridApi.setFilterModel(filterModel);\n    };\n    ChartCrossFilter.prototype.getUpdatedFilterModel = function (colId, updatedValues) {\n        var columnFilterType = this.getColumnFilterType(colId);\n        if (columnFilterType === 'agMultiColumnFilter') {\n            return { filterType: 'multi', filterModels: [null, { filterType: 'set', values: updatedValues }] };\n        }\n        return { filterType: 'set', values: updatedValues };\n    };\n    ChartCrossFilter.prototype.getCurrentGridValuesForCategory = function (dataKey) {\n        var filteredValues = [];\n        var gridContainsValue = _.includes;\n        this.gridApi.forEachNodeAfterFilter(function (rowNode) {\n            if (!rowNode.group) {\n                var value = rowNode.data[dataKey] + '';\n                if (!gridContainsValue(filteredValues, value)) {\n                    filteredValues.push(value);\n                }\n            }\n        });\n        return filteredValues;\n    };\n    ChartCrossFilter.extractFilterColId = function (event) {\n        return event.xKey ? event.xKey : event.labelKey;\n    };\n    ChartCrossFilter.prototype.isValidColumnFilter = function (colId) {\n        if (colId.indexOf('-filtered-out')) {\n            colId = colId.replace('-filtered-out', '');\n        }\n        var filterType = this.getColumnFilterType(colId);\n        if (typeof filterType === 'boolean') {\n            return filterType;\n        }\n        return _.includes(['agSetColumnFilter', 'agMultiColumnFilter'], filterType);\n    };\n    ChartCrossFilter.prototype.getColumnFilterType = function (colId) {\n        var gridColumn = this.columnModel.getGridColumn(colId);\n        return gridColumn ? gridColumn.getColDef().filter : undefined;\n    };\n    var ChartCrossFilter_1;\n    __decorate([\n        Autowired('gridApi')\n    ], ChartCrossFilter.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], ChartCrossFilter.prototype, \"columnModel\", void 0);\n    ChartCrossFilter = ChartCrossFilter_1 = __decorate([\n        Bean(\"chartCrossFilter\")\n    ], ChartCrossFilter);\n    return ChartCrossFilter;\n}(BeanStub));\nexport { ChartCrossFilter };\n"]},"metadata":{},"sourceType":"module"}