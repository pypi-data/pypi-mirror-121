{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { _ } from '@ag-grid-community/core';\nimport { ExcelXlsxFactory } from './excelXlsxFactory';\nimport { BaseExcelSerializingSession } from './baseExcelSerializingSession';\n\nvar ExcelXlsxSerializingSession = function (_super) {\n  __extends(ExcelXlsxSerializingSession, _super);\n\n  function ExcelXlsxSerializingSession() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ExcelXlsxSerializingSession.prototype.createExcel = function (data) {\n    var _a = this,\n        excelStyles = _a.excelStyles,\n        config = _a.config;\n\n    var margins = config.margins,\n        pageSetup = config.pageSetup,\n        headerFooterConfig = config.headerFooterConfig;\n    return ExcelXlsxFactory.createExcel(excelStyles, data, margins, pageSetup, headerFooterConfig);\n  };\n\n  ExcelXlsxSerializingSession.prototype.getDataTypeForValue = function (valueForCell) {\n    if (valueForCell === undefined) {\n      return 'empty';\n    }\n\n    return _.isNumeric(valueForCell) ? 'n' : 's';\n  };\n\n  ExcelXlsxSerializingSession.prototype.getType = function (type, style, value) {\n    if (this.isFormula(value)) {\n      return 'f';\n    }\n\n    if (style && style.dataType) {\n      switch (style.dataType.toLocaleLowerCase()) {\n        case 'formula':\n          return 'f';\n\n        case 'string':\n          return 's';\n\n        case 'number':\n          return 'n';\n\n        case 'datetime':\n          return 'd';\n\n        case 'error':\n          return 'e';\n\n        case 'boolean':\n          return 'b';\n\n        default:\n          console.warn(\"ag-grid: Unrecognized data type for excel export [\" + style.id + \".dataType=\" + style.dataType + \"]\");\n      }\n    }\n\n    return type;\n  };\n\n  ExcelXlsxSerializingSession.prototype.addImage = function (rowIndex, column, value) {\n    if (!this.config.addImageToCell) {\n      return;\n    }\n\n    var addedImage = this.config.addImageToCell(rowIndex, column, value);\n\n    if (!addedImage) {\n      return;\n    }\n\n    ExcelXlsxFactory.buildImageMap(addedImage.image, rowIndex, column, this.columnsToExport, this.config.rowHeight);\n    return addedImage;\n  };\n\n  ExcelXlsxSerializingSession.prototype.createCell = function (styleId, type, value) {\n    var actualStyle = this.getStyleById(styleId);\n    var typeTransformed = this.getType(type, actualStyle, value) || type;\n    return {\n      styleId: actualStyle ? styleId : undefined,\n      data: {\n        type: typeTransformed,\n        value: this.getCellValue(typeTransformed, value)\n      }\n    };\n  };\n\n  ExcelXlsxSerializingSession.prototype.createMergedCell = function (styleId, type, value, numOfCells) {\n    var valueToUse = value == null ? '' : value;\n    return {\n      styleId: !!this.getStyleById(styleId) ? styleId : undefined,\n      data: {\n        type: type,\n        value: type === 's' ? ExcelXlsxFactory.getStringPosition(valueToUse).toString() : value\n      },\n      mergeAcross: numOfCells\n    };\n  };\n\n  ExcelXlsxSerializingSession.prototype.getCellValue = function (type, value) {\n    if (value == null) {\n      return ExcelXlsxFactory.getStringPosition('').toString();\n    }\n\n    switch (type) {\n      case 's':\n        return value === '' ? '' : ExcelXlsxFactory.getStringPosition(value).toString();\n\n      case 'f':\n        return value.slice(1);\n\n      case 'n':\n        return Number(value).toString();\n\n      default:\n        return value;\n    }\n  };\n\n  return ExcelXlsxSerializingSession;\n}(BaseExcelSerializingSession);\n\nexport { ExcelXlsxSerializingSession };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/excelXlsxSerializingSession.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","_","ExcelXlsxFactory","BaseExcelSerializingSession","ExcelXlsxSerializingSession","_super","apply","arguments","createExcel","data","_a","excelStyles","config","margins","pageSetup","headerFooterConfig","getDataTypeForValue","valueForCell","undefined","isNumeric","getType","type","style","value","isFormula","dataType","toLocaleLowerCase","console","warn","id","addImage","rowIndex","column","addImageToCell","addedImage","buildImageMap","image","columnsToExport","rowHeight","createCell","styleId","actualStyle","getStyleById","typeTransformed","getCellValue","createMergedCell","numOfCells","valueToUse","getStringPosition","toString","mergeAcross","slice","Number"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { _ } from '@ag-grid-community/core';\nimport { ExcelXlsxFactory } from './excelXlsxFactory';\nimport { BaseExcelSerializingSession } from './baseExcelSerializingSession';\nvar ExcelXlsxSerializingSession = /** @class */ (function (_super) {\n    __extends(ExcelXlsxSerializingSession, _super);\n    function ExcelXlsxSerializingSession() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ExcelXlsxSerializingSession.prototype.createExcel = function (data) {\n        var _a = this, excelStyles = _a.excelStyles, config = _a.config;\n        var margins = config.margins, pageSetup = config.pageSetup, headerFooterConfig = config.headerFooterConfig;\n        return ExcelXlsxFactory.createExcel(excelStyles, data, margins, pageSetup, headerFooterConfig);\n    };\n    ExcelXlsxSerializingSession.prototype.getDataTypeForValue = function (valueForCell) {\n        if (valueForCell === undefined) {\n            return 'empty';\n        }\n        return _.isNumeric(valueForCell) ? 'n' : 's';\n    };\n    ExcelXlsxSerializingSession.prototype.getType = function (type, style, value) {\n        if (this.isFormula(value)) {\n            return 'f';\n        }\n        if (style && style.dataType) {\n            switch (style.dataType.toLocaleLowerCase()) {\n                case 'formula':\n                    return 'f';\n                case 'string':\n                    return 's';\n                case 'number':\n                    return 'n';\n                case 'datetime':\n                    return 'd';\n                case 'error':\n                    return 'e';\n                case 'boolean':\n                    return 'b';\n                default:\n                    console.warn(\"ag-grid: Unrecognized data type for excel export [\" + style.id + \".dataType=\" + style.dataType + \"]\");\n            }\n        }\n        return type;\n    };\n    ExcelXlsxSerializingSession.prototype.addImage = function (rowIndex, column, value) {\n        if (!this.config.addImageToCell) {\n            return;\n        }\n        var addedImage = this.config.addImageToCell(rowIndex, column, value);\n        if (!addedImage) {\n            return;\n        }\n        ExcelXlsxFactory.buildImageMap(addedImage.image, rowIndex, column, this.columnsToExport, this.config.rowHeight);\n        return addedImage;\n    };\n    ExcelXlsxSerializingSession.prototype.createCell = function (styleId, type, value) {\n        var actualStyle = this.getStyleById(styleId);\n        var typeTransformed = this.getType(type, actualStyle, value) || type;\n        return {\n            styleId: actualStyle ? styleId : undefined,\n            data: {\n                type: typeTransformed,\n                value: this.getCellValue(typeTransformed, value)\n            }\n        };\n    };\n    ExcelXlsxSerializingSession.prototype.createMergedCell = function (styleId, type, value, numOfCells) {\n        var valueToUse = value == null ? '' : value;\n        return {\n            styleId: !!this.getStyleById(styleId) ? styleId : undefined,\n            data: {\n                type: type,\n                value: type === 's' ? ExcelXlsxFactory.getStringPosition(valueToUse).toString() : value\n            },\n            mergeAcross: numOfCells\n        };\n    };\n    ExcelXlsxSerializingSession.prototype.getCellValue = function (type, value) {\n        if (value == null) {\n            return ExcelXlsxFactory.getStringPosition('').toString();\n        }\n        switch (type) {\n            case 's':\n                return value === '' ? '' : ExcelXlsxFactory.getStringPosition(value).toString();\n            case 'f':\n                return value.slice(1);\n            case 'n':\n                return Number(value).toString();\n            default:\n                return value;\n        }\n    };\n    return ExcelXlsxSerializingSession;\n}(BaseExcelSerializingSession));\nexport { ExcelXlsxSerializingSession };\n"]},"metadata":{},"sourceType":"module"}