{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Chart } from \"./chart\";\nimport { CategoryAxis } from \"./axis/categoryAxis\";\nimport { GroupedCategoryAxis } from \"./axis/groupedCategoryAxis\";\nimport { ChartAxisPosition, ChartAxisDirection } from \"./chartAxis\";\nimport { BBox } from \"../scene/bbox\";\nimport { ClipRect } from \"../scene/clipRect\";\nimport { Navigator } from \"./navigator/navigator\";\n\nvar CartesianChart = function (_super) {\n  __extends(CartesianChart, _super);\n\n  function CartesianChart(document) {\n    if (document === void 0) {\n      document = window.document;\n    }\n\n    var _this = _super.call(this, document) || this;\n\n    _this._seriesRoot = new ClipRect();\n    _this.navigator = new Navigator(_this); // Prevent the scene from rendering chart components in an invalid state\n    // (before first layout is performed).\n\n    _this.scene.root.visible = false;\n    var root = _this.scene.root;\n    root.append(_this.seriesRoot);\n    root.append(_this.legend.group);\n    _this.navigator.enabled = false;\n    return _this;\n  }\n\n  Object.defineProperty(CartesianChart.prototype, \"seriesRoot\", {\n    get: function get() {\n      return this._seriesRoot;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CartesianChart.prototype.performLayout = function () {\n    if (this.dataPending) {\n      return;\n    }\n\n    this.scene.root.visible = true;\n\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        axes = _a.axes,\n        legend = _a.legend,\n        navigator = _a.navigator;\n\n    var shrinkRect = new BBox(0, 0, width, height);\n    this.positionCaptions();\n    this.positionLegend();\n\n    if (legend.enabled && legend.data.length) {\n      var legendAutoPadding = this.legendAutoPadding;\n      var legendPadding = this.legend.spacing;\n      shrinkRect.x += legendAutoPadding.left;\n      shrinkRect.y += legendAutoPadding.top;\n      shrinkRect.width -= legendAutoPadding.left + legendAutoPadding.right;\n      shrinkRect.height -= legendAutoPadding.top + legendAutoPadding.bottom;\n\n      switch (this.legend.position) {\n        case 'right':\n          shrinkRect.width -= legendPadding;\n          break;\n\n        case 'bottom':\n          shrinkRect.height -= legendPadding;\n          break;\n\n        case 'left':\n          shrinkRect.x += legendPadding;\n          shrinkRect.width -= legendPadding;\n          break;\n\n        case 'top':\n          shrinkRect.y += legendPadding;\n          shrinkRect.height -= legendPadding;\n          break;\n      }\n    }\n\n    var _b = this,\n        captionAutoPadding = _b.captionAutoPadding,\n        padding = _b.padding;\n\n    this.updateAxes();\n    shrinkRect.x += padding.left;\n    shrinkRect.width -= padding.left + padding.right;\n    shrinkRect.y += padding.top + captionAutoPadding;\n    shrinkRect.height -= padding.top + captionAutoPadding + padding.bottom;\n\n    if (navigator.enabled) {\n      shrinkRect.height -= navigator.height + navigator.margin;\n    }\n\n    var bottomAxesHeight = 0;\n    axes.forEach(function (axis) {\n      axis.group.visible = true;\n      var axisThickness = Math.floor(axis.thickness || axis.computeBBox().width);\n\n      switch (axis.position) {\n        case ChartAxisPosition.Top:\n          shrinkRect.y += axisThickness;\n          shrinkRect.height -= axisThickness;\n          axis.translation.y = Math.floor(shrinkRect.y + 1);\n          axis.label.mirrored = true;\n          break;\n\n        case ChartAxisPosition.Right:\n          shrinkRect.width -= axisThickness;\n          axis.translation.x = Math.floor(shrinkRect.x + shrinkRect.width);\n          axis.label.mirrored = true;\n          break;\n\n        case ChartAxisPosition.Bottom:\n          shrinkRect.height -= axisThickness;\n          bottomAxesHeight += axisThickness;\n          axis.translation.y = Math.floor(shrinkRect.y + shrinkRect.height + 1);\n          break;\n\n        case ChartAxisPosition.Left:\n          shrinkRect.x += axisThickness;\n          shrinkRect.width -= axisThickness;\n          axis.translation.x = Math.floor(shrinkRect.x);\n          break;\n      }\n    });\n    axes.forEach(function (axis) {\n      switch (axis.position) {\n        case ChartAxisPosition.Top:\n        case ChartAxisPosition.Bottom:\n          axis.translation.x = Math.floor(shrinkRect.x);\n          axis.range = [0, shrinkRect.width];\n          axis.gridLength = shrinkRect.height;\n          break;\n\n        case ChartAxisPosition.Left:\n        case ChartAxisPosition.Right:\n          axis.translation.y = Math.floor(shrinkRect.y);\n\n          if (axis instanceof CategoryAxis || axis instanceof GroupedCategoryAxis) {\n            axis.range = [0, shrinkRect.height];\n          } else {\n            axis.range = [shrinkRect.height, 0];\n          }\n\n          axis.gridLength = shrinkRect.width;\n          break;\n      }\n    });\n    this.generateNodeData();\n    this.seriesRect = shrinkRect;\n    this.series.forEach(function (series) {\n      series.group.translationX = Math.floor(shrinkRect.x);\n      series.group.translationY = Math.floor(shrinkRect.y);\n      series.update(); // this has to happen after the `updateAxes` call\n    });\n    var seriesRoot = this.seriesRoot;\n    seriesRoot.x = shrinkRect.x;\n    seriesRoot.y = shrinkRect.y;\n    seriesRoot.width = shrinkRect.width;\n    seriesRoot.height = shrinkRect.height;\n\n    if (navigator.enabled) {\n      navigator.x = shrinkRect.x;\n      navigator.y = shrinkRect.y + shrinkRect.height + bottomAxesHeight + navigator.margin;\n      navigator.width = shrinkRect.width;\n    }\n\n    this.axes.forEach(function (axis) {\n      return axis.update();\n    });\n  };\n\n  CartesianChart.prototype.initSeries = function (series) {\n    _super.prototype.initSeries.call(this, series);\n\n    series.addEventListener('dataProcessed', this.updateAxes, this);\n  };\n\n  CartesianChart.prototype.freeSeries = function (series) {\n    _super.prototype.freeSeries.call(this, series);\n\n    series.removeEventListener('dataProcessed', this.updateAxes, this);\n  };\n\n  CartesianChart.prototype.setupDomListeners = function (chartElement) {\n    _super.prototype.setupDomListeners.call(this, chartElement);\n\n    this._onTouchStart = this.onTouchStart.bind(this);\n    this._onTouchMove = this.onTouchMove.bind(this);\n    this._onTouchEnd = this.onTouchEnd.bind(this);\n    this._onTouchCancel = this.onTouchCancel.bind(this);\n    chartElement.addEventListener('touchstart', this._onTouchStart);\n    chartElement.addEventListener('touchmove', this._onTouchMove);\n    chartElement.addEventListener('touchend', this._onTouchEnd);\n    chartElement.addEventListener('touchcancel', this._onTouchCancel);\n  };\n\n  CartesianChart.prototype.cleanupDomListeners = function (chartElement) {\n    _super.prototype.cleanupDomListeners.call(this, chartElement);\n\n    chartElement.removeEventListener('touchstart', this._onTouchStart);\n    chartElement.removeEventListener('touchmove', this._onTouchMove);\n    chartElement.removeEventListener('touchend', this._onTouchEnd);\n    chartElement.removeEventListener('touchcancel', this._onTouchCancel);\n  };\n\n  CartesianChart.prototype.getTouchOffset = function (event) {\n    var rect = this.scene.canvas.element.getBoundingClientRect();\n    var touch = event.touches[0];\n    return touch ? {\n      offsetX: touch.clientX - rect.left,\n      offsetY: touch.clientY - rect.top\n    } : undefined;\n  };\n\n  CartesianChart.prototype.onTouchStart = function (event) {\n    var offset = this.getTouchOffset(event);\n\n    if (offset) {\n      this.navigator.onDragStart(offset);\n    }\n  };\n\n  CartesianChart.prototype.onTouchMove = function (event) {\n    var offset = this.getTouchOffset(event);\n\n    if (offset) {\n      this.navigator.onDrag(offset);\n    }\n  };\n\n  CartesianChart.prototype.onTouchEnd = function (event) {\n    this.navigator.onDragStop();\n  };\n\n  CartesianChart.prototype.onTouchCancel = function (event) {\n    this.navigator.onDragStop();\n  };\n\n  CartesianChart.prototype.onMouseDown = function (event) {\n    _super.prototype.onMouseDown.call(this, event);\n\n    this.navigator.onDragStart(event);\n  };\n\n  CartesianChart.prototype.onMouseMove = function (event) {\n    _super.prototype.onMouseMove.call(this, event);\n\n    this.navigator.onDrag(event);\n  };\n\n  CartesianChart.prototype.onMouseUp = function (event) {\n    _super.prototype.onMouseUp.call(this, event);\n\n    this.navigator.onDragStop();\n  };\n\n  CartesianChart.prototype.onMouseOut = function (event) {\n    _super.prototype.onMouseOut.call(this, event);\n\n    this.navigator.onDragStop();\n  };\n\n  CartesianChart.prototype.assignAxesToSeries = function (force) {\n    if (force === void 0) {\n      force = false;\n    }\n\n    _super.prototype.assignAxesToSeries.call(this, force);\n\n    this.series.forEach(function (series) {\n      if (!series.xAxis) {\n        console.warn(\"Could not find a matching xAxis for the \" + series.id + \" series.\");\n      }\n\n      if (!series.yAxis) {\n        console.warn(\"Could not find a matching yAxis for the \" + series.id + \" series.\");\n      }\n    });\n  };\n\n  CartesianChart.prototype.updateAxes = function () {\n    var navigator = this.navigator;\n    var clipSeries = false;\n    this.axes.forEach(function (axis) {\n      var _a;\n\n      var direction = axis.direction,\n          boundSeries = axis.boundSeries;\n\n      if (axis.linkedTo) {\n        axis.domain = axis.linkedTo.domain;\n      } else {\n        var domains_1 = [];\n        boundSeries.filter(function (s) {\n          return s.visible;\n        }).forEach(function (series) {\n          domains_1.push(series.getDomain(direction));\n        });\n        axis.domain = (_a = new Array()).concat.apply(_a, domains_1);\n      }\n\n      if (axis.direction === ChartAxisDirection.X) {\n        axis.visibleRange = [navigator.min, navigator.max];\n      }\n\n      if (!clipSeries && (axis.visibleRange[0] > 0 || axis.visibleRange[1] < 1)) {\n        clipSeries = true;\n      }\n\n      axis.update();\n    });\n    this.seriesRoot.enabled = clipSeries;\n  };\n\n  CartesianChart.className = 'CartesianChart';\n  CartesianChart.type = 'cartesian';\n  return CartesianChart;\n}(Chart);\n\nexport { CartesianChart };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/ag-charts-community/dist/es6/chart/cartesianChart.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Chart","CategoryAxis","GroupedCategoryAxis","ChartAxisPosition","ChartAxisDirection","BBox","ClipRect","Navigator","CartesianChart","_super","document","window","_this","call","_seriesRoot","navigator","scene","root","visible","append","seriesRoot","legend","group","enabled","defineProperty","get","enumerable","configurable","performLayout","dataPending","_a","width","height","axes","shrinkRect","positionCaptions","positionLegend","data","length","legendAutoPadding","legendPadding","spacing","x","left","y","top","right","bottom","position","_b","captionAutoPadding","padding","updateAxes","margin","bottomAxesHeight","forEach","axis","axisThickness","Math","floor","thickness","computeBBox","Top","translation","label","mirrored","Right","Bottom","Left","range","gridLength","generateNodeData","seriesRect","series","translationX","translationY","update","initSeries","addEventListener","freeSeries","removeEventListener","setupDomListeners","chartElement","_onTouchStart","onTouchStart","bind","_onTouchMove","onTouchMove","_onTouchEnd","onTouchEnd","_onTouchCancel","onTouchCancel","cleanupDomListeners","getTouchOffset","event","rect","canvas","element","getBoundingClientRect","touch","touches","offsetX","clientX","offsetY","clientY","undefined","offset","onDragStart","onDrag","onDragStop","onMouseDown","onMouseMove","onMouseUp","onMouseOut","assignAxesToSeries","force","xAxis","console","warn","id","yAxis","clipSeries","direction","boundSeries","linkedTo","domain","domains_1","filter","s","push","getDomain","concat","apply","X","visibleRange","min","max","className","type"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Chart } from \"./chart\";\nimport { CategoryAxis } from \"./axis/categoryAxis\";\nimport { GroupedCategoryAxis } from \"./axis/groupedCategoryAxis\";\nimport { ChartAxisPosition, ChartAxisDirection } from \"./chartAxis\";\nimport { BBox } from \"../scene/bbox\";\nimport { ClipRect } from \"../scene/clipRect\";\nimport { Navigator } from \"./navigator/navigator\";\nvar CartesianChart = /** @class */ (function (_super) {\n    __extends(CartesianChart, _super);\n    function CartesianChart(document) {\n        if (document === void 0) { document = window.document; }\n        var _this = _super.call(this, document) || this;\n        _this._seriesRoot = new ClipRect();\n        _this.navigator = new Navigator(_this);\n        // Prevent the scene from rendering chart components in an invalid state\n        // (before first layout is performed).\n        _this.scene.root.visible = false;\n        var root = _this.scene.root;\n        root.append(_this.seriesRoot);\n        root.append(_this.legend.group);\n        _this.navigator.enabled = false;\n        return _this;\n    }\n    Object.defineProperty(CartesianChart.prototype, \"seriesRoot\", {\n        get: function () {\n            return this._seriesRoot;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CartesianChart.prototype.performLayout = function () {\n        if (this.dataPending) {\n            return;\n        }\n        this.scene.root.visible = true;\n        var _a = this, width = _a.width, height = _a.height, axes = _a.axes, legend = _a.legend, navigator = _a.navigator;\n        var shrinkRect = new BBox(0, 0, width, height);\n        this.positionCaptions();\n        this.positionLegend();\n        if (legend.enabled && legend.data.length) {\n            var legendAutoPadding = this.legendAutoPadding;\n            var legendPadding = this.legend.spacing;\n            shrinkRect.x += legendAutoPadding.left;\n            shrinkRect.y += legendAutoPadding.top;\n            shrinkRect.width -= legendAutoPadding.left + legendAutoPadding.right;\n            shrinkRect.height -= legendAutoPadding.top + legendAutoPadding.bottom;\n            switch (this.legend.position) {\n                case 'right':\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'bottom':\n                    shrinkRect.height -= legendPadding;\n                    break;\n                case 'left':\n                    shrinkRect.x += legendPadding;\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'top':\n                    shrinkRect.y += legendPadding;\n                    shrinkRect.height -= legendPadding;\n                    break;\n            }\n        }\n        var _b = this, captionAutoPadding = _b.captionAutoPadding, padding = _b.padding;\n        this.updateAxes();\n        shrinkRect.x += padding.left;\n        shrinkRect.width -= padding.left + padding.right;\n        shrinkRect.y += padding.top + captionAutoPadding;\n        shrinkRect.height -= padding.top + captionAutoPadding + padding.bottom;\n        if (navigator.enabled) {\n            shrinkRect.height -= navigator.height + navigator.margin;\n        }\n        var bottomAxesHeight = 0;\n        axes.forEach(function (axis) {\n            axis.group.visible = true;\n            var axisThickness = Math.floor(axis.thickness || axis.computeBBox().width);\n            switch (axis.position) {\n                case ChartAxisPosition.Top:\n                    shrinkRect.y += axisThickness;\n                    shrinkRect.height -= axisThickness;\n                    axis.translation.y = Math.floor(shrinkRect.y + 1);\n                    axis.label.mirrored = true;\n                    break;\n                case ChartAxisPosition.Right:\n                    shrinkRect.width -= axisThickness;\n                    axis.translation.x = Math.floor(shrinkRect.x + shrinkRect.width);\n                    axis.label.mirrored = true;\n                    break;\n                case ChartAxisPosition.Bottom:\n                    shrinkRect.height -= axisThickness;\n                    bottomAxesHeight += axisThickness;\n                    axis.translation.y = Math.floor(shrinkRect.y + shrinkRect.height + 1);\n                    break;\n                case ChartAxisPosition.Left:\n                    shrinkRect.x += axisThickness;\n                    shrinkRect.width -= axisThickness;\n                    axis.translation.x = Math.floor(shrinkRect.x);\n                    break;\n            }\n        });\n        axes.forEach(function (axis) {\n            switch (axis.position) {\n                case ChartAxisPosition.Top:\n                case ChartAxisPosition.Bottom:\n                    axis.translation.x = Math.floor(shrinkRect.x);\n                    axis.range = [0, shrinkRect.width];\n                    axis.gridLength = shrinkRect.height;\n                    break;\n                case ChartAxisPosition.Left:\n                case ChartAxisPosition.Right:\n                    axis.translation.y = Math.floor(shrinkRect.y);\n                    if (axis instanceof CategoryAxis || axis instanceof GroupedCategoryAxis) {\n                        axis.range = [0, shrinkRect.height];\n                    }\n                    else {\n                        axis.range = [shrinkRect.height, 0];\n                    }\n                    axis.gridLength = shrinkRect.width;\n                    break;\n            }\n        });\n        this.generateNodeData();\n        this.seriesRect = shrinkRect;\n        this.series.forEach(function (series) {\n            series.group.translationX = Math.floor(shrinkRect.x);\n            series.group.translationY = Math.floor(shrinkRect.y);\n            series.update(); // this has to happen after the `updateAxes` call\n        });\n        var seriesRoot = this.seriesRoot;\n        seriesRoot.x = shrinkRect.x;\n        seriesRoot.y = shrinkRect.y;\n        seriesRoot.width = shrinkRect.width;\n        seriesRoot.height = shrinkRect.height;\n        if (navigator.enabled) {\n            navigator.x = shrinkRect.x;\n            navigator.y = shrinkRect.y + shrinkRect.height + bottomAxesHeight + navigator.margin;\n            navigator.width = shrinkRect.width;\n        }\n        this.axes.forEach(function (axis) { return axis.update(); });\n    };\n    CartesianChart.prototype.initSeries = function (series) {\n        _super.prototype.initSeries.call(this, series);\n        series.addEventListener('dataProcessed', this.updateAxes, this);\n    };\n    CartesianChart.prototype.freeSeries = function (series) {\n        _super.prototype.freeSeries.call(this, series);\n        series.removeEventListener('dataProcessed', this.updateAxes, this);\n    };\n    CartesianChart.prototype.setupDomListeners = function (chartElement) {\n        _super.prototype.setupDomListeners.call(this, chartElement);\n        this._onTouchStart = this.onTouchStart.bind(this);\n        this._onTouchMove = this.onTouchMove.bind(this);\n        this._onTouchEnd = this.onTouchEnd.bind(this);\n        this._onTouchCancel = this.onTouchCancel.bind(this);\n        chartElement.addEventListener('touchstart', this._onTouchStart);\n        chartElement.addEventListener('touchmove', this._onTouchMove);\n        chartElement.addEventListener('touchend', this._onTouchEnd);\n        chartElement.addEventListener('touchcancel', this._onTouchCancel);\n    };\n    CartesianChart.prototype.cleanupDomListeners = function (chartElement) {\n        _super.prototype.cleanupDomListeners.call(this, chartElement);\n        chartElement.removeEventListener('touchstart', this._onTouchStart);\n        chartElement.removeEventListener('touchmove', this._onTouchMove);\n        chartElement.removeEventListener('touchend', this._onTouchEnd);\n        chartElement.removeEventListener('touchcancel', this._onTouchCancel);\n    };\n    CartesianChart.prototype.getTouchOffset = function (event) {\n        var rect = this.scene.canvas.element.getBoundingClientRect();\n        var touch = event.touches[0];\n        return touch ? {\n            offsetX: touch.clientX - rect.left,\n            offsetY: touch.clientY - rect.top\n        } : undefined;\n    };\n    CartesianChart.prototype.onTouchStart = function (event) {\n        var offset = this.getTouchOffset(event);\n        if (offset) {\n            this.navigator.onDragStart(offset);\n        }\n    };\n    CartesianChart.prototype.onTouchMove = function (event) {\n        var offset = this.getTouchOffset(event);\n        if (offset) {\n            this.navigator.onDrag(offset);\n        }\n    };\n    CartesianChart.prototype.onTouchEnd = function (event) {\n        this.navigator.onDragStop();\n    };\n    CartesianChart.prototype.onTouchCancel = function (event) {\n        this.navigator.onDragStop();\n    };\n    CartesianChart.prototype.onMouseDown = function (event) {\n        _super.prototype.onMouseDown.call(this, event);\n        this.navigator.onDragStart(event);\n    };\n    CartesianChart.prototype.onMouseMove = function (event) {\n        _super.prototype.onMouseMove.call(this, event);\n        this.navigator.onDrag(event);\n    };\n    CartesianChart.prototype.onMouseUp = function (event) {\n        _super.prototype.onMouseUp.call(this, event);\n        this.navigator.onDragStop();\n    };\n    CartesianChart.prototype.onMouseOut = function (event) {\n        _super.prototype.onMouseOut.call(this, event);\n        this.navigator.onDragStop();\n    };\n    CartesianChart.prototype.assignAxesToSeries = function (force) {\n        if (force === void 0) { force = false; }\n        _super.prototype.assignAxesToSeries.call(this, force);\n        this.series.forEach(function (series) {\n            if (!series.xAxis) {\n                console.warn(\"Could not find a matching xAxis for the \" + series.id + \" series.\");\n            }\n            if (!series.yAxis) {\n                console.warn(\"Could not find a matching yAxis for the \" + series.id + \" series.\");\n            }\n        });\n    };\n    CartesianChart.prototype.updateAxes = function () {\n        var navigator = this.navigator;\n        var clipSeries = false;\n        this.axes.forEach(function (axis) {\n            var _a;\n            var direction = axis.direction, boundSeries = axis.boundSeries;\n            if (axis.linkedTo) {\n                axis.domain = axis.linkedTo.domain;\n            }\n            else {\n                var domains_1 = [];\n                boundSeries.filter(function (s) { return s.visible; }).forEach(function (series) {\n                    domains_1.push(series.getDomain(direction));\n                });\n                axis.domain = (_a = new Array()).concat.apply(_a, domains_1);\n            }\n            if (axis.direction === ChartAxisDirection.X) {\n                axis.visibleRange = [navigator.min, navigator.max];\n            }\n            if (!clipSeries && (axis.visibleRange[0] > 0 || axis.visibleRange[1] < 1)) {\n                clipSeries = true;\n            }\n            axis.update();\n        });\n        this.seriesRoot.enabled = clipSeries;\n    };\n    CartesianChart.className = 'CartesianChart';\n    CartesianChart.type = 'cartesian';\n    return CartesianChart;\n}(Chart));\nexport { CartesianChart };\n"]},"metadata":{},"sourceType":"module"}