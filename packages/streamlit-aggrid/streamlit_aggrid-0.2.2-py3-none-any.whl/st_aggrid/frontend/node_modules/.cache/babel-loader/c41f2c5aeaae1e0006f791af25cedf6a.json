{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Bean, BeanStub, Events, PostConstruct } from \"@ag-grid-community/core\";\n\nvar FilterListener = function (_super) {\n  __extends(FilterListener, _super);\n\n  function FilterListener() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FilterListener.prototype.postConstruct = function () {\n    // only want to be active if SSRM active, otherwise would be interfering with other row models\n    if (!this.gridOptionsWrapper.isRowModelServerSide()) {\n      return;\n    }\n\n    this.addManagedListener(this.eventService, Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n  };\n\n  FilterListener.prototype.onFilterChanged = function () {\n    var storeParams = this.serverSideRowModel.getParams();\n\n    if (!storeParams) {\n      return;\n    } // params is undefined if no datasource set\n\n\n    var newModel = this.filterManager.getFilterModel();\n    var oldModel = storeParams ? storeParams.filterModel : {};\n    var changedColumns = this.findChangedColumns(newModel, oldModel);\n    var valueColChanged = this.listenerUtils.isSortingWithValueColumn(changedColumns);\n    var secondaryColChanged = this.listenerUtils.isSortingWithSecondaryColumn(changedColumns);\n    var alwaysReset = this.gridOptionsWrapper.isServerSideFilteringAlwaysResets();\n    var params = {\n      valueColChanged: valueColChanged,\n      secondaryColChanged: secondaryColChanged,\n      alwaysReset: alwaysReset,\n      changedColumns: changedColumns\n    };\n    this.serverSideRowModel.refreshAfterFilter(newModel, params);\n  };\n\n  FilterListener.prototype.findChangedColumns = function (oldModel, newModel) {\n    var allColKeysMap = {};\n    Object.keys(oldModel).forEach(function (key) {\n      return allColKeysMap[key] = true;\n    });\n    Object.keys(newModel).forEach(function (key) {\n      return allColKeysMap[key] = true;\n    });\n    var res = [];\n    Object.keys(allColKeysMap).forEach(function (key) {\n      var oldJson = JSON.stringify(oldModel[key]);\n      var newJson = JSON.stringify(newModel[key]);\n      var filterChanged = oldJson != newJson;\n\n      if (filterChanged) {\n        res.push(key);\n      }\n    });\n    return res;\n  };\n\n  __decorate([Autowired('rowModel')], FilterListener.prototype, \"serverSideRowModel\", void 0);\n\n  __decorate([Autowired('filterManager')], FilterListener.prototype, \"filterManager\", void 0);\n\n  __decorate([Autowired('ssrmListenerUtils')], FilterListener.prototype, \"listenerUtils\", void 0);\n\n  __decorate([PostConstruct], FilterListener.prototype, \"postConstruct\", null);\n\n  FilterListener = __decorate([Bean('ssrmFilterListener')], FilterListener);\n  return FilterListener;\n}(BeanStub);\n\nexport { FilterListener };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/server-side-row-model/dist/es6/serverSideRowModel/listeners/filterListener.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Bean","BeanStub","Events","PostConstruct","FilterListener","_super","apply","postConstruct","gridOptionsWrapper","isRowModelServerSide","addManagedListener","eventService","EVENT_FILTER_CHANGED","onFilterChanged","bind","storeParams","serverSideRowModel","getParams","newModel","filterManager","getFilterModel","oldModel","filterModel","changedColumns","findChangedColumns","valueColChanged","listenerUtils","isSortingWithValueColumn","secondaryColChanged","isSortingWithSecondaryColumn","alwaysReset","isServerSideFilteringAlwaysResets","params","refreshAfterFilter","allColKeysMap","keys","forEach","res","oldJson","JSON","stringify","newJson","filterChanged","push"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Bean, BeanStub, Events, PostConstruct } from \"@ag-grid-community/core\";\nvar FilterListener = /** @class */ (function (_super) {\n    __extends(FilterListener, _super);\n    function FilterListener() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FilterListener.prototype.postConstruct = function () {\n        // only want to be active if SSRM active, otherwise would be interfering with other row models\n        if (!this.gridOptionsWrapper.isRowModelServerSide()) {\n            return;\n        }\n        this.addManagedListener(this.eventService, Events.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this));\n    };\n    FilterListener.prototype.onFilterChanged = function () {\n        var storeParams = this.serverSideRowModel.getParams();\n        if (!storeParams) {\n            return;\n        } // params is undefined if no datasource set\n        var newModel = this.filterManager.getFilterModel();\n        var oldModel = storeParams ? storeParams.filterModel : {};\n        var changedColumns = this.findChangedColumns(newModel, oldModel);\n        var valueColChanged = this.listenerUtils.isSortingWithValueColumn(changedColumns);\n        var secondaryColChanged = this.listenerUtils.isSortingWithSecondaryColumn(changedColumns);\n        var alwaysReset = this.gridOptionsWrapper.isServerSideFilteringAlwaysResets();\n        var params = {\n            valueColChanged: valueColChanged,\n            secondaryColChanged: secondaryColChanged,\n            alwaysReset: alwaysReset,\n            changedColumns: changedColumns\n        };\n        this.serverSideRowModel.refreshAfterFilter(newModel, params);\n    };\n    FilterListener.prototype.findChangedColumns = function (oldModel, newModel) {\n        var allColKeysMap = {};\n        Object.keys(oldModel).forEach(function (key) { return allColKeysMap[key] = true; });\n        Object.keys(newModel).forEach(function (key) { return allColKeysMap[key] = true; });\n        var res = [];\n        Object.keys(allColKeysMap).forEach(function (key) {\n            var oldJson = JSON.stringify(oldModel[key]);\n            var newJson = JSON.stringify(newModel[key]);\n            var filterChanged = oldJson != newJson;\n            if (filterChanged) {\n                res.push(key);\n            }\n        });\n        return res;\n    };\n    __decorate([\n        Autowired('rowModel')\n    ], FilterListener.prototype, \"serverSideRowModel\", void 0);\n    __decorate([\n        Autowired('filterManager')\n    ], FilterListener.prototype, \"filterManager\", void 0);\n    __decorate([\n        Autowired('ssrmListenerUtils')\n    ], FilterListener.prototype, \"listenerUtils\", void 0);\n    __decorate([\n        PostConstruct\n    ], FilterListener.prototype, \"postConstruct\", null);\n    FilterListener = __decorate([\n        Bean('ssrmFilterListener')\n    ], FilterListener);\n    return FilterListener;\n}(BeanStub));\nexport { FilterListener };\n"]},"metadata":{},"sourceType":"module"}