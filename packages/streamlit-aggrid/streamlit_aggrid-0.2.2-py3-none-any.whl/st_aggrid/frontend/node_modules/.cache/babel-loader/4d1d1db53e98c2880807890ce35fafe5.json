{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, Events, PostConstruct, _ } from '@ag-grid-community/core';\nimport { NameValueComp } from \"./nameValueComp\";\n\nvar TotalAndFilteredRowsComp = function (_super) {\n  __extends(TotalAndFilteredRowsComp, _super);\n\n  function TotalAndFilteredRowsComp() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TotalAndFilteredRowsComp.prototype.postConstruct = function () {\n    // this component is only really useful with client side row model\n    if (this.gridApi.getModel().getType() !== 'clientSide') {\n      console.warn(\"AG Grid: agTotalAndFilteredRowCountComponent should only be used with the client side row model.\");\n      return;\n    }\n\n    this.setLabel('totalAndFilteredRows', 'Rows');\n    this.addCssClass('ag-status-panel');\n    this.addCssClass('ag-status-panel-total-and-filtered-row-count');\n    this.setDisplayed(true);\n    this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onDataChanged.bind(this));\n  };\n\n  TotalAndFilteredRowsComp.prototype.onDataChanged = function () {\n    var rowCount = _.formatNumberCommas(this.getFilteredRowCountValue());\n\n    var totalRowCount = _.formatNumberCommas(this.getTotalRowCount());\n\n    if (rowCount === totalRowCount) {\n      this.setValue(rowCount);\n    } else {\n      var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n      this.setValue(rowCount + \" \" + localeTextFunc('of', 'of') + \" \" + totalRowCount);\n    }\n  };\n\n  TotalAndFilteredRowsComp.prototype.getFilteredRowCountValue = function () {\n    var filteredRowCount = 0;\n    this.gridApi.forEachNodeAfterFilter(function (node) {\n      if (!node.group) {\n        filteredRowCount++;\n      }\n    });\n    return filteredRowCount;\n  };\n\n  TotalAndFilteredRowsComp.prototype.getTotalRowCount = function () {\n    var totalRowCount = 0;\n    this.gridApi.forEachNode(function (node) {\n      if (!node.group) {\n        totalRowCount++;\n      }\n    });\n    return totalRowCount;\n  };\n\n  TotalAndFilteredRowsComp.prototype.init = function () {}; // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n\n\n  TotalAndFilteredRowsComp.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n\n  __decorate([Autowired('gridApi')], TotalAndFilteredRowsComp.prototype, \"gridApi\", void 0);\n\n  __decorate([PostConstruct], TotalAndFilteredRowsComp.prototype, \"postConstruct\", null);\n\n  return TotalAndFilteredRowsComp;\n}(NameValueComp);\n\nexport { TotalAndFilteredRowsComp };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/status-bar/dist/es6/statusBar/providedPanels/totalAndFilteredRowsComp.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","Events","PostConstruct","_","NameValueComp","TotalAndFilteredRowsComp","_super","apply","postConstruct","gridApi","getModel","getType","console","warn","setLabel","addCssClass","setDisplayed","addManagedListener","eventService","EVENT_MODEL_UPDATED","onDataChanged","bind","rowCount","formatNumberCommas","getFilteredRowCountValue","totalRowCount","getTotalRowCount","setValue","localeTextFunc","gridOptionsWrapper","getLocaleTextFunc","filteredRowCount","forEachNodeAfterFilter","node","group","forEachNode","init","destroy","call"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, Events, PostConstruct, _ } from '@ag-grid-community/core';\nimport { NameValueComp } from \"./nameValueComp\";\nvar TotalAndFilteredRowsComp = /** @class */ (function (_super) {\n    __extends(TotalAndFilteredRowsComp, _super);\n    function TotalAndFilteredRowsComp() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TotalAndFilteredRowsComp.prototype.postConstruct = function () {\n        // this component is only really useful with client side row model\n        if (this.gridApi.getModel().getType() !== 'clientSide') {\n            console.warn(\"AG Grid: agTotalAndFilteredRowCountComponent should only be used with the client side row model.\");\n            return;\n        }\n        this.setLabel('totalAndFilteredRows', 'Rows');\n        this.addCssClass('ag-status-panel');\n        this.addCssClass('ag-status-panel-total-and-filtered-row-count');\n        this.setDisplayed(true);\n        this.addManagedListener(this.eventService, Events.EVENT_MODEL_UPDATED, this.onDataChanged.bind(this));\n    };\n    TotalAndFilteredRowsComp.prototype.onDataChanged = function () {\n        var rowCount = _.formatNumberCommas(this.getFilteredRowCountValue());\n        var totalRowCount = _.formatNumberCommas(this.getTotalRowCount());\n        if (rowCount === totalRowCount) {\n            this.setValue(rowCount);\n        }\n        else {\n            var localeTextFunc = this.gridOptionsWrapper.getLocaleTextFunc();\n            this.setValue(rowCount + \" \" + localeTextFunc('of', 'of') + \" \" + totalRowCount);\n        }\n    };\n    TotalAndFilteredRowsComp.prototype.getFilteredRowCountValue = function () {\n        var filteredRowCount = 0;\n        this.gridApi.forEachNodeAfterFilter(function (node) {\n            if (!node.group) {\n                filteredRowCount++;\n            }\n        });\n        return filteredRowCount;\n    };\n    TotalAndFilteredRowsComp.prototype.getTotalRowCount = function () {\n        var totalRowCount = 0;\n        this.gridApi.forEachNode(function (node) {\n            if (!node.group) {\n                totalRowCount++;\n            }\n        });\n        return totalRowCount;\n    };\n    TotalAndFilteredRowsComp.prototype.init = function () { };\n    // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n    // so we need to override destroy() just to make the method public.\n    TotalAndFilteredRowsComp.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Autowired('gridApi')\n    ], TotalAndFilteredRowsComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        PostConstruct\n    ], TotalAndFilteredRowsComp.prototype, \"postConstruct\", null);\n    return TotalAndFilteredRowsComp;\n}(NameValueComp));\nexport { TotalAndFilteredRowsComp };\n"]},"metadata":{},"sourceType":"module"}