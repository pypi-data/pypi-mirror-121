{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, AgAngleSelect, AgSlider, Autowired, Component, PostConstruct, RefSelector } from \"@ag-grid-community/core\";\nimport { ChartController } from \"../../../chartController\";\nimport { AxisTicksPanel } from \"./axisTicksPanel\";\nimport { FontPanel } from \"../fontPanel\";\nimport { ChartAxisPosition, find } from \"ag-charts-community\";\n\nvar AxisPanel = function (_super) {\n  __extends(AxisPanel, _super);\n\n  function AxisPanel(chartController) {\n    var _this = _super.call(this) || this;\n\n    _this.activePanels = [];\n    _this.axisLabelUpdateFuncs = [];\n    _this.chartController = chartController;\n    return _this;\n  }\n\n  AxisPanel.prototype.init = function () {\n    var _this = this;\n\n    var groupParams = {\n      cssIdentifier: 'charts-format-top-level',\n      direction: 'vertical'\n    };\n    this.setTemplate(AxisPanel.TEMPLATE, {\n      axisGroup: groupParams\n    });\n    this.initAxis();\n    this.initAxisTicks();\n    this.initAxisLabels();\n\n    var updateAxisLabelRotations = function () {\n      return _this.axisLabelUpdateFuncs.forEach(function (func) {\n        return func();\n      });\n    };\n\n    this.addManagedListener(this.chartController, ChartController.EVENT_CHART_UPDATED, updateAxisLabelRotations);\n  };\n\n  AxisPanel.prototype.initAxis = function () {\n    var _this = this;\n\n    var chartTranslator = this.chartTranslator;\n    this.axisGroup.setTitle(chartTranslator.translate(\"axis\")).toggleGroupExpand(false).hideEnabledCheckbox(true);\n    this.axisColorInput.setLabel(chartTranslator.translate(\"color\")).setLabelWidth(\"flex\").setInputWidth(45).setValue(this.getChartProxy().getAxisProperty(\"line.color\")).onValueChange(function (newColor) {\n      return _this.getChartProxy().setAxisProperty(\"line.color\", newColor);\n    });\n    this.axisLineWidthSlider.setLabel(chartTranslator.translate(\"thickness\")).setMaxValue(10).setTextFieldWidth(45).setValue(this.getChartProxy().getAxisProperty(\"line.width\")).onValueChange(function (newValue) {\n      return _this.getChartProxy().setAxisProperty(\"line.width\", newValue);\n    });\n\n    if (_.includes(['line', 'scatter', 'bubble'], this.chartController.getChartType()) && !this.chartController.isGrouping()) {\n      var options_1 = [{\n        value: '',\n        text: chartTranslator.translate('automatic')\n      }];\n      ['category', 'time', 'number'].forEach(function (type) {\n        options_1.push({\n          value: type,\n          text: chartTranslator.translate(type)\n        });\n      });\n      this.xAxisTypeSelect.setLabel(chartTranslator.translate('xType')).setLabelWidth('flex').addOptions(options_1).setValue(this.getChartProxy().getChartOption('xAxis.type') || '').onValueChange(function (newValue) {\n        var chartProxy = _this.getChartProxy();\n\n        chartProxy.setChartOption('xAxis.type', typeof newValue === 'string' && newValue.length && newValue);\n\n        _this.chartController.updateForDataChange();\n      });\n    } else {\n      this.xAxisTypeSelect.setDisplayed(false);\n    }\n  };\n\n  AxisPanel.prototype.initAxisTicks = function () {\n    var axisTicksComp = this.createBean(new AxisTicksPanel(this.chartController));\n    this.axisGroup.addItem(axisTicksComp);\n    this.activePanels.push(axisTicksComp);\n  };\n\n  AxisPanel.prototype.initAxisLabels = function () {\n    var _this = this;\n\n    var chartProxy = this.getChartProxy();\n    var initialFont = {\n      family: chartProxy.getAxisProperty(\"label.fontFamily\"),\n      style: chartProxy.getAxisProperty(\"label.fontStyle\"),\n      weight: chartProxy.getAxisProperty(\"label.fontWeight\"),\n      size: chartProxy.getAxisProperty(\"label.fontSize\"),\n      color: chartProxy.getAxisProperty(\"label.color\")\n    };\n\n    var setFont = function (font) {\n      var proxy = _this.getChartProxy();\n\n      if (font.family) {\n        proxy.setAxisProperty(\"label.fontFamily\", font.family);\n      }\n\n      if (font.weight) {\n        proxy.setAxisProperty(\"label.fontWeight\", font.weight);\n      }\n\n      if (font.style) {\n        proxy.setAxisProperty(\"label.fontStyle\", font.style);\n      }\n\n      if (font.size) {\n        proxy.setAxisProperty(\"label.fontSize\", font.size);\n      }\n\n      if (font.color) {\n        proxy.setAxisProperty(\"label.color\", font.color);\n      }\n\n      proxy.getChart().performLayout();\n    };\n\n    var params = {\n      enabled: true,\n      suppressEnabledCheckbox: true,\n      initialFont: initialFont,\n      setFont: setFont\n    };\n    var labelPanelComp = this.createBean(new FontPanel(params));\n    this.axisGroup.addItem(labelPanelComp);\n    this.activePanels.push(labelPanelComp);\n    this.addAdditionalLabelComps(labelPanelComp);\n  };\n\n  AxisPanel.prototype.addAdditionalLabelComps = function (labelPanelComp) {\n    var _this = this;\n\n    var createAngleComp = function (label, expression, updateFunc) {\n      var value = _this.getChartProxy().getChartOption(expression);\n\n      var angleSelect = new AgAngleSelect().setLabel(label).setLabelWidth(\"flex\").setValue(value || 0).onValueChange(updateFunc); // the axis label rotation needs to be updated when the default category changes in the data panel\n\n      _this.axisLabelUpdateFuncs.push(function () {\n        var value = _this.getChartProxy().getChartOption(expression);\n\n        angleSelect.setValue(value);\n      });\n\n      var rotationInput = _this.createBean(angleSelect);\n\n      labelPanelComp.addCompToPanel(rotationInput);\n    };\n\n    var degreesSymbol = String.fromCharCode(176);\n\n    var createLabelUpdateFunc = function (axisPosition) {\n      return function (newValue) {\n        var chartProxy = _this.getChartProxy();\n\n        var chart = chartProxy.getChart();\n        var axis = find(chart.axes, function (currentAxis) {\n          return currentAxis.position === axisPosition;\n        });\n\n        if (axis) {\n          axis.label.rotation = newValue;\n\n          if (axis.position === ChartAxisPosition.Bottom) {\n            _.set(chartProxy.getChartOptions().xAxis, \"label.rotation\", newValue);\n          } else if (axis.position === ChartAxisPosition.Left) {\n            _.set(chartProxy.getChartOptions().yAxis, \"label.rotation\", newValue);\n          }\n\n          chart.performLayout();\n        }\n      };\n    };\n\n    var xRotationLabel = this.chartTranslator.translate(\"xRotation\") + \" \" + degreesSymbol;\n    var yRotationLabel = this.chartTranslator.translate(\"yRotation\") + \" \" + degreesSymbol;\n    createAngleComp(xRotationLabel, \"xAxis.label.rotation\", createLabelUpdateFunc(ChartAxisPosition.Bottom));\n    createAngleComp(yRotationLabel, \"yAxis.label.rotation\", createLabelUpdateFunc(ChartAxisPosition.Left));\n    var labelPaddingSlider = this.createBean(new AgSlider());\n    labelPaddingSlider.setLabel(this.chartTranslator.translate(\"padding\")).setValue(this.getChartProxy().getAxisProperty(\"label.padding\")).setMaxValue(30).setTextFieldWidth(45).onValueChange(function (newValue) {\n      return _this.getChartProxy().setAxisProperty(\"label.padding\", newValue);\n    });\n    labelPanelComp.addCompToPanel(labelPaddingSlider);\n  };\n\n  AxisPanel.prototype.destroyActivePanels = function () {\n    var _this = this;\n\n    this.activePanels.forEach(function (panel) {\n      _.removeFromParent(panel.getGui());\n\n      _this.destroyBean(panel);\n    });\n  };\n\n  AxisPanel.prototype.getChartProxy = function () {\n    return this.chartController.getChartProxy();\n  };\n\n  AxisPanel.prototype.destroy = function () {\n    this.destroyActivePanels();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  AxisPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"axisGroup\\\">\\n                <ag-color-picker ref=\\\"axisColorInput\\\"></ag-color-picker>\\n                <ag-slider ref=\\\"axisLineWidthSlider\\\"></ag-slider>\\n                <ag-select ref=\\\"xAxisTypeSelect\\\"></ag-select>\\n            </ag-group-component>\\n        </div>\";\n\n  __decorate([RefSelector('axisGroup')], AxisPanel.prototype, \"axisGroup\", void 0);\n\n  __decorate([RefSelector('axisColorInput')], AxisPanel.prototype, \"axisColorInput\", void 0);\n\n  __decorate([RefSelector('axisLineWidthSlider')], AxisPanel.prototype, \"axisLineWidthSlider\", void 0);\n\n  __decorate([RefSelector('xAxisTypeSelect')], AxisPanel.prototype, \"xAxisTypeSelect\", void 0);\n\n  __decorate([Autowired('chartTranslator')], AxisPanel.prototype, \"chartTranslator\", void 0);\n\n  __decorate([PostConstruct], AxisPanel.prototype, \"init\", null);\n\n  return AxisPanel;\n}(Component);\n\nexport { AxisPanel };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/charts/dist/es6/charts/chartComp/menu/format/axis/axisPanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","AgAngleSelect","AgSlider","Autowired","Component","PostConstruct","RefSelector","ChartController","AxisTicksPanel","FontPanel","ChartAxisPosition","find","AxisPanel","_super","chartController","_this","call","activePanels","axisLabelUpdateFuncs","init","groupParams","cssIdentifier","direction","setTemplate","TEMPLATE","axisGroup","initAxis","initAxisTicks","initAxisLabels","updateAxisLabelRotations","forEach","func","addManagedListener","EVENT_CHART_UPDATED","chartTranslator","setTitle","translate","toggleGroupExpand","hideEnabledCheckbox","axisColorInput","setLabel","setLabelWidth","setInputWidth","setValue","getChartProxy","getAxisProperty","onValueChange","newColor","setAxisProperty","axisLineWidthSlider","setMaxValue","setTextFieldWidth","newValue","includes","getChartType","isGrouping","options_1","value","text","type","push","xAxisTypeSelect","addOptions","getChartOption","chartProxy","setChartOption","updateForDataChange","setDisplayed","axisTicksComp","createBean","addItem","initialFont","family","style","weight","size","color","setFont","font","proxy","getChart","performLayout","params","enabled","suppressEnabledCheckbox","labelPanelComp","addAdditionalLabelComps","createAngleComp","label","expression","updateFunc","angleSelect","rotationInput","addCompToPanel","degreesSymbol","String","fromCharCode","createLabelUpdateFunc","axisPosition","chart","axis","axes","currentAxis","position","rotation","Bottom","set","getChartOptions","xAxis","Left","yAxis","xRotationLabel","yRotationLabel","labelPaddingSlider","destroyActivePanels","panel","removeFromParent","getGui","destroyBean","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, AgAngleSelect, AgSlider, Autowired, Component, PostConstruct, RefSelector, } from \"@ag-grid-community/core\";\nimport { ChartController } from \"../../../chartController\";\nimport { AxisTicksPanel } from \"./axisTicksPanel\";\nimport { FontPanel } from \"../fontPanel\";\nimport { ChartAxisPosition, find } from \"ag-charts-community\";\nvar AxisPanel = /** @class */ (function (_super) {\n    __extends(AxisPanel, _super);\n    function AxisPanel(chartController) {\n        var _this = _super.call(this) || this;\n        _this.activePanels = [];\n        _this.axisLabelUpdateFuncs = [];\n        _this.chartController = chartController;\n        return _this;\n    }\n    AxisPanel.prototype.init = function () {\n        var _this = this;\n        var groupParams = {\n            cssIdentifier: 'charts-format-top-level',\n            direction: 'vertical'\n        };\n        this.setTemplate(AxisPanel.TEMPLATE, { axisGroup: groupParams });\n        this.initAxis();\n        this.initAxisTicks();\n        this.initAxisLabels();\n        var updateAxisLabelRotations = function () { return _this.axisLabelUpdateFuncs.forEach(function (func) { return func(); }); };\n        this.addManagedListener(this.chartController, ChartController.EVENT_CHART_UPDATED, updateAxisLabelRotations);\n    };\n    AxisPanel.prototype.initAxis = function () {\n        var _this = this;\n        var chartTranslator = this.chartTranslator;\n        this.axisGroup\n            .setTitle(chartTranslator.translate(\"axis\"))\n            .toggleGroupExpand(false)\n            .hideEnabledCheckbox(true);\n        this.axisColorInput\n            .setLabel(chartTranslator.translate(\"color\"))\n            .setLabelWidth(\"flex\")\n            .setInputWidth(45)\n            .setValue(this.getChartProxy().getAxisProperty(\"line.color\"))\n            .onValueChange(function (newColor) { return _this.getChartProxy().setAxisProperty(\"line.color\", newColor); });\n        this.axisLineWidthSlider\n            .setLabel(chartTranslator.translate(\"thickness\"))\n            .setMaxValue(10)\n            .setTextFieldWidth(45)\n            .setValue(this.getChartProxy().getAxisProperty(\"line.width\"))\n            .onValueChange(function (newValue) { return _this.getChartProxy().setAxisProperty(\"line.width\", newValue); });\n        if (_.includes(['line', 'scatter', 'bubble'], this.chartController.getChartType()) && !this.chartController.isGrouping()) {\n            var options_1 = [\n                { value: '', text: chartTranslator.translate('automatic') }\n            ];\n            ['category', 'time', 'number'].forEach(function (type) {\n                options_1.push({ value: type, text: chartTranslator.translate(type) });\n            });\n            this.xAxisTypeSelect\n                .setLabel(chartTranslator.translate('xType'))\n                .setLabelWidth('flex')\n                .addOptions(options_1)\n                .setValue(this.getChartProxy().getChartOption('xAxis.type') || '')\n                .onValueChange(function (newValue) {\n                var chartProxy = _this.getChartProxy();\n                chartProxy.setChartOption('xAxis.type', typeof newValue === 'string' && newValue.length && newValue);\n                _this.chartController.updateForDataChange();\n            });\n        }\n        else {\n            this.xAxisTypeSelect.setDisplayed(false);\n        }\n    };\n    AxisPanel.prototype.initAxisTicks = function () {\n        var axisTicksComp = this.createBean(new AxisTicksPanel(this.chartController));\n        this.axisGroup.addItem(axisTicksComp);\n        this.activePanels.push(axisTicksComp);\n    };\n    AxisPanel.prototype.initAxisLabels = function () {\n        var _this = this;\n        var chartProxy = this.getChartProxy();\n        var initialFont = {\n            family: chartProxy.getAxisProperty(\"label.fontFamily\"),\n            style: chartProxy.getAxisProperty(\"label.fontStyle\"),\n            weight: chartProxy.getAxisProperty(\"label.fontWeight\"),\n            size: chartProxy.getAxisProperty(\"label.fontSize\"),\n            color: chartProxy.getAxisProperty(\"label.color\")\n        };\n        var setFont = function (font) {\n            var proxy = _this.getChartProxy();\n            if (font.family) {\n                proxy.setAxisProperty(\"label.fontFamily\", font.family);\n            }\n            if (font.weight) {\n                proxy.setAxisProperty(\"label.fontWeight\", font.weight);\n            }\n            if (font.style) {\n                proxy.setAxisProperty(\"label.fontStyle\", font.style);\n            }\n            if (font.size) {\n                proxy.setAxisProperty(\"label.fontSize\", font.size);\n            }\n            if (font.color) {\n                proxy.setAxisProperty(\"label.color\", font.color);\n            }\n            proxy.getChart().performLayout();\n        };\n        var params = {\n            enabled: true,\n            suppressEnabledCheckbox: true,\n            initialFont: initialFont,\n            setFont: setFont\n        };\n        var labelPanelComp = this.createBean(new FontPanel(params));\n        this.axisGroup.addItem(labelPanelComp);\n        this.activePanels.push(labelPanelComp);\n        this.addAdditionalLabelComps(labelPanelComp);\n    };\n    AxisPanel.prototype.addAdditionalLabelComps = function (labelPanelComp) {\n        var _this = this;\n        var createAngleComp = function (label, expression, updateFunc) {\n            var value = _this.getChartProxy().getChartOption(expression);\n            var angleSelect = new AgAngleSelect()\n                .setLabel(label)\n                .setLabelWidth(\"flex\")\n                .setValue(value || 0)\n                .onValueChange(updateFunc);\n            // the axis label rotation needs to be updated when the default category changes in the data panel\n            _this.axisLabelUpdateFuncs.push(function () {\n                var value = _this.getChartProxy().getChartOption(expression);\n                angleSelect.setValue(value);\n            });\n            var rotationInput = _this.createBean(angleSelect);\n            labelPanelComp.addCompToPanel(rotationInput);\n        };\n        var degreesSymbol = String.fromCharCode(176);\n        var createLabelUpdateFunc = function (axisPosition) { return function (newValue) {\n            var chartProxy = _this.getChartProxy();\n            var chart = chartProxy.getChart();\n            var axis = find(chart.axes, function (currentAxis) { return currentAxis.position === axisPosition; });\n            if (axis) {\n                axis.label.rotation = newValue;\n                if (axis.position === ChartAxisPosition.Bottom) {\n                    _.set(chartProxy.getChartOptions().xAxis, \"label.rotation\", newValue);\n                }\n                else if (axis.position === ChartAxisPosition.Left) {\n                    _.set(chartProxy.getChartOptions().yAxis, \"label.rotation\", newValue);\n                }\n                chart.performLayout();\n            }\n        }; };\n        var xRotationLabel = this.chartTranslator.translate(\"xRotation\") + \" \" + degreesSymbol;\n        var yRotationLabel = this.chartTranslator.translate(\"yRotation\") + \" \" + degreesSymbol;\n        createAngleComp(xRotationLabel, \"xAxis.label.rotation\", createLabelUpdateFunc(ChartAxisPosition.Bottom));\n        createAngleComp(yRotationLabel, \"yAxis.label.rotation\", createLabelUpdateFunc(ChartAxisPosition.Left));\n        var labelPaddingSlider = this.createBean(new AgSlider());\n        labelPaddingSlider.setLabel(this.chartTranslator.translate(\"padding\"))\n            .setValue(this.getChartProxy().getAxisProperty(\"label.padding\"))\n            .setMaxValue(30)\n            .setTextFieldWidth(45)\n            .onValueChange(function (newValue) { return _this.getChartProxy().setAxisProperty(\"label.padding\", newValue); });\n        labelPanelComp.addCompToPanel(labelPaddingSlider);\n    };\n    AxisPanel.prototype.destroyActivePanels = function () {\n        var _this = this;\n        this.activePanels.forEach(function (panel) {\n            _.removeFromParent(panel.getGui());\n            _this.destroyBean(panel);\n        });\n    };\n    AxisPanel.prototype.getChartProxy = function () {\n        return this.chartController.getChartProxy();\n    };\n    AxisPanel.prototype.destroy = function () {\n        this.destroyActivePanels();\n        _super.prototype.destroy.call(this);\n    };\n    AxisPanel.TEMPLATE = \"<div>\\n            <ag-group-component ref=\\\"axisGroup\\\">\\n                <ag-color-picker ref=\\\"axisColorInput\\\"></ag-color-picker>\\n                <ag-slider ref=\\\"axisLineWidthSlider\\\"></ag-slider>\\n                <ag-select ref=\\\"xAxisTypeSelect\\\"></ag-select>\\n            </ag-group-component>\\n        </div>\";\n    __decorate([\n        RefSelector('axisGroup')\n    ], AxisPanel.prototype, \"axisGroup\", void 0);\n    __decorate([\n        RefSelector('axisColorInput')\n    ], AxisPanel.prototype, \"axisColorInput\", void 0);\n    __decorate([\n        RefSelector('axisLineWidthSlider')\n    ], AxisPanel.prototype, \"axisLineWidthSlider\", void 0);\n    __decorate([\n        RefSelector('xAxisTypeSelect')\n    ], AxisPanel.prototype, \"xAxisTypeSelect\", void 0);\n    __decorate([\n        Autowired('chartTranslator')\n    ], AxisPanel.prototype, \"chartTranslator\", void 0);\n    __decorate([\n        PostConstruct\n    ], AxisPanel.prototype, \"init\", null);\n    return AxisPanel;\n}(Component));\nexport { AxisPanel };\n"]},"metadata":{},"sourceType":"module"}