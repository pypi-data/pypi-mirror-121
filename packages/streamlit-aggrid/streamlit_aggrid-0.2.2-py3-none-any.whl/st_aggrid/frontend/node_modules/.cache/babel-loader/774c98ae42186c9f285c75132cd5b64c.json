{"ast":null,"code":"import { _ } from '@ag-grid-community/core';\n\nvar ClientSideValuesExtractor = function () {\n  function ClientSideValuesExtractor(rowModel, colDef, valueGetter) {\n    this.rowModel = rowModel;\n    this.colDef = colDef;\n    this.valueGetter = valueGetter;\n  }\n\n  ClientSideValuesExtractor.prototype.extractUniqueValues = function (predicate) {\n    var _this = this;\n\n    var values = new Set();\n    var keyCreator = this.colDef.keyCreator;\n    this.rowModel.forEachLeafNode(function (node) {\n      // only pull values from rows that have data. this means we skip filler group nodes.\n      if (!node.data || !predicate(node)) {\n        return;\n      }\n\n      var value = _this.valueGetter(node);\n\n      if (keyCreator) {\n        value = keyCreator({\n          value: value\n        });\n      }\n\n      value = _.makeNull(value);\n\n      if (value != null && Array.isArray(value)) {\n        _.forEach(value, function (x) {\n          var formatted = _.toStringOrNull(_.makeNull(x));\n\n          values.add(formatted);\n        });\n      } else {\n        values.add(_.toStringOrNull(value));\n      }\n    });\n    return _.values(values);\n  };\n\n  return ClientSideValuesExtractor;\n}();\n\nexport { ClientSideValuesExtractor };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/set-filter/dist/es6/clientSideValueExtractor.js"],"names":["_","ClientSideValuesExtractor","rowModel","colDef","valueGetter","prototype","extractUniqueValues","predicate","_this","values","Set","keyCreator","forEachLeafNode","node","data","value","makeNull","Array","isArray","forEach","x","formatted","toStringOrNull","add"],"mappings":"AAAA,SAASA,CAAT,QAAkB,yBAAlB;;AACA,IAAIC,yBAAyB,GAAkB,YAAY;AACvD,WAASA,yBAAT,CAAmCC,QAAnC,EAA6CC,MAA7C,EAAqDC,WAArD,EAAkE;AAC9D,SAAKF,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AACDH,EAAAA,yBAAyB,CAACI,SAA1B,CAAoCC,mBAApC,GAA0D,UAAUC,SAAV,EAAqB;AAC3E,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAIC,MAAM,GAAG,IAAIC,GAAJ,EAAb;AACA,QAAIC,UAAU,GAAG,KAAKR,MAAL,CAAYQ,UAA7B;AACA,SAAKT,QAAL,CAAcU,eAAd,CAA8B,UAAUC,IAAV,EAAgB;AAC1C;AACA,UAAI,CAACA,IAAI,CAACC,IAAN,IAAc,CAACP,SAAS,CAACM,IAAD,CAA5B,EAAoC;AAChC;AACH;;AACD,UAAIE,KAAK,GAAGP,KAAK,CAACJ,WAAN,CAAkBS,IAAlB,CAAZ;;AACA,UAAIF,UAAJ,EAAgB;AACZI,QAAAA,KAAK,GAAGJ,UAAU,CAAC;AAAEI,UAAAA,KAAK,EAAEA;AAAT,SAAD,CAAlB;AACH;;AACDA,MAAAA,KAAK,GAAGf,CAAC,CAACgB,QAAF,CAAWD,KAAX,CAAR;;AACA,UAAIA,KAAK,IAAI,IAAT,IAAiBE,KAAK,CAACC,OAAN,CAAcH,KAAd,CAArB,EAA2C;AACvCf,QAAAA,CAAC,CAACmB,OAAF,CAAUJ,KAAV,EAAiB,UAAUK,CAAV,EAAa;AAC1B,cAAIC,SAAS,GAAGrB,CAAC,CAACsB,cAAF,CAAiBtB,CAAC,CAACgB,QAAF,CAAWI,CAAX,CAAjB,CAAhB;;AACAX,UAAAA,MAAM,CAACc,GAAP,CAAWF,SAAX;AACH,SAHD;AAIH,OALD,MAMK;AACDZ,QAAAA,MAAM,CAACc,GAAP,CAAWvB,CAAC,CAACsB,cAAF,CAAiBP,KAAjB,CAAX;AACH;AACJ,KAnBD;AAoBA,WAAOf,CAAC,CAACS,MAAF,CAASA,MAAT,CAAP;AACH,GAzBD;;AA0BA,SAAOR,yBAAP;AACH,CAjC8C,EAA/C;;AAkCA,SAASA,yBAAT","sourcesContent":["import { _ } from '@ag-grid-community/core';\nvar ClientSideValuesExtractor = /** @class */ (function () {\n    function ClientSideValuesExtractor(rowModel, colDef, valueGetter) {\n        this.rowModel = rowModel;\n        this.colDef = colDef;\n        this.valueGetter = valueGetter;\n    }\n    ClientSideValuesExtractor.prototype.extractUniqueValues = function (predicate) {\n        var _this = this;\n        var values = new Set();\n        var keyCreator = this.colDef.keyCreator;\n        this.rowModel.forEachLeafNode(function (node) {\n            // only pull values from rows that have data. this means we skip filler group nodes.\n            if (!node.data || !predicate(node)) {\n                return;\n            }\n            var value = _this.valueGetter(node);\n            if (keyCreator) {\n                value = keyCreator({ value: value });\n            }\n            value = _.makeNull(value);\n            if (value != null && Array.isArray(value)) {\n                _.forEach(value, function (x) {\n                    var formatted = _.toStringOrNull(_.makeNull(x));\n                    values.add(formatted);\n                });\n            }\n            else {\n                values.add(_.toStringOrNull(value));\n            }\n        });\n        return _.values(values);\n    };\n    return ClientSideValuesExtractor;\n}());\nexport { ClientSideValuesExtractor };\n"]},"metadata":{},"sourceType":"module"}