{"ast":null,"code":"function circleRectOverlap(cx, cy, r, x, y, w, h) {\n  // Find closest horizontal and vertical edges.\n  var edgeX = cx < x ? x : cx > x + w ? x + w : cx;\n  var edgeY = cy < y ? y : cy > y + h ? y + h : cy; // Find distance to closest edges.\n\n  var dx = cx - edgeX;\n  var dy = cy - edgeY;\n  var d = Math.sqrt(dx * dx + dy * dy);\n  return d <= r;\n}\n\nfunction rectRectOverlap(x1, y1, w1, h1, x2, y2, w2, h2) {\n  var xOverlap = x1 + w1 > x2 && x1 < x2 + w2;\n  var yOverlap = y1 + h1 > y2 && y1 < y2 + h2;\n  return xOverlap && yOverlap;\n}\n\nfunction rectContainsRect(r1x, r1y, r1w, r1h, r2x, r2y, r2w, r2h) {\n  return r2x + r2w < r1x + r1w && r2x > r1x && r2y > r1y && r2y + r2h < r1y + r1h;\n}\n/**\n * @param data Points and labels for one or more series. The order of series determines label placement precedence.\n * @param bounds Bounds to fit the labels into. If a label can't be fully contained, it doesn't fit.\n * @returns Placed labels for the given series (in the given order).\n */\n\n\nexport function placeLabels(data, bounds, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var result = [];\n  data = data.map(function (d) {\n    return d.slice().sort(function (a, b) {\n      return b.size - a.size;\n    });\n  });\n\n  for (var j = 0; j < data.length; j++) {\n    var labels = result[j] = [];\n    var datum = data[j];\n\n    if (!(datum && datum[0].label)) {\n      continue;\n    }\n\n    var _loop_1 = function (i, ln) {\n      var d = datum[i];\n      var l = d.label;\n      var r = d.size * 0.5;\n      var x = d.point.x - l.width * 0.5;\n      var y = d.point.y - r - l.height - padding;\n      var width = l.width,\n          height = l.height;\n      var withinBounds = !bounds || rectContainsRect(bounds.x, bounds.y, bounds.width, bounds.height, x, y, width, height);\n\n      if (!withinBounds) {\n        return \"continue\";\n      }\n\n      var overlapPoints = data.some(function (datum) {\n        return datum.some(function (d) {\n          return circleRectOverlap(d.point.x, d.point.y, d.size * 0.5, x, y, width, height);\n        });\n      });\n\n      if (overlapPoints) {\n        return \"continue\";\n      }\n\n      var overlapLabels = result.some(function (labels) {\n        return labels.some(function (l) {\n          return rectRectOverlap(l.x, l.y, l.width, l.height, x, y, width, height);\n        });\n      });\n\n      if (overlapLabels) {\n        return \"continue\";\n      }\n\n      labels.push({\n        index: i,\n        text: l.text,\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    };\n\n    for (var i = 0, ln = datum.length; i < ln; i++) {\n      _loop_1(i, ln);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/ag-charts-community/dist/es6/util/labelPlacement.js"],"names":["circleRectOverlap","cx","cy","r","x","y","w","h","edgeX","edgeY","dx","dy","d","Math","sqrt","rectRectOverlap","x1","y1","w1","h1","x2","y2","w2","h2","xOverlap","yOverlap","rectContainsRect","r1x","r1y","r1w","r1h","r2x","r2y","r2w","r2h","placeLabels","data","bounds","padding","result","map","slice","sort","a","b","size","j","length","labels","datum","label","_loop_1","i","ln","l","point","width","height","withinBounds","overlapPoints","some","overlapLabels","push","index","text"],"mappings":"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","sourcesContent":["function circleRectOverlap(cx, cy, r, x, y, w, h) {\n    // Find closest horizontal and vertical edges.\n    var edgeX = cx < x ? x : cx > x + w ? x + w : cx;\n    var edgeY = cy < y ? y : cy > y + h ? y + h : cy;\n    // Find distance to closest edges.\n    var dx = cx - edgeX;\n    var dy = cy - edgeY;\n    var d = Math.sqrt((dx * dx) + (dy * dy));\n    return d <= r;\n}\nfunction rectRectOverlap(x1, y1, w1, h1, x2, y2, w2, h2) {\n    var xOverlap = (x1 + w1) > x2 && x1 < (x2 + w2);\n    var yOverlap = (y1 + h1) > y2 && y1 < (y2 + h2);\n    return xOverlap && yOverlap;\n}\nfunction rectContainsRect(r1x, r1y, r1w, r1h, r2x, r2y, r2w, r2h) {\n    return (r2x + r2w) < (r1x + r1w) && (r2x) > (r1x) && (r2y) > (r1y) && (r2y + r2h) < (r1y + r1h);\n}\n/**\n * @param data Points and labels for one or more series. The order of series determines label placement precedence.\n * @param bounds Bounds to fit the labels into. If a label can't be fully contained, it doesn't fit.\n * @returns Placed labels for the given series (in the given order).\n */\nexport function placeLabels(data, bounds, padding) {\n    if (padding === void 0) { padding = 5; }\n    var result = [];\n    data = data.map(function (d) { return d.slice().sort(function (a, b) { return b.size - a.size; }); });\n    for (var j = 0; j < data.length; j++) {\n        var labels = result[j] = [];\n        var datum = data[j];\n        if (!(datum && datum[0].label)) {\n            continue;\n        }\n        var _loop_1 = function (i, ln) {\n            var d = datum[i];\n            var l = d.label;\n            var r = d.size * 0.5;\n            var x = d.point.x - l.width * 0.5;\n            var y = d.point.y - r - l.height - padding;\n            var width = l.width, height = l.height;\n            var withinBounds = !bounds || rectContainsRect(bounds.x, bounds.y, bounds.width, bounds.height, x, y, width, height);\n            if (!withinBounds) {\n                return \"continue\";\n            }\n            var overlapPoints = data.some(function (datum) { return datum.some(function (d) { return circleRectOverlap(d.point.x, d.point.y, d.size * 0.5, x, y, width, height); }); });\n            if (overlapPoints) {\n                return \"continue\";\n            }\n            var overlapLabels = result.some(function (labels) { return labels.some(function (l) { return rectRectOverlap(l.x, l.y, l.width, l.height, x, y, width, height); }); });\n            if (overlapLabels) {\n                return \"continue\";\n            }\n            labels.push({\n                index: i,\n                text: l.text,\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            });\n        };\n        for (var i = 0, ln = datum.length; i < ln; i++) {\n            _loop_1(i, ln);\n        }\n    }\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}