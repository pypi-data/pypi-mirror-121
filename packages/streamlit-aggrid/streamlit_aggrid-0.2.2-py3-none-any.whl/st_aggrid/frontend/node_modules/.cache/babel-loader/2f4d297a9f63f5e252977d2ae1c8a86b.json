{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Component, DragSourceType, Events, HorizontalDirection, PositionableFeature, VerticalDirection, _ } from \"@ag-grid-community/core\";\nimport { DropZoneColumnComp } from \"./dropZoneColumnComp\";\n\nvar BaseDropZonePanel = function (_super) {\n  __extends(BaseDropZonePanel, _super);\n\n  function BaseDropZonePanel(horizontal, valueColumn) {\n    var _this = _super.call(this, \"<div class=\\\"ag-unselectable\\\"></div>\") || this;\n\n    _this.horizontal = horizontal;\n    _this.valueColumn = valueColumn;\n    _this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n    _this.guiDestroyFunctions = [];\n    _this.childColumnComponents = [];\n    _this.resizeEnabled = false;\n\n    _this.addElementClasses(_this.getGui());\n\n    _this.eColumnDropList = document.createElement('div');\n\n    _this.addElementClasses(_this.eColumnDropList, 'list');\n\n    return _this;\n  }\n\n  BaseDropZonePanel.prototype.isHorizontal = function () {\n    return this.horizontal;\n  };\n\n  BaseDropZonePanel.prototype.toggleResizable = function (resizable) {\n    this.positionableFeature.setResizable(resizable ? {\n      bottom: true\n    } : false);\n    this.resizeEnabled = resizable;\n  };\n\n  BaseDropZonePanel.prototype.setBeans = function (beans) {\n    this.beans = beans;\n  };\n\n  BaseDropZonePanel.prototype.destroy = function () {\n    this.destroyGui();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  BaseDropZonePanel.prototype.destroyGui = function () {\n    this.guiDestroyFunctions.forEach(function (func) {\n      return func();\n    });\n    this.guiDestroyFunctions.length = 0;\n    this.childColumnComponents.length = 0;\n\n    _.clearElement(this.getGui());\n\n    _.clearElement(this.eColumnDropList);\n  };\n\n  BaseDropZonePanel.prototype.init = function (params) {\n    this.params = params;\n    this.addManagedListener(this.beans.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.refreshGui.bind(this));\n    this.addManagedListener(this.beans.gridOptionsWrapper, 'functionsReadOnly', this.refreshGui.bind(this));\n    this.setupDropTarget();\n    this.positionableFeature = new PositionableFeature(this.getGui(), {\n      minHeight: 100\n    });\n    this.createManagedBean(this.positionableFeature); // we don't know if this bean will be initialised before columnModel.\n    // if columnModel first, then below will work\n    // if columnModel second, then below will put blank in, and then above event gets first when columnModel is set up\n\n    this.refreshGui();\n  };\n\n  BaseDropZonePanel.prototype.addElementClasses = function (el, suffix) {\n    suffix = suffix ? \"-\" + suffix : '';\n\n    _.addCssClass(el, \"ag-column-drop\" + suffix);\n\n    var direction = this.horizontal ? 'horizontal' : 'vertical';\n\n    _.addCssClass(el, \"ag-column-drop-\" + direction + suffix);\n  };\n\n  BaseDropZonePanel.prototype.setupDropTarget = function () {\n    this.dropTarget = {\n      getContainer: this.getGui.bind(this),\n      getIconName: this.getIconName.bind(this),\n      onDragging: this.onDragging.bind(this),\n      onDragEnter: this.onDragEnter.bind(this),\n      onDragLeave: this.onDragLeave.bind(this),\n      onDragStop: this.onDragStop.bind(this),\n      isInterestedIn: this.isInterestedIn.bind(this)\n    };\n    this.beans.dragAndDropService.addDropTarget(this.dropTarget);\n  };\n\n  BaseDropZonePanel.prototype.isInterestedIn = function (type) {\n    // not interested in row drags\n    return type === DragSourceType.HeaderCell || type === DragSourceType.ToolPanel;\n  };\n\n  BaseDropZonePanel.prototype.checkInsertIndex = function (draggingEvent) {\n    var newIndex = this.horizontal ? this.getNewHorizontalInsertIndex(draggingEvent) : this.getNewVerticalInsertIndex(draggingEvent); // <0 happens when drag is no a direction we are interested in, eg drag is up/down but in horizontal panel\n\n    if (newIndex < 0) {\n      return false;\n    }\n\n    var changed = newIndex !== this.insertIndex;\n\n    if (changed) {\n      this.insertIndex = newIndex;\n    }\n\n    return changed;\n  };\n\n  BaseDropZonePanel.prototype.getNewHorizontalInsertIndex = function (draggingEvent) {\n    if (_.missing(draggingEvent.hDirection)) {\n      return -1;\n    }\n\n    var newIndex = 0;\n    var mouseEvent = draggingEvent.event;\n    var enableRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n    var goingLeft = draggingEvent.hDirection === HorizontalDirection.Left;\n    var mouseX = mouseEvent.clientX;\n    this.childColumnComponents.forEach(function (childColumn) {\n      var rect = childColumn.getGui().getBoundingClientRect();\n      var rectX = goingLeft ? rect.right : rect.left;\n      var horizontalFit = enableRtl ? mouseX <= rectX : mouseX >= rectX;\n\n      if (horizontalFit) {\n        newIndex++;\n      }\n    });\n    return newIndex;\n  };\n\n  BaseDropZonePanel.prototype.getNewVerticalInsertIndex = function (draggingEvent) {\n    if (_.missing(draggingEvent.vDirection)) {\n      return -1;\n    }\n\n    var newIndex = 0;\n    var mouseEvent = draggingEvent.event;\n    this.childColumnComponents.forEach(function (childColumn) {\n      var rect = childColumn.getGui().getBoundingClientRect();\n      var verticalFit = mouseEvent.clientY >= (draggingEvent.vDirection === VerticalDirection.Down ? rect.top : rect.bottom);\n\n      if (verticalFit) {\n        newIndex++;\n      }\n    });\n    return newIndex;\n  };\n\n  BaseDropZonePanel.prototype.checkDragStartedBySelf = function (draggingEvent) {\n    if (this.state !== BaseDropZonePanel.STATE_NOT_DRAGGING) {\n      return;\n    }\n\n    this.state = BaseDropZonePanel.STATE_REARRANGE_COLUMNS;\n    this.potentialDndColumns = draggingEvent.dragSource.getDragItem().columns || [];\n    this.refreshGui();\n    this.checkInsertIndex(draggingEvent);\n    this.refreshGui();\n  };\n\n  BaseDropZonePanel.prototype.onDragging = function (draggingEvent) {\n    this.checkDragStartedBySelf(draggingEvent);\n\n    if (this.checkInsertIndex(draggingEvent)) {\n      this.refreshGui();\n    }\n  };\n\n  BaseDropZonePanel.prototype.onDragEnter = function (draggingEvent) {\n    // this will contain all columns that are potential drops\n    var dragColumns = draggingEvent.dragSource.getDragItem().columns || [];\n    this.state = BaseDropZonePanel.STATE_NEW_COLUMNS_IN; // take out columns that are not droppable\n\n    var goodDragColumns = dragColumns.filter(this.isColumnDroppable.bind(this));\n\n    if (goodDragColumns.length > 0) {\n      this.potentialDndColumns = goodDragColumns;\n      this.checkInsertIndex(draggingEvent);\n      this.refreshGui();\n    }\n  };\n\n  BaseDropZonePanel.prototype.isPotentialDndColumns = function () {\n    return _.existsAndNotEmpty(this.potentialDndColumns);\n  };\n\n  BaseDropZonePanel.prototype.onDragLeave = function (draggingEvent) {\n    // if the dragging started from us, we remove the group, however if it started\n    // someplace else, then we don't, as it was only 'asking'\n    if (this.state === BaseDropZonePanel.STATE_REARRANGE_COLUMNS) {\n      var columns = draggingEvent.dragSource.getDragItem().columns || [];\n      this.removeColumns(columns);\n    }\n\n    if (this.isPotentialDndColumns()) {\n      this.potentialDndColumns = [];\n      this.refreshGui();\n    }\n\n    this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n  };\n\n  BaseDropZonePanel.prototype.onDragStop = function () {\n    if (this.isPotentialDndColumns()) {\n      var success = false;\n\n      if (this.state === BaseDropZonePanel.STATE_NEW_COLUMNS_IN) {\n        this.addColumns(this.potentialDndColumns);\n        success = true;\n      } else {\n        success = this.rearrangeColumns(this.potentialDndColumns);\n      }\n\n      this.potentialDndColumns = []; // If the function is passive, then we don't refresh, as we assume the client application\n      // is going to call setRowGroups / setPivots / setValues at a later point which will then\n      // cause a refresh. This gives a nice GUI where the ghost stays until the app has caught\n      // up with the changes. However, if there was no change in the order, then we do need to\n      // refresh to reset the columns\n\n      if (!this.beans.gridOptionsWrapper.isFunctionsPassive() || !success) {\n        this.refreshGui();\n      }\n    }\n\n    this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n  };\n\n  BaseDropZonePanel.prototype.removeColumns = function (columnsToRemove) {\n    var newColumnList = this.getExistingColumns().filter(function (col) {\n      return !_.includes(columnsToRemove, col);\n    });\n    this.updateColumns(newColumnList);\n  };\n\n  BaseDropZonePanel.prototype.addColumns = function (columnsToAdd) {\n    if (!columnsToAdd) {\n      return;\n    }\n\n    var newColumnList = this.getExistingColumns().slice();\n    var colsToAddNoDuplicates = columnsToAdd.filter(function (col) {\n      return newColumnList.indexOf(col) < 0;\n    });\n\n    _.insertArrayIntoArray(newColumnList, colsToAddNoDuplicates, this.insertIndex);\n\n    this.updateColumns(newColumnList);\n  };\n\n  BaseDropZonePanel.prototype.rearrangeColumns = function (columnsToAdd) {\n    var newColumnList = this.getNonGhostColumns().slice();\n\n    _.insertArrayIntoArray(newColumnList, columnsToAdd, this.insertIndex);\n\n    if (_.areEqual(newColumnList, this.getExistingColumns())) {\n      return false;\n    }\n\n    this.updateColumns(newColumnList);\n    return true;\n  };\n\n  BaseDropZonePanel.prototype.refreshGui = function () {\n    // we reset the scroll position after the refresh.\n    // if we don't do this, then the list will always scroll to the top\n    // each time we refresh it. this is because part of the refresh empties\n    // out the list which sets scroll to zero. so the user could be just\n    // reordering the list - we want to prevent the resetting of the scroll.\n    // this is relevant for vertical display only (as horizontal has no scroll)\n    var scrollTop = this.eColumnDropList.scrollTop;\n    var resizeEnabled = this.resizeEnabled;\n    this.toggleResizable(false);\n    this.destroyGui();\n    this.addIconAndTitleToGui();\n    this.addEmptyMessageToGui();\n    this.addColumnsToGui();\n\n    if (!this.isHorizontal()) {\n      this.eColumnDropList.scrollTop = scrollTop;\n    }\n\n    if (resizeEnabled) {\n      this.toggleResizable(resizeEnabled);\n    }\n  };\n\n  BaseDropZonePanel.prototype.getNonGhostColumns = function () {\n    var _this = this;\n\n    var existingColumns = this.getExistingColumns();\n\n    if (this.isPotentialDndColumns()) {\n      return existingColumns.filter(function (column) {\n        return !_.includes(_this.potentialDndColumns, column);\n      });\n    }\n\n    return existingColumns;\n  };\n\n  BaseDropZonePanel.prototype.addColumnsToGui = function () {\n    var _this = this;\n\n    var nonGhostColumns = this.getNonGhostColumns();\n    var addingGhosts = this.isPotentialDndColumns();\n    var itemsToAddToGui = [];\n    nonGhostColumns.forEach(function (column, index) {\n      if (addingGhosts && index >= _this.insertIndex) {\n        return;\n      }\n\n      var columnComponent = _this.createColumnComponent(column, false);\n\n      itemsToAddToGui.push(columnComponent);\n    });\n\n    if (this.isPotentialDndColumns()) {\n      this.potentialDndColumns.forEach(function (column) {\n        var columnComponent = _this.createColumnComponent(column, true);\n\n        itemsToAddToGui.push(columnComponent);\n      });\n      nonGhostColumns.forEach(function (column, index) {\n        if (index < _this.insertIndex) {\n          return;\n        }\n\n        var columnComponent = _this.createColumnComponent(column, false);\n\n        itemsToAddToGui.push(columnComponent);\n      });\n    }\n\n    this.getGui().appendChild(this.eColumnDropList);\n    itemsToAddToGui.forEach(function (columnComponent, index) {\n      if (index > 0) {\n        _this.addArrow(_this.eColumnDropList);\n      }\n\n      _this.eColumnDropList.appendChild(columnComponent.getGui());\n    });\n  };\n\n  BaseDropZonePanel.prototype.createColumnComponent = function (column, ghost) {\n    var _this = this;\n\n    var columnComponent = new DropZoneColumnComp(column, this.dropTarget, ghost, this.valueColumn, this.horizontal);\n    columnComponent.addEventListener(DropZoneColumnComp.EVENT_COLUMN_REMOVE, this.removeColumns.bind(this, [column]));\n    this.beans.context.createBean(columnComponent);\n    this.guiDestroyFunctions.push(function () {\n      return _this.destroyBean(columnComponent);\n    });\n\n    if (!ghost) {\n      this.childColumnComponents.push(columnComponent);\n    }\n\n    return columnComponent;\n  };\n\n  BaseDropZonePanel.prototype.addIconAndTitleToGui = function () {\n    var eGroupIcon = this.params.icon;\n    var eTitleBar = document.createElement('div');\n    this.addElementClasses(eTitleBar, 'title-bar');\n    this.addElementClasses(eGroupIcon, 'icon');\n\n    _.addOrRemoveCssClass(this.getGui(), 'ag-column-drop-empty', this.isExistingColumnsEmpty());\n\n    eTitleBar.appendChild(eGroupIcon);\n\n    if (!this.horizontal) {\n      var eTitle = document.createElement('span');\n      this.addElementClasses(eTitle, 'title');\n      eTitle.innerHTML = this.params.title;\n      eTitleBar.appendChild(eTitle);\n    }\n\n    this.getGui().appendChild(eTitleBar);\n  };\n\n  BaseDropZonePanel.prototype.isExistingColumnsEmpty = function () {\n    return this.getExistingColumns().length === 0;\n  };\n\n  BaseDropZonePanel.prototype.addEmptyMessageToGui = function () {\n    if (!this.isExistingColumnsEmpty() || this.isPotentialDndColumns()) {\n      return;\n    }\n\n    var eMessage = document.createElement('span');\n    eMessage.innerHTML = this.params.emptyMessage;\n    this.addElementClasses(eMessage, 'empty-message');\n    this.eColumnDropList.appendChild(eMessage);\n  };\n\n  BaseDropZonePanel.prototype.addArrow = function (eParent) {\n    // only add the arrows if the layout is horizontal\n    if (this.horizontal) {\n      // for RTL it's a left arrow, otherwise it's a right arrow\n      var enableRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n\n      var icon = _.createIconNoSpan(enableRtl ? 'smallLeft' : 'smallRight', this.beans.gridOptionsWrapper);\n\n      this.addElementClasses(icon, 'cell-separator');\n      eParent.appendChild(icon);\n    }\n  };\n\n  BaseDropZonePanel.STATE_NOT_DRAGGING = 'notDragging';\n  BaseDropZonePanel.STATE_NEW_COLUMNS_IN = 'newColumnsIn';\n  BaseDropZonePanel.STATE_REARRANGE_COLUMNS = 'rearrangeColumns';\n  return BaseDropZonePanel;\n}(Component);\n\nexport { BaseDropZonePanel };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/row-grouping/dist/es6/rowGrouping/columnDropZones/baseDropZonePanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","DragSourceType","Events","HorizontalDirection","PositionableFeature","VerticalDirection","_","DropZoneColumnComp","BaseDropZonePanel","_super","horizontal","valueColumn","_this","call","state","STATE_NOT_DRAGGING","guiDestroyFunctions","childColumnComponents","resizeEnabled","addElementClasses","getGui","eColumnDropList","document","createElement","isHorizontal","toggleResizable","resizable","positionableFeature","setResizable","bottom","setBeans","beans","destroy","destroyGui","forEach","func","length","clearElement","init","params","addManagedListener","eventService","EVENT_NEW_COLUMNS_LOADED","refreshGui","bind","gridOptionsWrapper","setupDropTarget","minHeight","createManagedBean","el","suffix","addCssClass","direction","dropTarget","getContainer","getIconName","onDragging","onDragEnter","onDragLeave","onDragStop","isInterestedIn","dragAndDropService","addDropTarget","type","HeaderCell","ToolPanel","checkInsertIndex","draggingEvent","newIndex","getNewHorizontalInsertIndex","getNewVerticalInsertIndex","changed","insertIndex","missing","hDirection","mouseEvent","event","enableRtl","isEnableRtl","goingLeft","Left","mouseX","clientX","childColumn","rect","getBoundingClientRect","rectX","right","left","horizontalFit","vDirection","verticalFit","clientY","Down","top","checkDragStartedBySelf","STATE_REARRANGE_COLUMNS","potentialDndColumns","dragSource","getDragItem","columns","dragColumns","STATE_NEW_COLUMNS_IN","goodDragColumns","filter","isColumnDroppable","isPotentialDndColumns","existsAndNotEmpty","removeColumns","success","addColumns","rearrangeColumns","isFunctionsPassive","columnsToRemove","newColumnList","getExistingColumns","col","includes","updateColumns","columnsToAdd","slice","colsToAddNoDuplicates","indexOf","insertArrayIntoArray","getNonGhostColumns","areEqual","scrollTop","addIconAndTitleToGui","addEmptyMessageToGui","addColumnsToGui","existingColumns","column","nonGhostColumns","addingGhosts","itemsToAddToGui","index","columnComponent","createColumnComponent","push","appendChild","addArrow","ghost","addEventListener","EVENT_COLUMN_REMOVE","context","createBean","destroyBean","eGroupIcon","icon","eTitleBar","addOrRemoveCssClass","isExistingColumnsEmpty","eTitle","innerHTML","title","eMessage","emptyMessage","eParent","createIconNoSpan"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component, DragSourceType, Events, HorizontalDirection, PositionableFeature, VerticalDirection, _ } from \"@ag-grid-community/core\";\nimport { DropZoneColumnComp } from \"./dropZoneColumnComp\";\nvar BaseDropZonePanel = /** @class */ (function (_super) {\n    __extends(BaseDropZonePanel, _super);\n    function BaseDropZonePanel(horizontal, valueColumn) {\n        var _this = _super.call(this, \"<div class=\\\"ag-unselectable\\\"></div>\") || this;\n        _this.horizontal = horizontal;\n        _this.valueColumn = valueColumn;\n        _this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n        _this.guiDestroyFunctions = [];\n        _this.childColumnComponents = [];\n        _this.resizeEnabled = false;\n        _this.addElementClasses(_this.getGui());\n        _this.eColumnDropList = document.createElement('div');\n        _this.addElementClasses(_this.eColumnDropList, 'list');\n        return _this;\n    }\n    BaseDropZonePanel.prototype.isHorizontal = function () {\n        return this.horizontal;\n    };\n    BaseDropZonePanel.prototype.toggleResizable = function (resizable) {\n        this.positionableFeature.setResizable(resizable ? { bottom: true } : false);\n        this.resizeEnabled = resizable;\n    };\n    BaseDropZonePanel.prototype.setBeans = function (beans) {\n        this.beans = beans;\n    };\n    BaseDropZonePanel.prototype.destroy = function () {\n        this.destroyGui();\n        _super.prototype.destroy.call(this);\n    };\n    BaseDropZonePanel.prototype.destroyGui = function () {\n        this.guiDestroyFunctions.forEach(function (func) { return func(); });\n        this.guiDestroyFunctions.length = 0;\n        this.childColumnComponents.length = 0;\n        _.clearElement(this.getGui());\n        _.clearElement(this.eColumnDropList);\n    };\n    BaseDropZonePanel.prototype.init = function (params) {\n        this.params = params;\n        this.addManagedListener(this.beans.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.refreshGui.bind(this));\n        this.addManagedListener(this.beans.gridOptionsWrapper, 'functionsReadOnly', this.refreshGui.bind(this));\n        this.setupDropTarget();\n        this.positionableFeature = new PositionableFeature(this.getGui(), { minHeight: 100 });\n        this.createManagedBean(this.positionableFeature);\n        // we don't know if this bean will be initialised before columnModel.\n        // if columnModel first, then below will work\n        // if columnModel second, then below will put blank in, and then above event gets first when columnModel is set up\n        this.refreshGui();\n    };\n    BaseDropZonePanel.prototype.addElementClasses = function (el, suffix) {\n        suffix = suffix ? \"-\" + suffix : '';\n        _.addCssClass(el, \"ag-column-drop\" + suffix);\n        var direction = this.horizontal ? 'horizontal' : 'vertical';\n        _.addCssClass(el, \"ag-column-drop-\" + direction + suffix);\n    };\n    BaseDropZonePanel.prototype.setupDropTarget = function () {\n        this.dropTarget = {\n            getContainer: this.getGui.bind(this),\n            getIconName: this.getIconName.bind(this),\n            onDragging: this.onDragging.bind(this),\n            onDragEnter: this.onDragEnter.bind(this),\n            onDragLeave: this.onDragLeave.bind(this),\n            onDragStop: this.onDragStop.bind(this),\n            isInterestedIn: this.isInterestedIn.bind(this)\n        };\n        this.beans.dragAndDropService.addDropTarget(this.dropTarget);\n    };\n    BaseDropZonePanel.prototype.isInterestedIn = function (type) {\n        // not interested in row drags\n        return type === DragSourceType.HeaderCell || type === DragSourceType.ToolPanel;\n    };\n    BaseDropZonePanel.prototype.checkInsertIndex = function (draggingEvent) {\n        var newIndex = this.horizontal ? this.getNewHorizontalInsertIndex(draggingEvent) : this.getNewVerticalInsertIndex(draggingEvent);\n        // <0 happens when drag is no a direction we are interested in, eg drag is up/down but in horizontal panel\n        if (newIndex < 0) {\n            return false;\n        }\n        var changed = newIndex !== this.insertIndex;\n        if (changed) {\n            this.insertIndex = newIndex;\n        }\n        return changed;\n    };\n    BaseDropZonePanel.prototype.getNewHorizontalInsertIndex = function (draggingEvent) {\n        if (_.missing(draggingEvent.hDirection)) {\n            return -1;\n        }\n        var newIndex = 0;\n        var mouseEvent = draggingEvent.event;\n        var enableRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n        var goingLeft = draggingEvent.hDirection === HorizontalDirection.Left;\n        var mouseX = mouseEvent.clientX;\n        this.childColumnComponents.forEach(function (childColumn) {\n            var rect = childColumn.getGui().getBoundingClientRect();\n            var rectX = goingLeft ? rect.right : rect.left;\n            var horizontalFit = enableRtl ? mouseX <= rectX : mouseX >= rectX;\n            if (horizontalFit) {\n                newIndex++;\n            }\n        });\n        return newIndex;\n    };\n    BaseDropZonePanel.prototype.getNewVerticalInsertIndex = function (draggingEvent) {\n        if (_.missing(draggingEvent.vDirection)) {\n            return -1;\n        }\n        var newIndex = 0;\n        var mouseEvent = draggingEvent.event;\n        this.childColumnComponents.forEach(function (childColumn) {\n            var rect = childColumn.getGui().getBoundingClientRect();\n            var verticalFit = mouseEvent.clientY >= (draggingEvent.vDirection === VerticalDirection.Down ? rect.top : rect.bottom);\n            if (verticalFit) {\n                newIndex++;\n            }\n        });\n        return newIndex;\n    };\n    BaseDropZonePanel.prototype.checkDragStartedBySelf = function (draggingEvent) {\n        if (this.state !== BaseDropZonePanel.STATE_NOT_DRAGGING) {\n            return;\n        }\n        this.state = BaseDropZonePanel.STATE_REARRANGE_COLUMNS;\n        this.potentialDndColumns = draggingEvent.dragSource.getDragItem().columns || [];\n        this.refreshGui();\n        this.checkInsertIndex(draggingEvent);\n        this.refreshGui();\n    };\n    BaseDropZonePanel.prototype.onDragging = function (draggingEvent) {\n        this.checkDragStartedBySelf(draggingEvent);\n        if (this.checkInsertIndex(draggingEvent)) {\n            this.refreshGui();\n        }\n    };\n    BaseDropZonePanel.prototype.onDragEnter = function (draggingEvent) {\n        // this will contain all columns that are potential drops\n        var dragColumns = draggingEvent.dragSource.getDragItem().columns || [];\n        this.state = BaseDropZonePanel.STATE_NEW_COLUMNS_IN;\n        // take out columns that are not droppable\n        var goodDragColumns = dragColumns.filter(this.isColumnDroppable.bind(this));\n        if (goodDragColumns.length > 0) {\n            this.potentialDndColumns = goodDragColumns;\n            this.checkInsertIndex(draggingEvent);\n            this.refreshGui();\n        }\n    };\n    BaseDropZonePanel.prototype.isPotentialDndColumns = function () {\n        return _.existsAndNotEmpty(this.potentialDndColumns);\n    };\n    BaseDropZonePanel.prototype.onDragLeave = function (draggingEvent) {\n        // if the dragging started from us, we remove the group, however if it started\n        // someplace else, then we don't, as it was only 'asking'\n        if (this.state === BaseDropZonePanel.STATE_REARRANGE_COLUMNS) {\n            var columns = draggingEvent.dragSource.getDragItem().columns || [];\n            this.removeColumns(columns);\n        }\n        if (this.isPotentialDndColumns()) {\n            this.potentialDndColumns = [];\n            this.refreshGui();\n        }\n        this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n    };\n    BaseDropZonePanel.prototype.onDragStop = function () {\n        if (this.isPotentialDndColumns()) {\n            var success = false;\n            if (this.state === BaseDropZonePanel.STATE_NEW_COLUMNS_IN) {\n                this.addColumns(this.potentialDndColumns);\n                success = true;\n            }\n            else {\n                success = this.rearrangeColumns(this.potentialDndColumns);\n            }\n            this.potentialDndColumns = [];\n            // If the function is passive, then we don't refresh, as we assume the client application\n            // is going to call setRowGroups / setPivots / setValues at a later point which will then\n            // cause a refresh. This gives a nice GUI where the ghost stays until the app has caught\n            // up with the changes. However, if there was no change in the order, then we do need to\n            // refresh to reset the columns\n            if (!this.beans.gridOptionsWrapper.isFunctionsPassive() || !success) {\n                this.refreshGui();\n            }\n        }\n        this.state = BaseDropZonePanel.STATE_NOT_DRAGGING;\n    };\n    BaseDropZonePanel.prototype.removeColumns = function (columnsToRemove) {\n        var newColumnList = this.getExistingColumns().filter(function (col) { return !_.includes(columnsToRemove, col); });\n        this.updateColumns(newColumnList);\n    };\n    BaseDropZonePanel.prototype.addColumns = function (columnsToAdd) {\n        if (!columnsToAdd) {\n            return;\n        }\n        var newColumnList = this.getExistingColumns().slice();\n        var colsToAddNoDuplicates = columnsToAdd.filter(function (col) { return newColumnList.indexOf(col) < 0; });\n        _.insertArrayIntoArray(newColumnList, colsToAddNoDuplicates, this.insertIndex);\n        this.updateColumns(newColumnList);\n    };\n    BaseDropZonePanel.prototype.rearrangeColumns = function (columnsToAdd) {\n        var newColumnList = this.getNonGhostColumns().slice();\n        _.insertArrayIntoArray(newColumnList, columnsToAdd, this.insertIndex);\n        if (_.areEqual(newColumnList, this.getExistingColumns())) {\n            return false;\n        }\n        this.updateColumns(newColumnList);\n        return true;\n    };\n    BaseDropZonePanel.prototype.refreshGui = function () {\n        // we reset the scroll position after the refresh.\n        // if we don't do this, then the list will always scroll to the top\n        // each time we refresh it. this is because part of the refresh empties\n        // out the list which sets scroll to zero. so the user could be just\n        // reordering the list - we want to prevent the resetting of the scroll.\n        // this is relevant for vertical display only (as horizontal has no scroll)\n        var scrollTop = this.eColumnDropList.scrollTop;\n        var resizeEnabled = this.resizeEnabled;\n        this.toggleResizable(false);\n        this.destroyGui();\n        this.addIconAndTitleToGui();\n        this.addEmptyMessageToGui();\n        this.addColumnsToGui();\n        if (!this.isHorizontal()) {\n            this.eColumnDropList.scrollTop = scrollTop;\n        }\n        if (resizeEnabled) {\n            this.toggleResizable(resizeEnabled);\n        }\n    };\n    BaseDropZonePanel.prototype.getNonGhostColumns = function () {\n        var _this = this;\n        var existingColumns = this.getExistingColumns();\n        if (this.isPotentialDndColumns()) {\n            return existingColumns.filter(function (column) { return !_.includes(_this.potentialDndColumns, column); });\n        }\n        return existingColumns;\n    };\n    BaseDropZonePanel.prototype.addColumnsToGui = function () {\n        var _this = this;\n        var nonGhostColumns = this.getNonGhostColumns();\n        var addingGhosts = this.isPotentialDndColumns();\n        var itemsToAddToGui = [];\n        nonGhostColumns.forEach(function (column, index) {\n            if (addingGhosts && index >= _this.insertIndex) {\n                return;\n            }\n            var columnComponent = _this.createColumnComponent(column, false);\n            itemsToAddToGui.push(columnComponent);\n        });\n        if (this.isPotentialDndColumns()) {\n            this.potentialDndColumns.forEach(function (column) {\n                var columnComponent = _this.createColumnComponent(column, true);\n                itemsToAddToGui.push(columnComponent);\n            });\n            nonGhostColumns.forEach(function (column, index) {\n                if (index < _this.insertIndex) {\n                    return;\n                }\n                var columnComponent = _this.createColumnComponent(column, false);\n                itemsToAddToGui.push(columnComponent);\n            });\n        }\n        this.getGui().appendChild(this.eColumnDropList);\n        itemsToAddToGui.forEach(function (columnComponent, index) {\n            if (index > 0) {\n                _this.addArrow(_this.eColumnDropList);\n            }\n            _this.eColumnDropList.appendChild(columnComponent.getGui());\n        });\n    };\n    BaseDropZonePanel.prototype.createColumnComponent = function (column, ghost) {\n        var _this = this;\n        var columnComponent = new DropZoneColumnComp(column, this.dropTarget, ghost, this.valueColumn, this.horizontal);\n        columnComponent.addEventListener(DropZoneColumnComp.EVENT_COLUMN_REMOVE, this.removeColumns.bind(this, [column]));\n        this.beans.context.createBean(columnComponent);\n        this.guiDestroyFunctions.push(function () { return _this.destroyBean(columnComponent); });\n        if (!ghost) {\n            this.childColumnComponents.push(columnComponent);\n        }\n        return columnComponent;\n    };\n    BaseDropZonePanel.prototype.addIconAndTitleToGui = function () {\n        var eGroupIcon = this.params.icon;\n        var eTitleBar = document.createElement('div');\n        this.addElementClasses(eTitleBar, 'title-bar');\n        this.addElementClasses(eGroupIcon, 'icon');\n        _.addOrRemoveCssClass(this.getGui(), 'ag-column-drop-empty', this.isExistingColumnsEmpty());\n        eTitleBar.appendChild(eGroupIcon);\n        if (!this.horizontal) {\n            var eTitle = document.createElement('span');\n            this.addElementClasses(eTitle, 'title');\n            eTitle.innerHTML = this.params.title;\n            eTitleBar.appendChild(eTitle);\n        }\n        this.getGui().appendChild(eTitleBar);\n    };\n    BaseDropZonePanel.prototype.isExistingColumnsEmpty = function () {\n        return this.getExistingColumns().length === 0;\n    };\n    BaseDropZonePanel.prototype.addEmptyMessageToGui = function () {\n        if (!this.isExistingColumnsEmpty() || this.isPotentialDndColumns()) {\n            return;\n        }\n        var eMessage = document.createElement('span');\n        eMessage.innerHTML = this.params.emptyMessage;\n        this.addElementClasses(eMessage, 'empty-message');\n        this.eColumnDropList.appendChild(eMessage);\n    };\n    BaseDropZonePanel.prototype.addArrow = function (eParent) {\n        // only add the arrows if the layout is horizontal\n        if (this.horizontal) {\n            // for RTL it's a left arrow, otherwise it's a right arrow\n            var enableRtl = this.beans.gridOptionsWrapper.isEnableRtl();\n            var icon = _.createIconNoSpan(enableRtl ? 'smallLeft' : 'smallRight', this.beans.gridOptionsWrapper);\n            this.addElementClasses(icon, 'cell-separator');\n            eParent.appendChild(icon);\n        }\n    };\n    BaseDropZonePanel.STATE_NOT_DRAGGING = 'notDragging';\n    BaseDropZonePanel.STATE_NEW_COLUMNS_IN = 'newColumnsIn';\n    BaseDropZonePanel.STATE_REARRANGE_COLUMNS = 'rearrangeColumns';\n    return BaseDropZonePanel;\n}(Component));\nexport { BaseDropZonePanel };\n"]},"metadata":{},"sourceType":"module"}