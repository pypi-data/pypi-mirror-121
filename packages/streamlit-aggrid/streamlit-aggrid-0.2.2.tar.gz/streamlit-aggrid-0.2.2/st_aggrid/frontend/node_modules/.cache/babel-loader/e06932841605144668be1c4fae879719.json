{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, Autowired, Component, Events, OriginalColumnGroup } from \"@ag-grid-community/core\";\nimport { ToolPanelFilterComp } from \"./toolPanelFilterComp\";\nimport { ToolPanelFilterGroupComp } from \"./toolPanelFilterGroupComp\";\nimport { EXPAND_STATE } from \"./filtersToolPanelHeaderPanel\";\n\nvar FiltersToolPanelListPanel = function (_super) {\n  __extends(FiltersToolPanelListPanel, _super);\n\n  function FiltersToolPanelListPanel() {\n    var _this = _super.call(this, FiltersToolPanelListPanel.TEMPLATE) || this;\n\n    _this.initialised = false;\n    _this.filterGroupComps = [];\n    return _this;\n  }\n\n  FiltersToolPanelListPanel.prototype.init = function (params) {\n    var _this = this;\n\n    this.initialised = true;\n    var defaultParams = {\n      suppressExpandAll: false,\n      suppressFilterSearch: false,\n      suppressSyncLayoutWithGrid: false,\n      api: this.gridApi,\n      columnApi: this.columnApi\n    };\n\n    _.mergeDeep(defaultParams, params);\n\n    this.params = defaultParams;\n\n    if (!this.params.suppressSyncLayoutWithGrid) {\n      this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, function () {\n        return _this.onColumnsChanged();\n      });\n    }\n\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, function () {\n      return _this.onColumnsChanged();\n    });\n    this.addManagedListener(this.eventService, Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED, function (event) {\n      // when re-entering the filters tool panel we need to refresh the virtual lists in the set filters in case\n      // filters have been changed elsewhere, i.e. via an api call.\n      if (event.source === 'filters') {\n        _this.refreshFilters();\n      }\n    });\n\n    if (this.columnModel.isReady()) {\n      this.onColumnsChanged();\n    }\n  };\n\n  FiltersToolPanelListPanel.prototype.onColumnsChanged = function () {\n    var pivotModeActive = this.columnModel.isPivotMode();\n    var shouldSyncColumnLayoutWithGrid = !this.params.suppressSyncLayoutWithGrid && !pivotModeActive;\n    shouldSyncColumnLayoutWithGrid ? this.syncFilterLayout() : this.buildTreeFromProvidedColumnDefs();\n  };\n\n  FiltersToolPanelListPanel.prototype.syncFilterLayout = function () {\n    this.toolPanelColDefService.syncLayoutWithGrid(this.setFiltersLayout.bind(this));\n  };\n\n  FiltersToolPanelListPanel.prototype.buildTreeFromProvidedColumnDefs = function () {\n    var _this = this;\n\n    this.destroyFilters();\n    var columnTree = this.columnModel.getPrimaryColumnTree();\n    this.filterGroupComps = this.recursivelyAddComps(columnTree, 0);\n    var len = this.filterGroupComps.length;\n\n    if (len) {\n      this.filterGroupComps.forEach(function (comp) {\n        return _this.appendChild(comp);\n      });\n      this.setFirstAndLastVisible(0, len - 1);\n    } // perform search if searchFilterText exists\n\n\n    if (_.exists(this.searchFilterText)) {\n      this.searchFilters(this.searchFilterText);\n    } // notify header of expand\n\n\n    this.fireExpandedEvent();\n  };\n\n  FiltersToolPanelListPanel.prototype.setFiltersLayout = function (colDefs) {\n    var _this = this;\n\n    this.destroyFilters();\n    var columnTree = this.toolPanelColDefService.createColumnTree(colDefs);\n    this.filterGroupComps = this.recursivelyAddComps(columnTree, 0);\n    var len = this.filterGroupComps.length;\n\n    if (len) {\n      this.filterGroupComps.forEach(function (comp) {\n        return _this.appendChild(comp);\n      });\n      this.setFirstAndLastVisible(0, len - 1);\n    } // perform search if searchFilterText exists\n\n\n    if (_.exists(this.searchFilterText)) {\n      this.searchFilters(this.searchFilterText);\n    } // notify header of expand\n\n\n    this.fireExpandedEvent();\n  };\n\n  FiltersToolPanelListPanel.prototype.recursivelyAddComps = function (tree, depth) {\n    var _this = this;\n\n    return _.flatten(tree.map(function (child) {\n      if (child instanceof OriginalColumnGroup) {\n        return _.flatten(_this.recursivelyAddFilterGroupComps(child, depth));\n      }\n\n      var column = child;\n\n      if (!_this.shouldDisplayFilter(column)) {\n        return [];\n      }\n\n      var hideFilterCompHeader = depth === 0;\n      var filterComp = new ToolPanelFilterComp(hideFilterCompHeader);\n\n      _this.getContext().createBean(filterComp);\n\n      filterComp.setColumn(column);\n\n      if (depth > 0) {\n        return filterComp;\n      }\n\n      var filterGroupComp = _this.createBean(new ToolPanelFilterGroupComp(column, [filterComp], _this.onGroupExpanded.bind(_this), depth, true));\n\n      filterGroupComp.addCssClassToTitleBar('ag-filter-toolpanel-header');\n      filterGroupComp.collapse();\n      return filterGroupComp;\n    }));\n  };\n\n  FiltersToolPanelListPanel.prototype.recursivelyAddFilterGroupComps = function (columnGroup, depth) {\n    if (!this.filtersExistInChildren(columnGroup.getChildren())) {\n      return;\n    }\n\n    var colGroupDef = columnGroup.getColGroupDef();\n\n    if (colGroupDef && colGroupDef.suppressFiltersToolPanel) {\n      return [];\n    }\n\n    var newDepth = columnGroup.isPadding() ? depth : depth + 1;\n\n    var childFilterComps = _.flatten(this.recursivelyAddComps(columnGroup.getChildren(), newDepth));\n\n    if (columnGroup.isPadding()) {\n      return childFilterComps;\n    }\n\n    var filterGroupComp = new ToolPanelFilterGroupComp(columnGroup, childFilterComps, this.onGroupExpanded.bind(this), depth, false);\n    this.getContext().createBean(filterGroupComp);\n    filterGroupComp.addCssClassToTitleBar('ag-filter-toolpanel-header');\n    return [filterGroupComp];\n  };\n\n  FiltersToolPanelListPanel.prototype.filtersExistInChildren = function (tree) {\n    var _this = this;\n\n    return tree.some(function (child) {\n      if (child instanceof OriginalColumnGroup) {\n        return _this.filtersExistInChildren(child.getChildren());\n      }\n\n      return _this.shouldDisplayFilter(child);\n    });\n  };\n\n  FiltersToolPanelListPanel.prototype.shouldDisplayFilter = function (column) {\n    var suppressFiltersToolPanel = column.getColDef() && column.getColDef().suppressFiltersToolPanel;\n    return column.isFilterAllowed() && !suppressFiltersToolPanel;\n  }; // we don't support refreshing, but must implement because it's on the tool panel interface\n\n\n  FiltersToolPanelListPanel.prototype.refresh = function () {}; // lazy initialise the panel\n\n\n  FiltersToolPanelListPanel.prototype.setVisible = function (visible) {\n    _super.prototype.setDisplayed.call(this, visible);\n\n    if (visible && !this.initialised) {\n      this.init(this.params);\n    }\n  };\n\n  FiltersToolPanelListPanel.prototype.expandFilterGroups = function (expand, groupIds) {\n    var updatedGroupIds = [];\n\n    var updateGroupExpandState = function (filterGroup) {\n      var groupId = filterGroup.getFilterGroupId();\n\n      var shouldExpandOrCollapse = !groupIds || _.includes(groupIds, groupId);\n\n      if (shouldExpandOrCollapse) {\n        // don't expand 'column groups', i.e. top level columns wrapped in a group\n        if (expand && filterGroup.isColumnGroup()) {\n          filterGroup.expand();\n        } else {\n          filterGroup.collapse();\n        }\n\n        updatedGroupIds.push(groupId);\n      } // recursively look for more groups to expand / collapse\n\n\n      filterGroup.getChildren().forEach(function (child) {\n        if (child instanceof ToolPanelFilterGroupComp) {\n          updateGroupExpandState(child);\n        }\n      });\n    };\n\n    this.filterGroupComps.forEach(updateGroupExpandState); // update header expand / collapse icon\n\n    this.onGroupExpanded();\n\n    if (groupIds) {\n      var unrecognisedGroupIds = groupIds.filter(function (groupId) {\n        return updatedGroupIds.indexOf(groupId) < 0;\n      });\n\n      if (unrecognisedGroupIds.length > 0) {\n        console.warn('AG Grid: unable to find groups for these supplied groupIds:', unrecognisedGroupIds);\n      }\n    }\n  };\n\n  FiltersToolPanelListPanel.prototype.expandFilters = function (expand, colIds) {\n    var updatedColIds = [];\n\n    var updateGroupExpandState = function (filterComp) {\n      if (filterComp instanceof ToolPanelFilterGroupComp) {\n        var anyChildrenChanged_1 = false;\n        filterComp.getChildren().forEach(function (child) {\n          var childUpdated = updateGroupExpandState(child);\n\n          if (childUpdated) {\n            if (expand) {\n              filterComp.expand();\n              anyChildrenChanged_1 = true;\n            } else if (!filterComp.isColumnGroup()) {\n              // we only collapse columns wrapped in groups\n              filterComp.collapse();\n            }\n          }\n        });\n        return anyChildrenChanged_1;\n      }\n\n      var colId = filterComp.getColumn().getColId();\n\n      var updateFilterExpandState = !colIds || _.includes(colIds, colId);\n\n      if (updateFilterExpandState) {\n        expand ? filterComp.expand() : filterComp.collapse();\n        updatedColIds.push(colId);\n      }\n\n      return updateFilterExpandState;\n    };\n\n    this.filterGroupComps.forEach(updateGroupExpandState); // update header expand / collapse icon\n\n    this.onGroupExpanded();\n\n    if (colIds) {\n      var unrecognisedColIds = colIds.filter(function (colId) {\n        return updatedColIds.indexOf(colId) < 0;\n      });\n\n      if (unrecognisedColIds.length > 0) {\n        console.warn('AG Grid: unable to find columns for these supplied colIds:', unrecognisedColIds);\n      }\n    }\n  };\n\n  FiltersToolPanelListPanel.prototype.onGroupExpanded = function () {\n    this.fireExpandedEvent();\n  };\n\n  FiltersToolPanelListPanel.prototype.fireExpandedEvent = function () {\n    var expandedCount = 0;\n    var notExpandedCount = 0;\n\n    var updateExpandCounts = function (filterGroup) {\n      if (!filterGroup.isColumnGroup()) {\n        return;\n      }\n\n      filterGroup.isExpanded() ? expandedCount++ : notExpandedCount++;\n      filterGroup.getChildren().forEach(function (child) {\n        if (child instanceof ToolPanelFilterGroupComp) {\n          updateExpandCounts(child);\n        }\n      });\n    };\n\n    this.filterGroupComps.forEach(updateExpandCounts);\n    var state;\n\n    if (expandedCount > 0 && notExpandedCount > 0) {\n      state = EXPAND_STATE.INDETERMINATE;\n    } else if (notExpandedCount > 0) {\n      state = EXPAND_STATE.COLLAPSED;\n    } else {\n      state = EXPAND_STATE.EXPANDED;\n    }\n\n    this.dispatchEvent({\n      type: 'groupExpanded',\n      state: state\n    });\n  };\n\n  FiltersToolPanelListPanel.prototype.performFilterSearch = function (searchText) {\n    this.searchFilterText = _.exists(searchText) ? searchText.toLowerCase() : null;\n    this.searchFilters(this.searchFilterText);\n  };\n\n  FiltersToolPanelListPanel.prototype.searchFilters = function (searchFilter) {\n    var passesFilter = function (groupName) {\n      return !_.exists(searchFilter) || groupName.toLowerCase().indexOf(searchFilter) !== -1;\n    };\n\n    var recursivelySearch = function (filterItem, parentPasses) {\n      if (!(filterItem instanceof ToolPanelFilterGroupComp)) {\n        return passesFilter(filterItem.getColumnFilterName() || '');\n      }\n\n      var children = filterItem.getChildren();\n      var groupNamePasses = passesFilter(filterItem.getFilterGroupName()); // if group or parent already passed - ensure this group and all children are visible\n\n      var alreadyPassed = parentPasses || groupNamePasses;\n\n      if (alreadyPassed) {\n        // ensure group visible\n        filterItem.hideGroup(false); // ensure all children are visible\n\n        for (var i = 0; i < children.length; i++) {\n          recursivelySearch(children[i], alreadyPassed);\n          filterItem.hideGroupItem(false, i);\n        }\n\n        return true;\n      } // hide group item filters\n\n\n      var anyChildPasses = false;\n      children.forEach(function (child, index) {\n        var childPasses = recursivelySearch(child, parentPasses);\n        filterItem.hideGroupItem(!childPasses, index);\n\n        if (childPasses) {\n          anyChildPasses = true;\n        }\n      }); // hide group if no children pass\n\n      filterItem.hideGroup(!anyChildPasses);\n      return anyChildPasses;\n    };\n\n    var firstVisible;\n    var lastVisible;\n    this.filterGroupComps.forEach(function (filterGroup, idx) {\n      recursivelySearch(filterGroup, false);\n\n      if (firstVisible === undefined) {\n        if (!_.containsClass(filterGroup.getGui(), 'ag-hidden')) {\n          firstVisible = idx;\n          lastVisible = idx;\n        }\n      } else if (!_.containsClass(filterGroup.getGui(), 'ag-hidden') && lastVisible !== idx) {\n        lastVisible = idx;\n      }\n    });\n    this.setFirstAndLastVisible(firstVisible, lastVisible);\n  };\n\n  FiltersToolPanelListPanel.prototype.setFirstAndLastVisible = function (firstIdx, lastIdx) {\n    this.filterGroupComps.forEach(function (filterGroup, idx) {\n      _.removeCssClass(filterGroup.getGui(), 'ag-first-group-visible');\n\n      _.removeCssClass(filterGroup.getGui(), 'ag-last-group-visible');\n\n      if (idx === firstIdx) {\n        _.addCssClass(filterGroup.getGui(), 'ag-first-group-visible');\n      }\n\n      if (idx === lastIdx) {\n        _.addCssClass(filterGroup.getGui(), 'ag-last-group-visible');\n      }\n    });\n  };\n\n  FiltersToolPanelListPanel.prototype.refreshFilters = function () {\n    this.filterGroupComps.forEach(function (filterGroupComp) {\n      return filterGroupComp.refreshFilters();\n    });\n  };\n\n  FiltersToolPanelListPanel.prototype.destroyFilters = function () {\n    this.filterGroupComps = this.destroyBeans(this.filterGroupComps);\n\n    _.clearElement(this.getGui());\n  };\n\n  FiltersToolPanelListPanel.prototype.destroy = function () {\n    this.destroyFilters();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  FiltersToolPanelListPanel.TEMPLATE = \"<div class=\\\"ag-filter-list-panel\\\"></div>\";\n\n  __decorate([Autowired(\"gridApi\")], FiltersToolPanelListPanel.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired(\"columnApi\")], FiltersToolPanelListPanel.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('toolPanelColDefService')], FiltersToolPanelListPanel.prototype, \"toolPanelColDefService\", void 0);\n\n  __decorate([Autowired('columnModel')], FiltersToolPanelListPanel.prototype, \"columnModel\", void 0);\n\n  return FiltersToolPanelListPanel;\n}(Component);\n\nexport { FiltersToolPanelListPanel };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/filter-tool-panel/dist/es6/filterToolPanel/filtersToolPanelListPanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","Autowired","Component","Events","OriginalColumnGroup","ToolPanelFilterComp","ToolPanelFilterGroupComp","EXPAND_STATE","FiltersToolPanelListPanel","_super","_this","call","TEMPLATE","initialised","filterGroupComps","init","params","defaultParams","suppressExpandAll","suppressFilterSearch","suppressSyncLayoutWithGrid","api","gridApi","columnApi","mergeDeep","addManagedListener","eventService","EVENT_COLUMN_MOVED","onColumnsChanged","EVENT_NEW_COLUMNS_LOADED","EVENT_TOOL_PANEL_VISIBLE_CHANGED","event","source","refreshFilters","columnModel","isReady","pivotModeActive","isPivotMode","shouldSyncColumnLayoutWithGrid","syncFilterLayout","buildTreeFromProvidedColumnDefs","toolPanelColDefService","syncLayoutWithGrid","setFiltersLayout","bind","destroyFilters","columnTree","getPrimaryColumnTree","recursivelyAddComps","len","forEach","comp","appendChild","setFirstAndLastVisible","exists","searchFilterText","searchFilters","fireExpandedEvent","colDefs","createColumnTree","tree","depth","flatten","map","child","recursivelyAddFilterGroupComps","column","shouldDisplayFilter","hideFilterCompHeader","filterComp","getContext","createBean","setColumn","filterGroupComp","onGroupExpanded","addCssClassToTitleBar","collapse","columnGroup","filtersExistInChildren","getChildren","colGroupDef","getColGroupDef","suppressFiltersToolPanel","newDepth","isPadding","childFilterComps","some","getColDef","isFilterAllowed","refresh","setVisible","visible","setDisplayed","expandFilterGroups","expand","groupIds","updatedGroupIds","updateGroupExpandState","filterGroup","groupId","getFilterGroupId","shouldExpandOrCollapse","includes","isColumnGroup","push","unrecognisedGroupIds","filter","indexOf","console","warn","expandFilters","colIds","updatedColIds","anyChildrenChanged_1","childUpdated","colId","getColumn","getColId","updateFilterExpandState","unrecognisedColIds","expandedCount","notExpandedCount","updateExpandCounts","isExpanded","state","INDETERMINATE","COLLAPSED","EXPANDED","dispatchEvent","type","performFilterSearch","searchText","toLowerCase","searchFilter","passesFilter","groupName","recursivelySearch","filterItem","parentPasses","getColumnFilterName","children","groupNamePasses","getFilterGroupName","alreadyPassed","hideGroup","hideGroupItem","anyChildPasses","index","childPasses","firstVisible","lastVisible","idx","undefined","containsClass","getGui","firstIdx","lastIdx","removeCssClass","addCssClass","destroyBeans","clearElement","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Component, Events, OriginalColumnGroup } from \"@ag-grid-community/core\";\nimport { ToolPanelFilterComp } from \"./toolPanelFilterComp\";\nimport { ToolPanelFilterGroupComp } from \"./toolPanelFilterGroupComp\";\nimport { EXPAND_STATE } from \"./filtersToolPanelHeaderPanel\";\nvar FiltersToolPanelListPanel = /** @class */ (function (_super) {\n    __extends(FiltersToolPanelListPanel, _super);\n    function FiltersToolPanelListPanel() {\n        var _this = _super.call(this, FiltersToolPanelListPanel.TEMPLATE) || this;\n        _this.initialised = false;\n        _this.filterGroupComps = [];\n        return _this;\n    }\n    FiltersToolPanelListPanel.prototype.init = function (params) {\n        var _this = this;\n        this.initialised = true;\n        var defaultParams = {\n            suppressExpandAll: false,\n            suppressFilterSearch: false,\n            suppressSyncLayoutWithGrid: false,\n            api: this.gridApi,\n            columnApi: this.columnApi\n        };\n        _.mergeDeep(defaultParams, params);\n        this.params = defaultParams;\n        if (!this.params.suppressSyncLayoutWithGrid) {\n            this.addManagedListener(this.eventService, Events.EVENT_COLUMN_MOVED, function () { return _this.onColumnsChanged(); });\n        }\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, function () { return _this.onColumnsChanged(); });\n        this.addManagedListener(this.eventService, Events.EVENT_TOOL_PANEL_VISIBLE_CHANGED, function (event) {\n            // when re-entering the filters tool panel we need to refresh the virtual lists in the set filters in case\n            // filters have been changed elsewhere, i.e. via an api call.\n            if (event.source === 'filters') {\n                _this.refreshFilters();\n            }\n        });\n        if (this.columnModel.isReady()) {\n            this.onColumnsChanged();\n        }\n    };\n    FiltersToolPanelListPanel.prototype.onColumnsChanged = function () {\n        var pivotModeActive = this.columnModel.isPivotMode();\n        var shouldSyncColumnLayoutWithGrid = !this.params.suppressSyncLayoutWithGrid && !pivotModeActive;\n        shouldSyncColumnLayoutWithGrid ? this.syncFilterLayout() : this.buildTreeFromProvidedColumnDefs();\n    };\n    FiltersToolPanelListPanel.prototype.syncFilterLayout = function () {\n        this.toolPanelColDefService.syncLayoutWithGrid(this.setFiltersLayout.bind(this));\n    };\n    FiltersToolPanelListPanel.prototype.buildTreeFromProvidedColumnDefs = function () {\n        var _this = this;\n        this.destroyFilters();\n        var columnTree = this.columnModel.getPrimaryColumnTree();\n        this.filterGroupComps = this.recursivelyAddComps(columnTree, 0);\n        var len = this.filterGroupComps.length;\n        if (len) {\n            this.filterGroupComps.forEach(function (comp) { return _this.appendChild(comp); });\n            this.setFirstAndLastVisible(0, len - 1);\n        }\n        // perform search if searchFilterText exists\n        if (_.exists(this.searchFilterText)) {\n            this.searchFilters(this.searchFilterText);\n        }\n        // notify header of expand\n        this.fireExpandedEvent();\n    };\n    FiltersToolPanelListPanel.prototype.setFiltersLayout = function (colDefs) {\n        var _this = this;\n        this.destroyFilters();\n        var columnTree = this.toolPanelColDefService.createColumnTree(colDefs);\n        this.filterGroupComps = this.recursivelyAddComps(columnTree, 0);\n        var len = this.filterGroupComps.length;\n        if (len) {\n            this.filterGroupComps.forEach(function (comp) { return _this.appendChild(comp); });\n            this.setFirstAndLastVisible(0, len - 1);\n        }\n        // perform search if searchFilterText exists\n        if (_.exists(this.searchFilterText)) {\n            this.searchFilters(this.searchFilterText);\n        }\n        // notify header of expand\n        this.fireExpandedEvent();\n    };\n    FiltersToolPanelListPanel.prototype.recursivelyAddComps = function (tree, depth) {\n        var _this = this;\n        return _.flatten(tree.map(function (child) {\n            if (child instanceof OriginalColumnGroup) {\n                return _.flatten(_this.recursivelyAddFilterGroupComps(child, depth));\n            }\n            var column = child;\n            if (!_this.shouldDisplayFilter(column)) {\n                return [];\n            }\n            var hideFilterCompHeader = depth === 0;\n            var filterComp = new ToolPanelFilterComp(hideFilterCompHeader);\n            _this.getContext().createBean(filterComp);\n            filterComp.setColumn(column);\n            if (depth > 0) {\n                return filterComp;\n            }\n            var filterGroupComp = _this.createBean(new ToolPanelFilterGroupComp(column, [filterComp], _this.onGroupExpanded.bind(_this), depth, true));\n            filterGroupComp.addCssClassToTitleBar('ag-filter-toolpanel-header');\n            filterGroupComp.collapse();\n            return filterGroupComp;\n        }));\n    };\n    FiltersToolPanelListPanel.prototype.recursivelyAddFilterGroupComps = function (columnGroup, depth) {\n        if (!this.filtersExistInChildren(columnGroup.getChildren())) {\n            return;\n        }\n        var colGroupDef = columnGroup.getColGroupDef();\n        if (colGroupDef && colGroupDef.suppressFiltersToolPanel) {\n            return [];\n        }\n        var newDepth = columnGroup.isPadding() ? depth : depth + 1;\n        var childFilterComps = _.flatten(this.recursivelyAddComps(columnGroup.getChildren(), newDepth));\n        if (columnGroup.isPadding()) {\n            return childFilterComps;\n        }\n        var filterGroupComp = new ToolPanelFilterGroupComp(columnGroup, childFilterComps, this.onGroupExpanded.bind(this), depth, false);\n        this.getContext().createBean(filterGroupComp);\n        filterGroupComp.addCssClassToTitleBar('ag-filter-toolpanel-header');\n        return [filterGroupComp];\n    };\n    FiltersToolPanelListPanel.prototype.filtersExistInChildren = function (tree) {\n        var _this = this;\n        return tree.some(function (child) {\n            if (child instanceof OriginalColumnGroup) {\n                return _this.filtersExistInChildren(child.getChildren());\n            }\n            return _this.shouldDisplayFilter(child);\n        });\n    };\n    FiltersToolPanelListPanel.prototype.shouldDisplayFilter = function (column) {\n        var suppressFiltersToolPanel = column.getColDef() && column.getColDef().suppressFiltersToolPanel;\n        return column.isFilterAllowed() && !suppressFiltersToolPanel;\n    };\n    // we don't support refreshing, but must implement because it's on the tool panel interface\n    FiltersToolPanelListPanel.prototype.refresh = function () { };\n    // lazy initialise the panel\n    FiltersToolPanelListPanel.prototype.setVisible = function (visible) {\n        _super.prototype.setDisplayed.call(this, visible);\n        if (visible && !this.initialised) {\n            this.init(this.params);\n        }\n    };\n    FiltersToolPanelListPanel.prototype.expandFilterGroups = function (expand, groupIds) {\n        var updatedGroupIds = [];\n        var updateGroupExpandState = function (filterGroup) {\n            var groupId = filterGroup.getFilterGroupId();\n            var shouldExpandOrCollapse = !groupIds || _.includes(groupIds, groupId);\n            if (shouldExpandOrCollapse) {\n                // don't expand 'column groups', i.e. top level columns wrapped in a group\n                if (expand && filterGroup.isColumnGroup()) {\n                    filterGroup.expand();\n                }\n                else {\n                    filterGroup.collapse();\n                }\n                updatedGroupIds.push(groupId);\n            }\n            // recursively look for more groups to expand / collapse\n            filterGroup.getChildren().forEach(function (child) {\n                if (child instanceof ToolPanelFilterGroupComp) {\n                    updateGroupExpandState(child);\n                }\n            });\n        };\n        this.filterGroupComps.forEach(updateGroupExpandState);\n        // update header expand / collapse icon\n        this.onGroupExpanded();\n        if (groupIds) {\n            var unrecognisedGroupIds = groupIds.filter(function (groupId) { return updatedGroupIds.indexOf(groupId) < 0; });\n            if (unrecognisedGroupIds.length > 0) {\n                console.warn('AG Grid: unable to find groups for these supplied groupIds:', unrecognisedGroupIds);\n            }\n        }\n    };\n    FiltersToolPanelListPanel.prototype.expandFilters = function (expand, colIds) {\n        var updatedColIds = [];\n        var updateGroupExpandState = function (filterComp) {\n            if (filterComp instanceof ToolPanelFilterGroupComp) {\n                var anyChildrenChanged_1 = false;\n                filterComp.getChildren().forEach(function (child) {\n                    var childUpdated = updateGroupExpandState(child);\n                    if (childUpdated) {\n                        if (expand) {\n                            filterComp.expand();\n                            anyChildrenChanged_1 = true;\n                        }\n                        else if (!filterComp.isColumnGroup()) {\n                            // we only collapse columns wrapped in groups\n                            filterComp.collapse();\n                        }\n                    }\n                });\n                return anyChildrenChanged_1;\n            }\n            var colId = filterComp.getColumn().getColId();\n            var updateFilterExpandState = !colIds || _.includes(colIds, colId);\n            if (updateFilterExpandState) {\n                expand ? filterComp.expand() : filterComp.collapse();\n                updatedColIds.push(colId);\n            }\n            return updateFilterExpandState;\n        };\n        this.filterGroupComps.forEach(updateGroupExpandState);\n        // update header expand / collapse icon\n        this.onGroupExpanded();\n        if (colIds) {\n            var unrecognisedColIds = colIds.filter(function (colId) { return updatedColIds.indexOf(colId) < 0; });\n            if (unrecognisedColIds.length > 0) {\n                console.warn('AG Grid: unable to find columns for these supplied colIds:', unrecognisedColIds);\n            }\n        }\n    };\n    FiltersToolPanelListPanel.prototype.onGroupExpanded = function () {\n        this.fireExpandedEvent();\n    };\n    FiltersToolPanelListPanel.prototype.fireExpandedEvent = function () {\n        var expandedCount = 0;\n        var notExpandedCount = 0;\n        var updateExpandCounts = function (filterGroup) {\n            if (!filterGroup.isColumnGroup()) {\n                return;\n            }\n            filterGroup.isExpanded() ? expandedCount++ : notExpandedCount++;\n            filterGroup.getChildren().forEach(function (child) {\n                if (child instanceof ToolPanelFilterGroupComp) {\n                    updateExpandCounts(child);\n                }\n            });\n        };\n        this.filterGroupComps.forEach(updateExpandCounts);\n        var state;\n        if (expandedCount > 0 && notExpandedCount > 0) {\n            state = EXPAND_STATE.INDETERMINATE;\n        }\n        else if (notExpandedCount > 0) {\n            state = EXPAND_STATE.COLLAPSED;\n        }\n        else {\n            state = EXPAND_STATE.EXPANDED;\n        }\n        this.dispatchEvent({ type: 'groupExpanded', state: state });\n    };\n    FiltersToolPanelListPanel.prototype.performFilterSearch = function (searchText) {\n        this.searchFilterText = _.exists(searchText) ? searchText.toLowerCase() : null;\n        this.searchFilters(this.searchFilterText);\n    };\n    FiltersToolPanelListPanel.prototype.searchFilters = function (searchFilter) {\n        var passesFilter = function (groupName) {\n            return !_.exists(searchFilter) || groupName.toLowerCase().indexOf(searchFilter) !== -1;\n        };\n        var recursivelySearch = function (filterItem, parentPasses) {\n            if (!(filterItem instanceof ToolPanelFilterGroupComp)) {\n                return passesFilter(filterItem.getColumnFilterName() || '');\n            }\n            var children = filterItem.getChildren();\n            var groupNamePasses = passesFilter(filterItem.getFilterGroupName());\n            // if group or parent already passed - ensure this group and all children are visible\n            var alreadyPassed = parentPasses || groupNamePasses;\n            if (alreadyPassed) {\n                // ensure group visible\n                filterItem.hideGroup(false);\n                // ensure all children are visible\n                for (var i = 0; i < children.length; i++) {\n                    recursivelySearch(children[i], alreadyPassed);\n                    filterItem.hideGroupItem(false, i);\n                }\n                return true;\n            }\n            // hide group item filters\n            var anyChildPasses = false;\n            children.forEach(function (child, index) {\n                var childPasses = recursivelySearch(child, parentPasses);\n                filterItem.hideGroupItem(!childPasses, index);\n                if (childPasses) {\n                    anyChildPasses = true;\n                }\n            });\n            // hide group if no children pass\n            filterItem.hideGroup(!anyChildPasses);\n            return anyChildPasses;\n        };\n        var firstVisible;\n        var lastVisible;\n        this.filterGroupComps.forEach(function (filterGroup, idx) {\n            recursivelySearch(filterGroup, false);\n            if (firstVisible === undefined) {\n                if (!_.containsClass(filterGroup.getGui(), 'ag-hidden')) {\n                    firstVisible = idx;\n                    lastVisible = idx;\n                }\n            }\n            else if (!_.containsClass(filterGroup.getGui(), 'ag-hidden') && lastVisible !== idx) {\n                lastVisible = idx;\n            }\n        });\n        this.setFirstAndLastVisible(firstVisible, lastVisible);\n    };\n    FiltersToolPanelListPanel.prototype.setFirstAndLastVisible = function (firstIdx, lastIdx) {\n        this.filterGroupComps.forEach(function (filterGroup, idx) {\n            _.removeCssClass(filterGroup.getGui(), 'ag-first-group-visible');\n            _.removeCssClass(filterGroup.getGui(), 'ag-last-group-visible');\n            if (idx === firstIdx) {\n                _.addCssClass(filterGroup.getGui(), 'ag-first-group-visible');\n            }\n            if (idx === lastIdx) {\n                _.addCssClass(filterGroup.getGui(), 'ag-last-group-visible');\n            }\n        });\n    };\n    FiltersToolPanelListPanel.prototype.refreshFilters = function () {\n        this.filterGroupComps.forEach(function (filterGroupComp) { return filterGroupComp.refreshFilters(); });\n    };\n    FiltersToolPanelListPanel.prototype.destroyFilters = function () {\n        this.filterGroupComps = this.destroyBeans(this.filterGroupComps);\n        _.clearElement(this.getGui());\n    };\n    FiltersToolPanelListPanel.prototype.destroy = function () {\n        this.destroyFilters();\n        _super.prototype.destroy.call(this);\n    };\n    FiltersToolPanelListPanel.TEMPLATE = \"<div class=\\\"ag-filter-list-panel\\\"></div>\";\n    __decorate([\n        Autowired(\"gridApi\")\n    ], FiltersToolPanelListPanel.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired(\"columnApi\")\n    ], FiltersToolPanelListPanel.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('toolPanelColDefService')\n    ], FiltersToolPanelListPanel.prototype, \"toolPanelColDefService\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], FiltersToolPanelListPanel.prototype, \"columnModel\", void 0);\n    return FiltersToolPanelListPanel;\n}(Component));\nexport { FiltersToolPanelListPanel };\n"]},"metadata":{},"sourceType":"module"}