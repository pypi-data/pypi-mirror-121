{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { HeaderRowComp, HeaderRowType } from './headerRowComp';\nimport { BodyDropTarget } from './bodyDropTarget';\nimport { Constants } from '../constants/constants';\nimport { setFixedWidth, ensureDomOrder } from '../utils/dom';\nimport { BeanStub } from \"../context/beanStub\";\nimport { NumberSequence } from \"../utils\";\n\nvar HeaderContainer = function (_super) {\n  __extends(HeaderContainer, _super);\n\n  function HeaderContainer(eContainer, eViewport, pinned) {\n    var _this = _super.call(this) || this;\n\n    _this.groupsRowComps = [];\n    _this.eContainer = eContainer;\n    _this.pinned = pinned;\n    _this.eViewport = eViewport;\n    return _this;\n  }\n\n  HeaderContainer.prototype.forEachHeaderElement = function (callback) {\n    if (this.groupsRowComps) {\n      this.groupsRowComps.forEach(function (c) {\n        return c.forEachHeaderElement(callback);\n      });\n    }\n\n    if (this.columnsRowComp) {\n      this.columnsRowComp.forEachHeaderElement(callback);\n    }\n\n    if (this.filtersRowComp) {\n      this.filtersRowComp.forEachHeaderElement(callback);\n    }\n  };\n\n  HeaderContainer.prototype.init = function () {\n    // if value changes, then if not pivoting, we at least need to change the label eg from sum() to avg(),\n    // if pivoting, then the columns have changed\n    this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_SCROLLBAR_WIDTH_CHANGED, this.onScrollbarWidthChanged.bind(this));\n    this.setupDragAndDrop();\n  };\n\n  HeaderContainer.prototype.onColumnResized = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.onDisplayedColumnsChanged = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.onScrollVisibilityChanged = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.onScrollbarWidthChanged = function () {\n    this.setWidthOfPinnedContainer();\n  };\n\n  HeaderContainer.prototype.setWidthOfPinnedContainer = function () {\n    var pinningLeft = this.pinned === Constants.PINNED_LEFT;\n    var pinningRight = this.pinned === Constants.PINNED_RIGHT;\n    var controller = this.columnModel;\n    var isRtl = this.gridOptionsWrapper.isEnableRtl();\n    var scrollbarWidth = this.gridOptionsWrapper.getScrollbarWidth();\n\n    if (pinningLeft || pinningRight) {\n      // size to fit all columns\n      var width = controller[pinningLeft ? 'getDisplayedColumnsLeftWidth' : 'getDisplayedColumnsRightWidth'](); // if there is a scroll showing (and taking up space, so Windows, and not iOS)\n      // in the body, then we add extra space to keep header aligned with the body,\n      // as body width fits the cols and the scrollbar\n\n      var addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && (isRtl && pinningLeft || !isRtl && pinningRight);\n\n      if (addPaddingForScrollbar) {\n        width += scrollbarWidth;\n      }\n\n      setFixedWidth(this.eContainer, width);\n    }\n  };\n\n  HeaderContainer.prototype.getRowComps = function () {\n    var res = [];\n\n    if (this.groupsRowComps) {\n      res = res.concat(this.groupsRowComps);\n    }\n\n    if (this.columnsRowComp) {\n      res.push(this.columnsRowComp);\n    }\n\n    if (this.filtersRowComp) {\n      res.push(this.filtersRowComp);\n    }\n\n    return res;\n  }; // grid cols have changed - this also means the number of rows in the header can have\n  // changed. so we remove all the old rows and insert new ones for a complete refresh\n\n\n  HeaderContainer.prototype.onGridColumnsChanged = function () {\n    this.refresh(true);\n  }; // we expose this for gridOptions.api.refreshHeader() to call\n\n\n  HeaderContainer.prototype.refresh = function (keepColumns) {\n    if (keepColumns === void 0) {\n      keepColumns = false;\n    }\n\n    this.refreshRowComps(keepColumns);\n  };\n\n  HeaderContainer.prototype.setupDragAndDrop = function () {\n    // center section has viewport, but pinned sections do not\n    var dropContainer = this.eViewport ? this.eViewport : this.eContainer;\n    var bodyDropTarget = new BodyDropTarget(this.pinned, dropContainer);\n    this.createManagedBean(bodyDropTarget);\n  };\n\n  HeaderContainer.prototype.destroyRowComps = function (keepColumns) {\n    if (keepColumns === void 0) {\n      keepColumns = false;\n    }\n\n    this.groupsRowComps.forEach(this.destroyRowComp.bind(this));\n    this.groupsRowComps = [];\n    this.destroyRowComp(this.filtersRowComp);\n    this.filtersRowComp = undefined;\n\n    if (!keepColumns) {\n      this.destroyRowComp(this.columnsRowComp);\n      this.columnsRowComp = undefined;\n    }\n  };\n\n  HeaderContainer.prototype.destroyRowComp = function (rowComp) {\n    if (rowComp) {\n      this.destroyBean(rowComp);\n      this.eContainer.removeChild(rowComp.getGui());\n    }\n  };\n\n  HeaderContainer.prototype.refreshRowComps = function (keepColumns) {\n    var _this = this;\n\n    if (keepColumns === void 0) {\n      keepColumns = false;\n    }\n\n    var sequence = new NumberSequence();\n\n    var refreshColumnGroups = function refreshColumnGroups() {\n      var groupRowCount = _this.columnModel.getHeaderRowCount() - 1;\n\n      _this.groupsRowComps.forEach(_this.destroyRowComp.bind(_this));\n\n      _this.groupsRowComps = [];\n\n      for (var i = 0; i < groupRowCount; i++) {\n        var rowComp = _this.createBean(new HeaderRowComp(sequence.next(), HeaderRowType.COLUMN_GROUP, _this.pinned));\n\n        _this.groupsRowComps.push(rowComp);\n      }\n    };\n\n    var refreshColumns = function refreshColumns() {\n      var rowIndex = sequence.next();\n\n      if (_this.columnsRowComp) {\n        var rowIndexMismatch = _this.columnsRowComp.getRowIndex() !== rowIndex;\n\n        if (!keepColumns || rowIndexMismatch) {\n          _this.destroyRowComp(_this.columnsRowComp);\n\n          _this.columnsRowComp = undefined;\n        }\n      }\n\n      if (!_this.columnsRowComp) {\n        _this.columnsRowComp = _this.createBean(new HeaderRowComp(rowIndex, HeaderRowType.COLUMN, _this.pinned));\n      }\n    };\n\n    var refreshFilters = function refreshFilters() {\n      var includeFloatingFilter = !_this.columnModel.isPivotMode() && _this.columnModel.hasFloatingFilters();\n\n      var destroyPreviousComp = function destroyPreviousComp() {\n        _this.destroyRowComp(_this.filtersRowComp);\n\n        _this.filtersRowComp = undefined;\n      };\n\n      if (!includeFloatingFilter) {\n        destroyPreviousComp();\n        return;\n      }\n\n      var rowIndex = sequence.next();\n\n      if (_this.filtersRowComp) {\n        var rowIndexMismatch = _this.filtersRowComp.getRowIndex() !== rowIndex;\n\n        if (!keepColumns || rowIndexMismatch) {\n          destroyPreviousComp();\n        }\n      }\n\n      if (!_this.filtersRowComp) {\n        _this.filtersRowComp = _this.createBean(new HeaderRowComp(rowIndex, HeaderRowType.FLOATING_FILTER, _this.pinned));\n      }\n    };\n\n    refreshColumnGroups();\n    refreshColumns();\n    refreshFilters(); // add in all the eGui's. if the gui is already in, don't re-add it. however we do check for order\n    // so that if use adds a row of column headers, they get added in right location (before the columns)\n\n    var eGuis = this.getRowComps().map(function (c) {\n      return c.getGui();\n    });\n    var prevGui;\n    eGuis.forEach(function (eGui) {\n      var notAlreadyIn = eGui.parentElement != _this.eContainer;\n\n      if (notAlreadyIn) {\n        _this.eContainer.appendChild(eGui);\n      }\n\n      if (prevGui) {\n        ensureDomOrder(_this.eContainer, eGui, prevGui);\n      }\n\n      prevGui = eGui;\n    });\n  };\n\n  __decorate([Autowired('columnModel')], HeaderContainer.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('scrollVisibleService')], HeaderContainer.prototype, \"scrollVisibleService\", void 0);\n\n  __decorate([PostConstruct], HeaderContainer.prototype, \"init\", null);\n\n  __decorate([PreDestroy], HeaderContainer.prototype, \"destroyRowComps\", null);\n\n  return HeaderContainer;\n}(BeanStub);\n\nexport { HeaderContainer };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-community/core/dist/es6/headerRendering/headerContainer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","PostConstruct","PreDestroy","Events","HeaderRowComp","HeaderRowType","BodyDropTarget","Constants","setFixedWidth","ensureDomOrder","BeanStub","NumberSequence","HeaderContainer","_super","eContainer","eViewport","pinned","_this","call","groupsRowComps","forEachHeaderElement","callback","forEach","columnsRowComp","filtersRowComp","init","addManagedListener","eventService","EVENT_GRID_COLUMNS_CHANGED","onGridColumnsChanged","bind","EVENT_SCROLL_VISIBILITY_CHANGED","onScrollVisibilityChanged","EVENT_COLUMN_RESIZED","onColumnResized","EVENT_DISPLAYED_COLUMNS_CHANGED","onDisplayedColumnsChanged","EVENT_SCROLLBAR_WIDTH_CHANGED","onScrollbarWidthChanged","setupDragAndDrop","setWidthOfPinnedContainer","pinningLeft","PINNED_LEFT","pinningRight","PINNED_RIGHT","controller","columnModel","isRtl","gridOptionsWrapper","isEnableRtl","scrollbarWidth","getScrollbarWidth","width","addPaddingForScrollbar","scrollVisibleService","isVerticalScrollShowing","getRowComps","res","concat","push","refresh","keepColumns","refreshRowComps","dropContainer","bodyDropTarget","createManagedBean","destroyRowComps","destroyRowComp","undefined","rowComp","destroyBean","removeChild","getGui","sequence","refreshColumnGroups","groupRowCount","getHeaderRowCount","createBean","next","COLUMN_GROUP","refreshColumns","rowIndex","rowIndexMismatch","getRowIndex","COLUMN","refreshFilters","includeFloatingFilter","isPivotMode","hasFloatingFilters","destroyPreviousComp","FLOATING_FILTER","eGuis","map","prevGui","eGui","notAlreadyIn","parentElement","appendChild"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, PostConstruct, PreDestroy } from '../context/context';\nimport { Events } from '../events';\nimport { HeaderRowComp, HeaderRowType } from './headerRowComp';\nimport { BodyDropTarget } from './bodyDropTarget';\nimport { Constants } from '../constants/constants';\nimport { setFixedWidth, ensureDomOrder } from '../utils/dom';\nimport { BeanStub } from \"../context/beanStub\";\nimport { NumberSequence } from \"../utils\";\nvar HeaderContainer = /** @class */ (function (_super) {\n    __extends(HeaderContainer, _super);\n    function HeaderContainer(eContainer, eViewport, pinned) {\n        var _this = _super.call(this) || this;\n        _this.groupsRowComps = [];\n        _this.eContainer = eContainer;\n        _this.pinned = pinned;\n        _this.eViewport = eViewport;\n        return _this;\n    }\n    HeaderContainer.prototype.forEachHeaderElement = function (callback) {\n        if (this.groupsRowComps) {\n            this.groupsRowComps.forEach(function (c) { return c.forEachHeaderElement(callback); });\n        }\n        if (this.columnsRowComp) {\n            this.columnsRowComp.forEachHeaderElement(callback);\n        }\n        if (this.filtersRowComp) {\n            this.filtersRowComp.forEachHeaderElement(callback);\n        }\n    };\n    HeaderContainer.prototype.init = function () {\n        // if value changes, then if not pivoting, we at least need to change the label eg from sum() to avg(),\n        // if pivoting, then the columns have changed\n        this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_SCROLLBAR_WIDTH_CHANGED, this.onScrollbarWidthChanged.bind(this));\n        this.setupDragAndDrop();\n    };\n    HeaderContainer.prototype.onColumnResized = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onDisplayedColumnsChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onScrollVisibilityChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.onScrollbarWidthChanged = function () {\n        this.setWidthOfPinnedContainer();\n    };\n    HeaderContainer.prototype.setWidthOfPinnedContainer = function () {\n        var pinningLeft = this.pinned === Constants.PINNED_LEFT;\n        var pinningRight = this.pinned === Constants.PINNED_RIGHT;\n        var controller = this.columnModel;\n        var isRtl = this.gridOptionsWrapper.isEnableRtl();\n        var scrollbarWidth = this.gridOptionsWrapper.getScrollbarWidth();\n        if (pinningLeft || pinningRight) {\n            // size to fit all columns\n            var width = controller[pinningLeft ? 'getDisplayedColumnsLeftWidth' : 'getDisplayedColumnsRightWidth']();\n            // if there is a scroll showing (and taking up space, so Windows, and not iOS)\n            // in the body, then we add extra space to keep header aligned with the body,\n            // as body width fits the cols and the scrollbar\n            var addPaddingForScrollbar = this.scrollVisibleService.isVerticalScrollShowing() && ((isRtl && pinningLeft) || (!isRtl && pinningRight));\n            if (addPaddingForScrollbar) {\n                width += scrollbarWidth;\n            }\n            setFixedWidth(this.eContainer, width);\n        }\n    };\n    HeaderContainer.prototype.getRowComps = function () {\n        var res = [];\n        if (this.groupsRowComps) {\n            res = res.concat(this.groupsRowComps);\n        }\n        if (this.columnsRowComp) {\n            res.push(this.columnsRowComp);\n        }\n        if (this.filtersRowComp) {\n            res.push(this.filtersRowComp);\n        }\n        return res;\n    };\n    // grid cols have changed - this also means the number of rows in the header can have\n    // changed. so we remove all the old rows and insert new ones for a complete refresh\n    HeaderContainer.prototype.onGridColumnsChanged = function () {\n        this.refresh(true);\n    };\n    // we expose this for gridOptions.api.refreshHeader() to call\n    HeaderContainer.prototype.refresh = function (keepColumns) {\n        if (keepColumns === void 0) { keepColumns = false; }\n        this.refreshRowComps(keepColumns);\n    };\n    HeaderContainer.prototype.setupDragAndDrop = function () {\n        // center section has viewport, but pinned sections do not\n        var dropContainer = this.eViewport ? this.eViewport : this.eContainer;\n        var bodyDropTarget = new BodyDropTarget(this.pinned, dropContainer);\n        this.createManagedBean(bodyDropTarget);\n    };\n    HeaderContainer.prototype.destroyRowComps = function (keepColumns) {\n        if (keepColumns === void 0) { keepColumns = false; }\n        this.groupsRowComps.forEach(this.destroyRowComp.bind(this));\n        this.groupsRowComps = [];\n        this.destroyRowComp(this.filtersRowComp);\n        this.filtersRowComp = undefined;\n        if (!keepColumns) {\n            this.destroyRowComp(this.columnsRowComp);\n            this.columnsRowComp = undefined;\n        }\n    };\n    HeaderContainer.prototype.destroyRowComp = function (rowComp) {\n        if (rowComp) {\n            this.destroyBean(rowComp);\n            this.eContainer.removeChild(rowComp.getGui());\n        }\n    };\n    HeaderContainer.prototype.refreshRowComps = function (keepColumns) {\n        var _this = this;\n        if (keepColumns === void 0) { keepColumns = false; }\n        var sequence = new NumberSequence();\n        var refreshColumnGroups = function () {\n            var groupRowCount = _this.columnModel.getHeaderRowCount() - 1;\n            _this.groupsRowComps.forEach(_this.destroyRowComp.bind(_this));\n            _this.groupsRowComps = [];\n            for (var i = 0; i < groupRowCount; i++) {\n                var rowComp = _this.createBean(new HeaderRowComp(sequence.next(), HeaderRowType.COLUMN_GROUP, _this.pinned));\n                _this.groupsRowComps.push(rowComp);\n            }\n        };\n        var refreshColumns = function () {\n            var rowIndex = sequence.next();\n            if (_this.columnsRowComp) {\n                var rowIndexMismatch = _this.columnsRowComp.getRowIndex() !== rowIndex;\n                if (!keepColumns || rowIndexMismatch) {\n                    _this.destroyRowComp(_this.columnsRowComp);\n                    _this.columnsRowComp = undefined;\n                }\n            }\n            if (!_this.columnsRowComp) {\n                _this.columnsRowComp = _this.createBean(new HeaderRowComp(rowIndex, HeaderRowType.COLUMN, _this.pinned));\n            }\n        };\n        var refreshFilters = function () {\n            var includeFloatingFilter = !_this.columnModel.isPivotMode() && _this.columnModel.hasFloatingFilters();\n            var destroyPreviousComp = function () {\n                _this.destroyRowComp(_this.filtersRowComp);\n                _this.filtersRowComp = undefined;\n            };\n            if (!includeFloatingFilter) {\n                destroyPreviousComp();\n                return;\n            }\n            var rowIndex = sequence.next();\n            if (_this.filtersRowComp) {\n                var rowIndexMismatch = _this.filtersRowComp.getRowIndex() !== rowIndex;\n                if (!keepColumns || rowIndexMismatch) {\n                    destroyPreviousComp();\n                }\n            }\n            if (!_this.filtersRowComp) {\n                _this.filtersRowComp = _this.createBean(new HeaderRowComp(rowIndex, HeaderRowType.FLOATING_FILTER, _this.pinned));\n            }\n        };\n        refreshColumnGroups();\n        refreshColumns();\n        refreshFilters();\n        // add in all the eGui's. if the gui is already in, don't re-add it. however we do check for order\n        // so that if use adds a row of column headers, they get added in right location (before the columns)\n        var eGuis = this.getRowComps().map(function (c) { return c.getGui(); });\n        var prevGui;\n        eGuis.forEach(function (eGui) {\n            var notAlreadyIn = eGui.parentElement != _this.eContainer;\n            if (notAlreadyIn) {\n                _this.eContainer.appendChild(eGui);\n            }\n            if (prevGui) {\n                ensureDomOrder(_this.eContainer, eGui, prevGui);\n            }\n            prevGui = eGui;\n        });\n    };\n    __decorate([\n        Autowired('columnModel')\n    ], HeaderContainer.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('scrollVisibleService')\n    ], HeaderContainer.prototype, \"scrollVisibleService\", void 0);\n    __decorate([\n        PostConstruct\n    ], HeaderContainer.prototype, \"init\", null);\n    __decorate([\n        PreDestroy\n    ], HeaderContainer.prototype, \"destroyRowComps\", null);\n    return HeaderContainer;\n}(BeanStub));\nexport { HeaderContainer };\n"]},"metadata":{},"sourceType":"module"}