{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { AgChart } from \"ag-charts-community\";\nimport { CartesianChartProxy } from \"./cartesianChartProxy\";\n\nvar LineChartProxy = function (_super) {\n  __extends(LineChartProxy, _super);\n\n  function LineChartProxy(params) {\n    var _this = _super.call(this, params) || this;\n\n    _this.initChartOptions();\n\n    _this.recreateChart();\n\n    return _this;\n  }\n\n  LineChartProxy.prototype.createChart = function () {\n    var _a = this.chartProxyParams,\n        grouping = _a.grouping,\n        parentElement = _a.parentElement;\n    var options = this.iChartOptions;\n    var agChartOptions = options;\n    agChartOptions.autoSize = true;\n    var xAxisType = options.xAxis.type ? options.xAxis.type : 'category';\n\n    if (grouping) {\n      agChartOptions.type = 'groupedCategory';\n    }\n\n    agChartOptions.axes = [__assign({\n      type: grouping ? 'groupedCategory' : xAxisType,\n      position: 'bottom'\n    }, this.getXAxisDefaults(xAxisType, options)), __assign({\n      type: 'number',\n      position: 'left'\n    }, options.yAxis)];\n    return AgChart.create(agChartOptions, parentElement);\n  };\n\n  LineChartProxy.prototype.update = function (params) {\n    var _this = this;\n\n    this.chartProxyParams.grouping = params.grouping;\n\n    if (params.fields.length === 0) {\n      this.chart.removeAllSeries();\n      return;\n    }\n\n    var axisType = this.isTimeAxis(params) ? 'time' : 'category';\n    this.updateAxes(axisType);\n    var chart = this.chart;\n    var fields = params.fields;\n    var fieldIds = fields.map(function (f) {\n      return f.colId;\n    });\n    var data = this.transformData(params.data, params.category.id);\n    var existingSeriesById = chart.series.reduceRight(function (map, series, i) {\n      var id = series.yKey;\n\n      if (fieldIds.indexOf(id) === i) {\n        map.set(id, series);\n      } else {\n        chart.removeSeries(series);\n      }\n\n      return map;\n    }, new Map());\n    var previousSeries;\n\n    var _a = this.getPalette(),\n        fills = _a.fills,\n        strokes = _a.strokes;\n\n    fields.forEach(function (f, index) {\n      var _a = _this.processDataForCrossFiltering(data, f.colId, params),\n          yKey = _a.yKey,\n          atLeastOneSelectedPoint = _a.atLeastOneSelectedPoint;\n\n      var lineSeries = existingSeriesById.get(f.colId);\n      var fill = fills[index % fills.length];\n      var stroke = strokes[index % strokes.length];\n\n      if (lineSeries) {\n        lineSeries.title = f.displayName;\n        lineSeries.data = data;\n        lineSeries.xKey = params.category.id;\n        lineSeries.xName = params.category.name;\n        lineSeries.yKey = yKey;\n        lineSeries.yName = f.displayName;\n        lineSeries.marker.fill = fill;\n        lineSeries.marker.stroke = stroke;\n        lineSeries.stroke = fill; // this is deliberate, so that the line colours match the fills of other series\n      } else {\n        var seriesDefaults = _this.iChartOptions.seriesDefaults;\n\n        var marker = __assign(__assign({}, seriesDefaults.marker), {\n          fill: fill,\n          stroke: stroke\n        });\n\n        if (marker.type) {\n          // deprecated\n          marker.shape = marker.type;\n          delete marker.type;\n        }\n\n        var options = __assign(__assign({}, seriesDefaults), {\n          type: 'line',\n          title: f.displayName,\n          data: data,\n          xKey: params.category.id,\n          xName: params.category.name,\n          yKey: yKey,\n          yName: f.displayName,\n          fill: fill,\n          stroke: fill,\n          fillOpacity: seriesDefaults.fill.opacity,\n          strokeOpacity: seriesDefaults.stroke.opacity,\n          strokeWidth: seriesDefaults.stroke.width,\n          tooltip: {\n            enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n            renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled && seriesDefaults.tooltip.renderer\n          },\n          marker: marker\n        });\n\n        lineSeries = AgChart.createComponent(options, 'line.series');\n        chart.addSeriesAfter(lineSeries, previousSeries);\n      }\n\n      _this.updateSeriesForCrossFiltering(lineSeries, f.colId, chart, params, atLeastOneSelectedPoint);\n\n      previousSeries = lineSeries;\n    });\n    this.updateLabelRotation(params.category.id, false, axisType);\n  };\n\n  LineChartProxy.prototype.extractIChartOptionsFromTheme = function (theme) {\n    var options = _super.prototype.extractIChartOptionsFromTheme.call(this, theme);\n\n    var seriesDefaults = theme.getConfig('line.series.line');\n    options.seriesDefaults = {\n      tooltip: {\n        enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n        renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.renderer\n      },\n      fill: {\n        colors: [],\n        opacity: 1\n      },\n      stroke: {\n        colors: seriesDefaults.stroke && [seriesDefaults.stroke] || theme.palette.strokes,\n        opacity: seriesDefaults.strokeOpacity,\n        width: seriesDefaults.strokeWidth\n      },\n      label: seriesDefaults.label,\n      marker: {\n        enabled: seriesDefaults.marker.enabled,\n        shape: seriesDefaults.marker.shape,\n        size: seriesDefaults.marker.size,\n        strokeWidth: seriesDefaults.marker.strokeWidth,\n        formatter: seriesDefaults.marker.formatter\n      },\n      lineDash: seriesDefaults.lineDash ? seriesDefaults.lineDash : [0],\n      lineDashOffset: seriesDefaults.lineDashOffset,\n      highlightStyle: seriesDefaults.highlightStyle,\n      listeners: seriesDefaults.listeners\n    };\n    return options;\n  };\n\n  LineChartProxy.prototype.getDefaultOptions = function () {\n    var options = this.getDefaultCartesianChartOptions();\n    options.xAxis.label.rotation = 335;\n    options.seriesDefaults = __assign(__assign({}, options.seriesDefaults), {\n      stroke: __assign(__assign({}, options.seriesDefaults.stroke), {\n        width: 3\n      }),\n      marker: {\n        enabled: true,\n        shape: 'circle',\n        size: 6,\n        strokeWidth: 1\n      },\n      tooltip: {\n        enabled: true\n      }\n    });\n    return options;\n  };\n\n  return LineChartProxy;\n}(CartesianChartProxy);\n\nexport { LineChartProxy };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/charts/dist/es6/charts/chartComp/chartProxies/cartesian/lineChartProxy.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","AgChart","CartesianChartProxy","LineChartProxy","_super","params","_this","initChartOptions","recreateChart","createChart","_a","chartProxyParams","grouping","parentElement","options","iChartOptions","agChartOptions","autoSize","xAxisType","xAxis","type","axes","position","getXAxisDefaults","yAxis","update","fields","chart","removeAllSeries","axisType","isTimeAxis","updateAxes","fieldIds","map","f","colId","data","transformData","category","id","existingSeriesById","series","reduceRight","yKey","indexOf","set","removeSeries","Map","previousSeries","getPalette","fills","strokes","forEach","index","processDataForCrossFiltering","atLeastOneSelectedPoint","lineSeries","get","fill","stroke","title","displayName","xKey","xName","name","yName","marker","seriesDefaults","shape","fillOpacity","opacity","strokeOpacity","strokeWidth","width","tooltip","enabled","renderer","createComponent","addSeriesAfter","updateSeriesForCrossFiltering","updateLabelRotation","extractIChartOptionsFromTheme","theme","getConfig","colors","palette","label","size","formatter","lineDash","lineDashOffset","highlightStyle","listeners","getDefaultOptions","getDefaultCartesianChartOptions","rotation"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { AgChart, } from \"ag-charts-community\";\nimport { CartesianChartProxy } from \"./cartesianChartProxy\";\nvar LineChartProxy = /** @class */ (function (_super) {\n    __extends(LineChartProxy, _super);\n    function LineChartProxy(params) {\n        var _this = _super.call(this, params) || this;\n        _this.initChartOptions();\n        _this.recreateChart();\n        return _this;\n    }\n    LineChartProxy.prototype.createChart = function () {\n        var _a = this.chartProxyParams, grouping = _a.grouping, parentElement = _a.parentElement;\n        var options = this.iChartOptions;\n        var agChartOptions = options;\n        agChartOptions.autoSize = true;\n        var xAxisType = options.xAxis.type ? options.xAxis.type : 'category';\n        if (grouping) {\n            agChartOptions.type = 'groupedCategory';\n        }\n        agChartOptions.axes = [__assign({ type: grouping ? 'groupedCategory' : xAxisType, position: 'bottom' }, this.getXAxisDefaults(xAxisType, options)), __assign({ type: 'number', position: 'left' }, options.yAxis)];\n        return AgChart.create(agChartOptions, parentElement);\n    };\n    LineChartProxy.prototype.update = function (params) {\n        var _this = this;\n        this.chartProxyParams.grouping = params.grouping;\n        if (params.fields.length === 0) {\n            this.chart.removeAllSeries();\n            return;\n        }\n        var axisType = this.isTimeAxis(params) ? 'time' : 'category';\n        this.updateAxes(axisType);\n        var chart = this.chart;\n        var fields = params.fields;\n        var fieldIds = fields.map(function (f) { return f.colId; });\n        var data = this.transformData(params.data, params.category.id);\n        var existingSeriesById = chart.series.reduceRight(function (map, series, i) {\n            var id = series.yKey;\n            if (fieldIds.indexOf(id) === i) {\n                map.set(id, series);\n            }\n            else {\n                chart.removeSeries(series);\n            }\n            return map;\n        }, new Map());\n        var previousSeries;\n        var _a = this.getPalette(), fills = _a.fills, strokes = _a.strokes;\n        fields.forEach(function (f, index) {\n            var _a = _this.processDataForCrossFiltering(data, f.colId, params), yKey = _a.yKey, atLeastOneSelectedPoint = _a.atLeastOneSelectedPoint;\n            var lineSeries = existingSeriesById.get(f.colId);\n            var fill = fills[index % fills.length];\n            var stroke = strokes[index % strokes.length];\n            if (lineSeries) {\n                lineSeries.title = f.displayName;\n                lineSeries.data = data;\n                lineSeries.xKey = params.category.id;\n                lineSeries.xName = params.category.name;\n                lineSeries.yKey = yKey;\n                lineSeries.yName = f.displayName;\n                lineSeries.marker.fill = fill;\n                lineSeries.marker.stroke = stroke;\n                lineSeries.stroke = fill; // this is deliberate, so that the line colours match the fills of other series\n            }\n            else {\n                var seriesDefaults = _this.iChartOptions.seriesDefaults;\n                var marker = __assign(__assign({}, seriesDefaults.marker), { fill: fill,\n                    stroke: stroke });\n                if (marker.type) { // deprecated\n                    marker.shape = marker.type;\n                    delete marker.type;\n                }\n                var options = __assign(__assign({}, seriesDefaults), { type: 'line', title: f.displayName, data: data, xKey: params.category.id, xName: params.category.name, yKey: yKey, yName: f.displayName, fill: fill, stroke: fill, fillOpacity: seriesDefaults.fill.opacity, strokeOpacity: seriesDefaults.stroke.opacity, strokeWidth: seriesDefaults.stroke.width, tooltip: {\n                        enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n                        renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled && seriesDefaults.tooltip.renderer,\n                    }, marker: marker });\n                lineSeries = AgChart.createComponent(options, 'line.series');\n                chart.addSeriesAfter(lineSeries, previousSeries);\n            }\n            _this.updateSeriesForCrossFiltering(lineSeries, f.colId, chart, params, atLeastOneSelectedPoint);\n            previousSeries = lineSeries;\n        });\n        this.updateLabelRotation(params.category.id, false, axisType);\n    };\n    LineChartProxy.prototype.extractIChartOptionsFromTheme = function (theme) {\n        var options = _super.prototype.extractIChartOptionsFromTheme.call(this, theme);\n        var seriesDefaults = theme.getConfig('line.series.line');\n        options.seriesDefaults = {\n            tooltip: {\n                enabled: seriesDefaults.tooltip && seriesDefaults.tooltip.enabled,\n                renderer: seriesDefaults.tooltip && seriesDefaults.tooltip.renderer\n            },\n            fill: {\n                colors: [],\n                opacity: 1\n            },\n            stroke: {\n                colors: (seriesDefaults.stroke && [seriesDefaults.stroke]) || theme.palette.strokes,\n                opacity: seriesDefaults.strokeOpacity,\n                width: seriesDefaults.strokeWidth\n            },\n            label: seriesDefaults.label,\n            marker: {\n                enabled: seriesDefaults.marker.enabled,\n                shape: seriesDefaults.marker.shape,\n                size: seriesDefaults.marker.size,\n                strokeWidth: seriesDefaults.marker.strokeWidth,\n                formatter: seriesDefaults.marker.formatter\n            },\n            lineDash: seriesDefaults.lineDash ? seriesDefaults.lineDash : [0],\n            lineDashOffset: seriesDefaults.lineDashOffset,\n            highlightStyle: seriesDefaults.highlightStyle,\n            listeners: seriesDefaults.listeners\n        };\n        return options;\n    };\n    LineChartProxy.prototype.getDefaultOptions = function () {\n        var options = this.getDefaultCartesianChartOptions();\n        options.xAxis.label.rotation = 335;\n        options.seriesDefaults = __assign(__assign({}, options.seriesDefaults), { stroke: __assign(__assign({}, options.seriesDefaults.stroke), { width: 3 }), marker: {\n                enabled: true,\n                shape: 'circle',\n                size: 6,\n                strokeWidth: 1,\n            }, tooltip: {\n                enabled: true,\n            } });\n        return options;\n    };\n    return LineChartProxy;\n}(CartesianChartProxy));\nexport { LineChartProxy };\n"]},"metadata":{},"sourceType":"module"}