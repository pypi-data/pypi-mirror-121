{"ast":null,"code":"import { convertLegacyHorizontalAlignment, convertLegacyVerticalAlignment } from '../../../assets/excelLegacyConvert';\n\nvar getReadingOrderId = function getReadingOrderId(readingOrder) {\n  var order = ['Context', 'LeftToRight', 'RightToLeft'];\n  var pos = order.indexOf(readingOrder);\n  return Math.max(pos, 0);\n};\n\nvar alignmentFactory = {\n  getTemplate: function getTemplate(alignment) {\n    var horizontal = alignment.horizontal,\n        indent = alignment.indent,\n        readingOrder = alignment.readingOrder,\n        rotate = alignment.rotate,\n        shrinkToFit = alignment.shrinkToFit,\n        vertical = alignment.vertical,\n        wrapText = alignment.wrapText;\n    return {\n      name: 'alignment',\n      properties: {\n        rawMap: {\n          horizontal: horizontal && convertLegacyHorizontalAlignment(horizontal),\n          indent: indent,\n          readingOrder: readingOrder && getReadingOrderId(readingOrder),\n          textRotation: rotate,\n          shrinkToFit: shrinkToFit,\n          vertical: vertical && convertLegacyVerticalAlignment(vertical),\n          wrapText: wrapText\n        }\n      }\n    };\n  }\n};\nexport default alignmentFactory;","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/files/ooxml/styles/alignment.js"],"names":["convertLegacyHorizontalAlignment","convertLegacyVerticalAlignment","getReadingOrderId","readingOrder","order","pos","indexOf","Math","max","alignmentFactory","getTemplate","alignment","horizontal","indent","rotate","shrinkToFit","vertical","wrapText","name","properties","rawMap","textRotation"],"mappings":"AAAA,SAASA,gCAAT,EAA2CC,8BAA3C,QAAiF,oCAAjF;;AACA,IAAIC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,YAAV,EAAwB;AAC5C,MAAIC,KAAK,GAAG,CAAC,SAAD,EAAY,aAAZ,EAA2B,aAA3B,CAAZ;AACA,MAAIC,GAAG,GAAGD,KAAK,CAACE,OAAN,CAAcH,YAAd,CAAV;AACA,SAAOI,IAAI,CAACC,GAAL,CAASH,GAAT,EAAc,CAAd,CAAP;AACH,CAJD;;AAKA,IAAII,gBAAgB,GAAG;AACnBC,EAAAA,WAAW,EAAE,qBAAUC,SAAV,EAAqB;AAC9B,QAAIC,UAAU,GAAGD,SAAS,CAACC,UAA3B;AAAA,QAAuCC,MAAM,GAAGF,SAAS,CAACE,MAA1D;AAAA,QAAkEV,YAAY,GAAGQ,SAAS,CAACR,YAA3F;AAAA,QAAyGW,MAAM,GAAGH,SAAS,CAACG,MAA5H;AAAA,QAAoIC,WAAW,GAAGJ,SAAS,CAACI,WAA5J;AAAA,QAAyKC,QAAQ,GAAGL,SAAS,CAACK,QAA9L;AAAA,QAAwMC,QAAQ,GAAGN,SAAS,CAACM,QAA7N;AACA,WAAO;AACHC,MAAAA,IAAI,EAAE,WADH;AAEHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,MAAM,EAAE;AACJR,UAAAA,UAAU,EAAEA,UAAU,IAAIZ,gCAAgC,CAACY,UAAD,CADtD;AAEJC,UAAAA,MAAM,EAAEA,MAFJ;AAGJV,UAAAA,YAAY,EAAEA,YAAY,IAAID,iBAAiB,CAACC,YAAD,CAH3C;AAIJkB,UAAAA,YAAY,EAAEP,MAJV;AAKJC,UAAAA,WAAW,EAAEA,WALT;AAMJC,UAAAA,QAAQ,EAAEA,QAAQ,IAAIf,8BAA8B,CAACe,QAAD,CANhD;AAOJC,UAAAA,QAAQ,EAAEA;AAPN;AADA;AAFT,KAAP;AAcH;AAjBkB,CAAvB;AAmBA,eAAeR,gBAAf","sourcesContent":["import { convertLegacyHorizontalAlignment, convertLegacyVerticalAlignment } from '../../../assets/excelLegacyConvert';\nvar getReadingOrderId = function (readingOrder) {\n    var order = ['Context', 'LeftToRight', 'RightToLeft'];\n    var pos = order.indexOf(readingOrder);\n    return Math.max(pos, 0);\n};\nvar alignmentFactory = {\n    getTemplate: function (alignment) {\n        var horizontal = alignment.horizontal, indent = alignment.indent, readingOrder = alignment.readingOrder, rotate = alignment.rotate, shrinkToFit = alignment.shrinkToFit, vertical = alignment.vertical, wrapText = alignment.wrapText;\n        return {\n            name: 'alignment',\n            properties: {\n                rawMap: {\n                    horizontal: horizontal && convertLegacyHorizontalAlignment(horizontal),\n                    indent: indent,\n                    readingOrder: readingOrder && getReadingOrderId(readingOrder),\n                    textRotation: rotate,\n                    shrinkToFit: shrinkToFit,\n                    vertical: vertical && convertLegacyVerticalAlignment(vertical),\n                    wrapText: wrapText\n                }\n            }\n        };\n    }\n};\nexport default alignmentFactory;\n"]},"metadata":{},"sourceType":"module"}