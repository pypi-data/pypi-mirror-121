{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, Autowired, Bean, PostConstruct } from '@ag-grid-community/core';\nimport { ExcelXmlSerializingSession } from './excelXmlSerializingSession';\nimport { ExcelXlsxSerializingSession } from './excelXlsxSerializingSession';\nimport { ExcelXlsxFactory } from './excelXlsxFactory';\nimport { BaseCreator, Downloader, RowType, ZipContainer } from \"@ag-grid-community/csv-export\";\nimport { ExcelXmlFactory } from './excelXmlFactory';\nexport var getMultipleSheetsAsExcel = function (params) {\n  var data = params.data,\n      _a = params.fontSize,\n      fontSize = _a === void 0 ? 11 : _a,\n      _b = params.author,\n      author = _b === void 0 ? 'AG Grid' : _b;\n  var hasImages = ExcelXlsxFactory.images.size > 0;\n  ZipContainer.addFolders(['_rels/', 'docProps/', 'xl/', 'xl/theme/', 'xl/_rels/', 'xl/worksheets/']);\n\n  if (hasImages) {\n    ZipContainer.addFolders(['xl/worksheets/_rels', 'xl/drawings/', 'xl/drawings/_rels', 'xl/media/']);\n    var imgCounter_1 = 0;\n    ExcelXlsxFactory.images.forEach(function (value) {\n      var firstImage = value[0].image[0];\n      var ext = firstImage.imageType;\n      ZipContainer.addFile(\"xl/media/image\" + ++imgCounter_1 + \".\" + ext, firstImage.base64, true);\n    });\n  }\n\n  if (!data || data.length === 0) {\n    console.warn(\"AG Grid: Invalid params supplied to getMultipleSheetsAsExcel() - `ExcelExportParams.data` is empty.\");\n    ExcelXlsxFactory.resetFactory();\n    return;\n  }\n\n  var sheetLen = data.length;\n  var imageRelationCounter = 0;\n  data.forEach(function (value, idx) {\n    ZipContainer.addFile(\"xl/worksheets/sheet\" + (idx + 1) + \".xml\", value);\n\n    if (hasImages && ExcelXlsxFactory.worksheetImages.get(idx)) {\n      createImageRelationsForSheet(idx, imageRelationCounter++);\n    }\n  });\n  ZipContainer.addFile('xl/workbook.xml', ExcelXlsxFactory.createWorkbook());\n  ZipContainer.addFile('xl/styles.xml', ExcelXlsxFactory.createStylesheet(fontSize));\n  ZipContainer.addFile('xl/sharedStrings.xml', ExcelXlsxFactory.createSharedStrings());\n  ZipContainer.addFile('xl/theme/theme1.xml', ExcelXlsxFactory.createTheme());\n  ZipContainer.addFile('xl/_rels/workbook.xml.rels', ExcelXlsxFactory.createWorkbookRels(sheetLen));\n  ZipContainer.addFile('docProps/core.xml', ExcelXlsxFactory.createCore(author));\n  ZipContainer.addFile('[Content_Types].xml', ExcelXlsxFactory.createContentTypes(sheetLen));\n  ZipContainer.addFile('_rels/.rels', ExcelXlsxFactory.createRels());\n  ExcelXlsxFactory.resetFactory();\n  return ZipContainer.getContent('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n};\nexport var exportMultipleSheetsAsExcel = function (params) {\n  var _a = params.fileName,\n      fileName = _a === void 0 ? 'export.xlsx' : _a;\n  var contents = getMultipleSheetsAsExcel(params);\n\n  if (contents) {\n    Downloader.download(fileName, contents);\n  }\n};\n\nvar createImageRelationsForSheet = function (sheetIndex, currentRelationIndex) {\n  var drawingFolder = 'xl/drawings';\n  var drawingFileName = drawingFolder + \"/drawing\" + (currentRelationIndex + 1) + \".xml\";\n  var relFileName = drawingFolder + \"/_rels/drawing\" + (currentRelationIndex + 1) + \".xml.rels\";\n  var worksheetRelFile = \"xl/worksheets/_rels/sheet\" + (sheetIndex + 1) + \".xml.rels\";\n  ZipContainer.addFile(relFileName, ExcelXlsxFactory.createDrawingRel(sheetIndex));\n  ZipContainer.addFile(drawingFileName, ExcelXlsxFactory.createDrawing(sheetIndex));\n  ZipContainer.addFile(worksheetRelFile, ExcelXlsxFactory.createWorksheetDrawingRel(currentRelationIndex));\n};\n\nvar ExcelCreator = function (_super) {\n  __extends(ExcelCreator, _super);\n\n  function ExcelCreator() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.exportMode = 'xlsx';\n    return _this;\n  }\n\n  ExcelCreator.prototype.postConstruct = function () {\n    this.setBeans({\n      gridSerializer: this.gridSerializer,\n      gridOptionsWrapper: this.gridOptionsWrapper\n    });\n  };\n\n  ExcelCreator.prototype.getDefaultExportParams = function () {\n    return this.gridOptionsWrapper.getDefaultExportParams('excel');\n  };\n\n  ExcelCreator.prototype.export = function (userParams) {\n    if (this.isExportSuppressed()) {\n      console.warn(\"ag-grid: Export cancelled. Export is not allowed as per your configuration.\");\n      return '';\n    }\n\n    var _a = this.getMergedParamsAndData(userParams),\n        mergedParams = _a.mergedParams,\n        data = _a.data;\n\n    var packageFile = this.packageFile({\n      data: [data],\n      fontSize: mergedParams.fontSize,\n      author: mergedParams.author\n    });\n\n    if (packageFile) {\n      Downloader.download(this.getFileName(mergedParams.fileName), packageFile);\n    }\n\n    return data;\n  };\n\n  ExcelCreator.prototype.exportDataAsExcel = function (params) {\n    var exportMode = 'xlsx';\n\n    if (params && params.exportMode) {\n      exportMode = params.exportMode;\n    }\n\n    this.setExportMode(exportMode);\n    return this.export(params);\n  };\n\n  ExcelCreator.prototype.getDataAsExcel = function (params) {\n    var _a = this.getMergedParamsAndData(params),\n        mergedParams = _a.mergedParams,\n        data = _a.data;\n\n    if (params && params.exportMode === 'xml') {\n      return data;\n    }\n\n    return this.packageFile({\n      data: [data],\n      fontSize: mergedParams.fontSize,\n      author: mergedParams.author\n    });\n  };\n\n  ExcelCreator.prototype.setFactoryMode = function (factoryMode, exportMode) {\n    if (exportMode === void 0) {\n      exportMode = 'xlsx';\n    }\n\n    var factory = exportMode === 'xlsx' ? ExcelXlsxFactory : ExcelXmlFactory;\n    factory.factoryMode = factoryMode;\n  };\n\n  ExcelCreator.prototype.getFactoryMode = function (exportMode) {\n    var factory = exportMode === 'xlsx' ? ExcelXlsxFactory : ExcelXmlFactory;\n    return factory.factoryMode;\n  };\n\n  ExcelCreator.prototype.getSheetDataForExcel = function (params) {\n    return this.getMergedParamsAndData(params).data;\n  };\n\n  ExcelCreator.prototype.getMultipleSheetsAsExcel = function (params) {\n    return getMultipleSheetsAsExcel(params);\n  };\n\n  ExcelCreator.prototype.exportMultipleSheetsAsExcel = function (params) {\n    return exportMultipleSheetsAsExcel(params);\n  };\n\n  ExcelCreator.prototype.getMimeType = function () {\n    return this.getExportMode() === 'xml' ? 'application/vnd.ms-excel' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n  };\n\n  ExcelCreator.prototype.getDefaultFileName = function () {\n    return \"export.\" + this.getExportMode();\n  };\n\n  ExcelCreator.prototype.getDefaultFileExtension = function () {\n    return this.getExportMode();\n  };\n\n  ExcelCreator.prototype.createSerializingSession = function (params) {\n    var _a = this,\n        columnModel = _a.columnModel,\n        valueService = _a.valueService,\n        gridOptionsWrapper = _a.gridOptionsWrapper;\n\n    var isXlsx = this.getExportMode() === 'xlsx';\n    var sheetName = 'ag-grid';\n\n    if (params.sheetName != null) {\n      sheetName = _.utf8_encode(params.sheetName.toString().substr(0, 31));\n    }\n\n    var config = __assign(__assign({}, params), {\n      sheetName: sheetName,\n      columnModel: columnModel,\n      valueService: valueService,\n      gridOptionsWrapper: gridOptionsWrapper,\n      headerRowHeight: params.headerRowHeight || params.rowHeight,\n      baseExcelStyles: this.gridOptions.excelStyles || [],\n      styleLinker: this.styleLinker.bind(this)\n    });\n\n    return new (isXlsx ? ExcelXlsxSerializingSession : ExcelXmlSerializingSession)(config);\n  };\n\n  ExcelCreator.prototype.styleLinker = function (rowType, rowIndex, value, column, node) {\n    if (rowType === RowType.HEADER) {\n      return [\"header\"];\n    }\n\n    if (rowType === RowType.HEADER_GROUPING) {\n      return [\"header\", \"headerGroup\"];\n    }\n\n    var styles = this.gridOptions.excelStyles;\n    var applicableStyles = [\"cell\"];\n\n    if (!styles || !styles.length) {\n      return applicableStyles;\n    }\n\n    var styleIds = styles.map(function (it) {\n      return it.id;\n    });\n    this.stylingService.processAllCellClasses(column.getColDef(), {\n      value: value,\n      data: node.data,\n      node: node,\n      colDef: column.getColDef(),\n      rowIndex: rowIndex,\n      api: this.gridOptionsWrapper.getApi(),\n      columnApi: this.gridOptionsWrapper.getColumnApi(),\n      $scope: null,\n      context: this.gridOptionsWrapper.getContext()\n    }, function (className) {\n      if (styleIds.indexOf(className) > -1) {\n        applicableStyles.push(className);\n      }\n    });\n    return applicableStyles.sort(function (left, right) {\n      return styleIds.indexOf(left) < styleIds.indexOf(right) ? -1 : 1;\n    });\n  };\n\n  ExcelCreator.prototype.isExportSuppressed = function () {\n    return this.gridOptionsWrapper.isSuppressExcelExport();\n  };\n\n  ExcelCreator.prototype.setExportMode = function (exportMode) {\n    this.exportMode = exportMode;\n  };\n\n  ExcelCreator.prototype.getExportMode = function () {\n    return this.exportMode;\n  };\n\n  ExcelCreator.prototype.packageFile = function (params) {\n    if (this.getExportMode() === 'xml') {\n      return new Blob([\"\\ufeff\", params.data[0]], {\n        // @ts-ignore\n        type: window.navigator.msSaveOrOpenBlob ? this.getMimeType() : 'octet/stream'\n      });\n    }\n\n    return getMultipleSheetsAsExcel(params);\n  };\n\n  __decorate([Autowired('columnModel')], ExcelCreator.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('valueService')], ExcelCreator.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('gridOptions')], ExcelCreator.prototype, \"gridOptions\", void 0);\n\n  __decorate([Autowired('stylingService')], ExcelCreator.prototype, \"stylingService\", void 0);\n\n  __decorate([Autowired('gridSerializer')], ExcelCreator.prototype, \"gridSerializer\", void 0);\n\n  __decorate([Autowired('gridOptionsWrapper')], ExcelCreator.prototype, \"gridOptionsWrapper\", void 0);\n\n  __decorate([PostConstruct], ExcelCreator.prototype, \"postConstruct\", null);\n\n  ExcelCreator = __decorate([Bean('excelCreator')], ExcelCreator);\n  return ExcelCreator;\n}(BaseCreator);\n\nexport { ExcelCreator };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/excelCreator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_","Autowired","Bean","PostConstruct","ExcelXmlSerializingSession","ExcelXlsxSerializingSession","ExcelXlsxFactory","BaseCreator","Downloader","RowType","ZipContainer","ExcelXmlFactory","getMultipleSheetsAsExcel","params","data","_a","fontSize","_b","author","hasImages","images","size","addFolders","imgCounter_1","forEach","value","firstImage","image","ext","imageType","addFile","base64","console","warn","resetFactory","sheetLen","imageRelationCounter","idx","worksheetImages","get","createImageRelationsForSheet","createWorkbook","createStylesheet","createSharedStrings","createTheme","createWorkbookRels","createCore","createContentTypes","createRels","getContent","exportMultipleSheetsAsExcel","fileName","contents","download","sheetIndex","currentRelationIndex","drawingFolder","drawingFileName","relFileName","worksheetRelFile","createDrawingRel","createDrawing","createWorksheetDrawingRel","ExcelCreator","_super","_this","exportMode","postConstruct","setBeans","gridSerializer","gridOptionsWrapper","getDefaultExportParams","export","userParams","isExportSuppressed","getMergedParamsAndData","mergedParams","packageFile","getFileName","exportDataAsExcel","setExportMode","getDataAsExcel","setFactoryMode","factoryMode","factory","getFactoryMode","getSheetDataForExcel","getMimeType","getExportMode","getDefaultFileName","getDefaultFileExtension","createSerializingSession","columnModel","valueService","isXlsx","sheetName","utf8_encode","toString","substr","config","headerRowHeight","rowHeight","baseExcelStyles","gridOptions","excelStyles","styleLinker","bind","rowType","rowIndex","column","node","HEADER","HEADER_GROUPING","styles","applicableStyles","styleIds","map","it","id","stylingService","processAllCellClasses","getColDef","colDef","api","getApi","columnApi","getColumnApi","$scope","context","getContext","className","indexOf","push","sort","left","right","isSuppressExcelExport","Blob","type","window","navigator","msSaveOrOpenBlob"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGV,MAAM,CAACW,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAIV,CAAT,IAAcS,CAAd,EAAiB,IAAIb,MAAM,CAACQ,SAAP,CAAiBH,cAAjB,CAAgCa,IAAhC,CAAqCL,CAArC,EAAwCT,CAAxC,CAAJ,EACbQ,CAAC,CAACR,CAAD,CAAD,GAAOS,CAAC,CAACT,CAAD,CAAR;AACP;;AACD,WAAOQ,CAAP;AACH,GAPD;;AAQA,SAAOF,QAAQ,CAACS,KAAT,CAAe,IAAf,EAAqBH,SAArB,CAAP;AACH,CAVD;;AAWA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGT,SAAS,CAACC,MAAlB;AAAA,MAA0BS,CAAC,GAAGD,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGxB,MAAM,CAAC2B,wBAAP,CAAgCL,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2H1B,CAA3H;AACA,MAAI,OAAO8B,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBR,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIV,CAAC,GAAGO,UAAU,CAACJ,MAAX,GAAoB,CAAjC,EAAoCH,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIhB,CAAC,GAAGuB,UAAU,CAACP,CAAD,CAAlB,EAAuBY,CAAC,GAAG,CAACD,CAAC,GAAG,CAAJ,GAAQ3B,CAAC,CAAC4B,CAAD,CAAT,GAAeD,CAAC,GAAG,CAAJ,GAAQ3B,CAAC,CAACwB,MAAD,EAASC,GAAT,EAAcG,CAAd,CAAT,GAA4B5B,CAAC,CAACwB,MAAD,EAASC,GAAT,CAA7C,KAA+DG,CAAnE;AAC7E,SAAOD,CAAC,GAAG,CAAJ,IAASC,CAAT,IAAc1B,MAAM,CAAC8B,cAAP,CAAsBR,MAAtB,EAA8BC,GAA9B,EAAmCG,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASK,CAAT,EAAYC,SAAZ,EAAuBC,IAAvB,EAA6BC,aAA7B,QAAmD,yBAAnD;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SAASC,2BAAT,QAA4C,+BAA5C;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,OAAlC,EAA2CC,YAA3C,QAA+D,+BAA/D;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAO,IAAIC,wBAAwB,GAAG,UAAUC,MAAV,EAAkB;AACpD,MAAIC,IAAI,GAAGD,MAAM,CAACC,IAAlB;AAAA,MAAwBC,EAAE,GAAGF,MAAM,CAACG,QAApC;AAAA,MAA8CA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9E;AAAA,MAAkFE,EAAE,GAAGJ,MAAM,CAACK,MAA9F;AAAA,MAAsGA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,SAAhB,GAA4BA,EAA3I;AACA,MAAIE,SAAS,GAAGb,gBAAgB,CAACc,MAAjB,CAAwBC,IAAxB,GAA+B,CAA/C;AACAX,EAAAA,YAAY,CAACY,UAAb,CAAwB,CACpB,QADoB,EAEpB,WAFoB,EAGpB,KAHoB,EAIpB,WAJoB,EAKpB,WALoB,EAMpB,gBANoB,CAAxB;;AAQA,MAAIH,SAAJ,EAAe;AACXT,IAAAA,YAAY,CAACY,UAAb,CAAwB,CACpB,qBADoB,EAEpB,cAFoB,EAGpB,mBAHoB,EAIpB,WAJoB,CAAxB;AAMA,QAAIC,YAAY,GAAG,CAAnB;AACAjB,IAAAA,gBAAgB,CAACc,MAAjB,CAAwBI,OAAxB,CAAgC,UAAUC,KAAV,EAAiB;AAC7C,UAAIC,UAAU,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,CAAf,CAAjB;AACA,UAAIC,GAAG,GAAGF,UAAU,CAACG,SAArB;AACAnB,MAAAA,YAAY,CAACoB,OAAb,CAAqB,mBAAmB,EAAEP,YAArB,GAAoC,GAApC,GAA0CK,GAA/D,EAAoEF,UAAU,CAACK,MAA/E,EAAuF,IAAvF;AACH,KAJD;AAKH;;AACD,MAAI,CAACjB,IAAD,IAASA,IAAI,CAAC5B,MAAL,KAAgB,CAA7B,EAAgC;AAC5B8C,IAAAA,OAAO,CAACC,IAAR,CAAa,qGAAb;AACA3B,IAAAA,gBAAgB,CAAC4B,YAAjB;AACA;AACH;;AACD,MAAIC,QAAQ,GAAGrB,IAAI,CAAC5B,MAApB;AACA,MAAIkD,oBAAoB,GAAG,CAA3B;AACAtB,EAAAA,IAAI,CAACU,OAAL,CAAa,UAAUC,KAAV,EAAiBY,GAAjB,EAAsB;AAC/B3B,IAAAA,YAAY,CAACoB,OAAb,CAAqB,yBAAyBO,GAAG,GAAG,CAA/B,IAAoC,MAAzD,EAAiEZ,KAAjE;;AACA,QAAIN,SAAS,IAAIb,gBAAgB,CAACgC,eAAjB,CAAiCC,GAAjC,CAAqCF,GAArC,CAAjB,EAA4D;AACxDG,MAAAA,4BAA4B,CAACH,GAAD,EAAMD,oBAAoB,EAA1B,CAA5B;AACH;AACJ,GALD;AAMA1B,EAAAA,YAAY,CAACoB,OAAb,CAAqB,iBAArB,EAAwCxB,gBAAgB,CAACmC,cAAjB,EAAxC;AACA/B,EAAAA,YAAY,CAACoB,OAAb,CAAqB,eAArB,EAAsCxB,gBAAgB,CAACoC,gBAAjB,CAAkC1B,QAAlC,CAAtC;AACAN,EAAAA,YAAY,CAACoB,OAAb,CAAqB,sBAArB,EAA6CxB,gBAAgB,CAACqC,mBAAjB,EAA7C;AACAjC,EAAAA,YAAY,CAACoB,OAAb,CAAqB,qBAArB,EAA4CxB,gBAAgB,CAACsC,WAAjB,EAA5C;AACAlC,EAAAA,YAAY,CAACoB,OAAb,CAAqB,4BAArB,EAAmDxB,gBAAgB,CAACuC,kBAAjB,CAAoCV,QAApC,CAAnD;AACAzB,EAAAA,YAAY,CAACoB,OAAb,CAAqB,mBAArB,EAA0CxB,gBAAgB,CAACwC,UAAjB,CAA4B5B,MAA5B,CAA1C;AACAR,EAAAA,YAAY,CAACoB,OAAb,CAAqB,qBAArB,EAA4CxB,gBAAgB,CAACyC,kBAAjB,CAAoCZ,QAApC,CAA5C;AACAzB,EAAAA,YAAY,CAACoB,OAAb,CAAqB,aAArB,EAAoCxB,gBAAgB,CAAC0C,UAAjB,EAApC;AACA1C,EAAAA,gBAAgB,CAAC4B,YAAjB;AACA,SAAOxB,YAAY,CAACuC,UAAb,CAAwB,mEAAxB,CAAP;AACH,CAhDM;AAiDP,OAAO,IAAIC,2BAA2B,GAAG,UAAUrC,MAAV,EAAkB;AACvD,MAAIE,EAAE,GAAGF,MAAM,CAACsC,QAAhB;AAAA,MAA0BA,QAAQ,GAAGpC,EAAE,KAAK,KAAK,CAAZ,GAAgB,aAAhB,GAAgCA,EAArE;AACA,MAAIqC,QAAQ,GAAGxC,wBAAwB,CAACC,MAAD,CAAvC;;AACA,MAAIuC,QAAJ,EAAc;AACV5C,IAAAA,UAAU,CAAC6C,QAAX,CAAoBF,QAApB,EAA8BC,QAA9B;AACH;AACJ,CANM;;AAOP,IAAIZ,4BAA4B,GAAG,UAAUc,UAAV,EAAsBC,oBAAtB,EAA4C;AAC3E,MAAIC,aAAa,GAAG,aAApB;AACA,MAAIC,eAAe,GAAGD,aAAa,GAAG,UAAhB,IAA8BD,oBAAoB,GAAG,CAArD,IAA0D,MAAhF;AACA,MAAIG,WAAW,GAAGF,aAAa,GAAG,gBAAhB,IAAoCD,oBAAoB,GAAG,CAA3D,IAAgE,WAAlF;AACA,MAAII,gBAAgB,GAAG,+BAA+BL,UAAU,GAAG,CAA5C,IAAiD,WAAxE;AACA5C,EAAAA,YAAY,CAACoB,OAAb,CAAqB4B,WAArB,EAAkCpD,gBAAgB,CAACsD,gBAAjB,CAAkCN,UAAlC,CAAlC;AACA5C,EAAAA,YAAY,CAACoB,OAAb,CAAqB2B,eAArB,EAAsCnD,gBAAgB,CAACuD,aAAjB,CAA+BP,UAA/B,CAAtC;AACA5C,EAAAA,YAAY,CAACoB,OAAb,CAAqB6B,gBAArB,EAAuCrD,gBAAgB,CAACwD,yBAAjB,CAA2CP,oBAA3C,CAAvC;AACH,CARD;;AASA,IAAIQ,YAAY,GAAkB,UAAUC,MAAV,EAAkB;AAChDnG,EAAAA,SAAS,CAACkG,YAAD,EAAeC,MAAf,CAAT;;AACA,WAASD,YAAT,GAAwB;AACpB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAAC5E,KAAP,CAAa,IAAb,EAAmBH,SAAnB,CAAnB,IAAoD,IAAhE;;AACAgF,IAAAA,KAAK,CAACC,UAAN,GAAmB,MAAnB;AACA,WAAOD,KAAP;AACH;;AACDF,EAAAA,YAAY,CAACtF,SAAb,CAAuB0F,aAAvB,GAAuC,YAAY;AAC/C,SAAKC,QAAL,CAAc;AACVC,MAAAA,cAAc,EAAE,KAAKA,cADX;AAEVC,MAAAA,kBAAkB,EAAE,KAAKA;AAFf,KAAd;AAIH,GALD;;AAMAP,EAAAA,YAAY,CAACtF,SAAb,CAAuB8F,sBAAvB,GAAgD,YAAY;AACxD,WAAO,KAAKD,kBAAL,CAAwBC,sBAAxB,CAA+C,OAA/C,CAAP;AACH,GAFD;;AAGAR,EAAAA,YAAY,CAACtF,SAAb,CAAuB+F,MAAvB,GAAgC,UAAUC,UAAV,EAAsB;AAClD,QAAI,KAAKC,kBAAL,EAAJ,EAA+B;AAC3B1C,MAAAA,OAAO,CAACC,IAAR,CAAa,6EAAb;AACA,aAAO,EAAP;AACH;;AACD,QAAIlB,EAAE,GAAG,KAAK4D,sBAAL,CAA4BF,UAA5B,CAAT;AAAA,QAAkDG,YAAY,GAAG7D,EAAE,CAAC6D,YAApE;AAAA,QAAkF9D,IAAI,GAAGC,EAAE,CAACD,IAA5F;;AACA,QAAI+D,WAAW,GAAG,KAAKA,WAAL,CAAiB;AAC/B/D,MAAAA,IAAI,EAAE,CAACA,IAAD,CADyB;AAE/BE,MAAAA,QAAQ,EAAE4D,YAAY,CAAC5D,QAFQ;AAG/BE,MAAAA,MAAM,EAAE0D,YAAY,CAAC1D;AAHU,KAAjB,CAAlB;;AAKA,QAAI2D,WAAJ,EAAiB;AACbrE,MAAAA,UAAU,CAAC6C,QAAX,CAAoB,KAAKyB,WAAL,CAAiBF,YAAY,CAACzB,QAA9B,CAApB,EAA6D0B,WAA7D;AACH;;AACD,WAAO/D,IAAP;AACH,GAfD;;AAgBAiD,EAAAA,YAAY,CAACtF,SAAb,CAAuBsG,iBAAvB,GAA2C,UAAUlE,MAAV,EAAkB;AACzD,QAAIqD,UAAU,GAAG,MAAjB;;AACA,QAAIrD,MAAM,IAAIA,MAAM,CAACqD,UAArB,EAAiC;AAC7BA,MAAAA,UAAU,GAAGrD,MAAM,CAACqD,UAApB;AACH;;AACD,SAAKc,aAAL,CAAmBd,UAAnB;AACA,WAAO,KAAKM,MAAL,CAAY3D,MAAZ,CAAP;AACH,GAPD;;AAQAkD,EAAAA,YAAY,CAACtF,SAAb,CAAuBwG,cAAvB,GAAwC,UAAUpE,MAAV,EAAkB;AACtD,QAAIE,EAAE,GAAG,KAAK4D,sBAAL,CAA4B9D,MAA5B,CAAT;AAAA,QAA8C+D,YAAY,GAAG7D,EAAE,CAAC6D,YAAhE;AAAA,QAA8E9D,IAAI,GAAGC,EAAE,CAACD,IAAxF;;AACA,QAAID,MAAM,IAAIA,MAAM,CAACqD,UAAP,KAAsB,KAApC,EAA2C;AACvC,aAAOpD,IAAP;AACH;;AACD,WAAO,KAAK+D,WAAL,CAAiB;AACpB/D,MAAAA,IAAI,EAAE,CAACA,IAAD,CADc;AAEpBE,MAAAA,QAAQ,EAAE4D,YAAY,CAAC5D,QAFH;AAGpBE,MAAAA,MAAM,EAAE0D,YAAY,CAAC1D;AAHD,KAAjB,CAAP;AAKH,GAVD;;AAWA6C,EAAAA,YAAY,CAACtF,SAAb,CAAuByG,cAAvB,GAAwC,UAAUC,WAAV,EAAuBjB,UAAvB,EAAmC;AACvE,QAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;AAAEA,MAAAA,UAAU,GAAG,MAAb;AAAsB;;AACnD,QAAIkB,OAAO,GAAGlB,UAAU,KAAK,MAAf,GAAwB5D,gBAAxB,GAA2CK,eAAzD;AACAyE,IAAAA,OAAO,CAACD,WAAR,GAAsBA,WAAtB;AACH,GAJD;;AAKApB,EAAAA,YAAY,CAACtF,SAAb,CAAuB4G,cAAvB,GAAwC,UAAUnB,UAAV,EAAsB;AAC1D,QAAIkB,OAAO,GAAGlB,UAAU,KAAK,MAAf,GAAwB5D,gBAAxB,GAA2CK,eAAzD;AACA,WAAOyE,OAAO,CAACD,WAAf;AACH,GAHD;;AAIApB,EAAAA,YAAY,CAACtF,SAAb,CAAuB6G,oBAAvB,GAA8C,UAAUzE,MAAV,EAAkB;AAC5D,WAAO,KAAK8D,sBAAL,CAA4B9D,MAA5B,EAAoCC,IAA3C;AACH,GAFD;;AAGAiD,EAAAA,YAAY,CAACtF,SAAb,CAAuBmC,wBAAvB,GAAkD,UAAUC,MAAV,EAAkB;AAChE,WAAOD,wBAAwB,CAACC,MAAD,CAA/B;AACH,GAFD;;AAGAkD,EAAAA,YAAY,CAACtF,SAAb,CAAuByE,2BAAvB,GAAqD,UAAUrC,MAAV,EAAkB;AACnE,WAAOqC,2BAA2B,CAACrC,MAAD,CAAlC;AACH,GAFD;;AAGAkD,EAAAA,YAAY,CAACtF,SAAb,CAAuB8G,WAAvB,GAAqC,YAAY;AAC7C,WAAO,KAAKC,aAAL,OAAyB,KAAzB,GAAiC,0BAAjC,GAA8D,mEAArE;AACH,GAFD;;AAGAzB,EAAAA,YAAY,CAACtF,SAAb,CAAuBgH,kBAAvB,GAA4C,YAAY;AACpD,WAAO,YAAY,KAAKD,aAAL,EAAnB;AACH,GAFD;;AAGAzB,EAAAA,YAAY,CAACtF,SAAb,CAAuBiH,uBAAvB,GAAiD,YAAY;AACzD,WAAO,KAAKF,aAAL,EAAP;AACH,GAFD;;AAGAzB,EAAAA,YAAY,CAACtF,SAAb,CAAuBkH,wBAAvB,GAAkD,UAAU9E,MAAV,EAAkB;AAChE,QAAIE,EAAE,GAAG,IAAT;AAAA,QAAe6E,WAAW,GAAG7E,EAAE,CAAC6E,WAAhC;AAAA,QAA6CC,YAAY,GAAG9E,EAAE,CAAC8E,YAA/D;AAAA,QAA6EvB,kBAAkB,GAAGvD,EAAE,CAACuD,kBAArG;;AACA,QAAIwB,MAAM,GAAG,KAAKN,aAAL,OAAyB,MAAtC;AACA,QAAIO,SAAS,GAAG,SAAhB;;AACA,QAAIlF,MAAM,CAACkF,SAAP,IAAoB,IAAxB,EAA8B;AAC1BA,MAAAA,SAAS,GAAG/F,CAAC,CAACgG,WAAF,CAAcnF,MAAM,CAACkF,SAAP,CAAiBE,QAAjB,GAA4BC,MAA5B,CAAmC,CAAnC,EAAsC,EAAtC,CAAd,CAAZ;AACH;;AACD,QAAIC,MAAM,GAAGxH,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkC,MAAL,CAAT,EAAuB;AAAEkF,MAAAA,SAAS,EAAEA,SAAb;AACxCH,MAAAA,WAAW,EAAEA,WAD2B;AAExCC,MAAAA,YAAY,EAAEA,YAF0B;AAGxCvB,MAAAA,kBAAkB,EAAEA,kBAHoB;AAGA8B,MAAAA,eAAe,EAAEvF,MAAM,CAACuF,eAAP,IAA0BvF,MAAM,CAACwF,SAHlD;AAG6DC,MAAAA,eAAe,EAAE,KAAKC,WAAL,CAAiBC,WAAjB,IAAgC,EAH9G;AAGkHC,MAAAA,WAAW,EAAE,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AAH/H,KAAvB,CAArB;;AAIA,WAAO,KAAKZ,MAAM,GAAGzF,2BAAH,GAAiCD,0BAA5C,EAAwE+F,MAAxE,CAAP;AACH,GAZD;;AAaApC,EAAAA,YAAY,CAACtF,SAAb,CAAuBgI,WAAvB,GAAqC,UAAUE,OAAV,EAAmBC,QAAnB,EAA6BnF,KAA7B,EAAoCoF,MAApC,EAA4CC,IAA5C,EAAkD;AACnF,QAAIH,OAAO,KAAKlG,OAAO,CAACsG,MAAxB,EAAgC;AAC5B,aAAO,CAAC,QAAD,CAAP;AACH;;AACD,QAAIJ,OAAO,KAAKlG,OAAO,CAACuG,eAAxB,EAAyC;AACrC,aAAO,CAAC,QAAD,EAAW,aAAX,CAAP;AACH;;AACD,QAAIC,MAAM,GAAG,KAAKV,WAAL,CAAiBC,WAA9B;AACA,QAAIU,gBAAgB,GAAG,CAAC,MAAD,CAAvB;;AACA,QAAI,CAACD,MAAD,IAAW,CAACA,MAAM,CAAC/H,MAAvB,EAA+B;AAC3B,aAAOgI,gBAAP;AACH;;AACD,QAAIC,QAAQ,GAAGF,MAAM,CAACG,GAAP,CAAW,UAAUC,EAAV,EAAc;AACpC,aAAOA,EAAE,CAACC,EAAV;AACH,KAFc,CAAf;AAGA,SAAKC,cAAL,CAAoBC,qBAApB,CAA0CX,MAAM,CAACY,SAAP,EAA1C,EAA8D;AAC1DhG,MAAAA,KAAK,EAAEA,KADmD;AAE1DX,MAAAA,IAAI,EAAEgG,IAAI,CAAChG,IAF+C;AAG1DgG,MAAAA,IAAI,EAAEA,IAHoD;AAI1DY,MAAAA,MAAM,EAAEb,MAAM,CAACY,SAAP,EAJkD;AAK1Db,MAAAA,QAAQ,EAAEA,QALgD;AAM1De,MAAAA,GAAG,EAAE,KAAKrD,kBAAL,CAAwBsD,MAAxB,EANqD;AAO1DC,MAAAA,SAAS,EAAE,KAAKvD,kBAAL,CAAwBwD,YAAxB,EAP+C;AAQ1DC,MAAAA,MAAM,EAAE,IARkD;AAS1DC,MAAAA,OAAO,EAAE,KAAK1D,kBAAL,CAAwB2D,UAAxB;AATiD,KAA9D,EAUG,UAAUC,SAAV,EAAqB;AACpB,UAAIf,QAAQ,CAACgB,OAAT,CAAiBD,SAAjB,IAA8B,CAAC,CAAnC,EAAsC;AAClChB,QAAAA,gBAAgB,CAACkB,IAAjB,CAAsBF,SAAtB;AACH;AACJ,KAdD;AAeA,WAAOhB,gBAAgB,CAACmB,IAAjB,CAAsB,UAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AAChD,aAAQpB,QAAQ,CAACgB,OAAT,CAAiBG,IAAjB,IAAyBnB,QAAQ,CAACgB,OAAT,CAAiBI,KAAjB,CAA1B,GAAqD,CAAC,CAAtD,GAA0D,CAAjE;AACH,KAFM,CAAP;AAGH,GAjCD;;AAkCAxE,EAAAA,YAAY,CAACtF,SAAb,CAAuBiG,kBAAvB,GAA4C,YAAY;AACpD,WAAO,KAAKJ,kBAAL,CAAwBkE,qBAAxB,EAAP;AACH,GAFD;;AAGAzE,EAAAA,YAAY,CAACtF,SAAb,CAAuBuG,aAAvB,GAAuC,UAAUd,UAAV,EAAsB;AACzD,SAAKA,UAAL,GAAkBA,UAAlB;AACH,GAFD;;AAGAH,EAAAA,YAAY,CAACtF,SAAb,CAAuB+G,aAAvB,GAAuC,YAAY;AAC/C,WAAO,KAAKtB,UAAZ;AACH,GAFD;;AAGAH,EAAAA,YAAY,CAACtF,SAAb,CAAuBoG,WAAvB,GAAqC,UAAUhE,MAAV,EAAkB;AACnD,QAAI,KAAK2E,aAAL,OAAyB,KAA7B,EAAoC;AAChC,aAAO,IAAIiD,IAAJ,CAAS,CAAC,QAAD,EAAW5H,MAAM,CAACC,IAAP,CAAY,CAAZ,CAAX,CAAT,EAAqC;AACxC;AACA4H,QAAAA,IAAI,EAAEC,MAAM,CAACC,SAAP,CAAiBC,gBAAjB,GAAoC,KAAKtD,WAAL,EAApC,GAAyD;AAFvB,OAArC,CAAP;AAIH;;AACD,WAAO3E,wBAAwB,CAACC,MAAD,CAA/B;AACH,GARD;;AASAxB,EAAAA,UAAU,CAAC,CACPY,SAAS,CAAC,aAAD,CADF,CAAD,EAEP8D,YAAY,CAACtF,SAFN,EAEiB,aAFjB,EAEgC,KAAK,CAFrC,CAAV;;AAGAY,EAAAA,UAAU,CAAC,CACPY,SAAS,CAAC,cAAD,CADF,CAAD,EAEP8D,YAAY,CAACtF,SAFN,EAEiB,cAFjB,EAEiC,KAAK,CAFtC,CAAV;;AAGAY,EAAAA,UAAU,CAAC,CACPY,SAAS,CAAC,aAAD,CADF,CAAD,EAEP8D,YAAY,CAACtF,SAFN,EAEiB,aAFjB,EAEgC,KAAK,CAFrC,CAAV;;AAGAY,EAAAA,UAAU,CAAC,CACPY,SAAS,CAAC,gBAAD,CADF,CAAD,EAEP8D,YAAY,CAACtF,SAFN,EAEiB,gBAFjB,EAEmC,KAAK,CAFxC,CAAV;;AAGAY,EAAAA,UAAU,CAAC,CACPY,SAAS,CAAC,gBAAD,CADF,CAAD,EAEP8D,YAAY,CAACtF,SAFN,EAEiB,gBAFjB,EAEmC,KAAK,CAFxC,CAAV;;AAGAY,EAAAA,UAAU,CAAC,CACPY,SAAS,CAAC,oBAAD,CADF,CAAD,EAEP8D,YAAY,CAACtF,SAFN,EAEiB,oBAFjB,EAEuC,KAAK,CAF5C,CAAV;;AAGAY,EAAAA,UAAU,CAAC,CACPc,aADO,CAAD,EAEP4D,YAAY,CAACtF,SAFN,EAEiB,eAFjB,EAEkC,IAFlC,CAAV;;AAGAsF,EAAAA,YAAY,GAAG1E,UAAU,CAAC,CACtBa,IAAI,CAAC,cAAD,CADkB,CAAD,EAEtB6D,YAFsB,CAAzB;AAGA,SAAOA,YAAP;AACH,CAxKiC,CAwKhCxD,WAxKgC,CAAlC;;AAyKA,SAASwD,YAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Bean, PostConstruct, } from '@ag-grid-community/core';\nimport { ExcelXmlSerializingSession } from './excelXmlSerializingSession';\nimport { ExcelXlsxSerializingSession } from './excelXlsxSerializingSession';\nimport { ExcelXlsxFactory } from './excelXlsxFactory';\nimport { BaseCreator, Downloader, RowType, ZipContainer } from \"@ag-grid-community/csv-export\";\nimport { ExcelXmlFactory } from './excelXmlFactory';\nexport var getMultipleSheetsAsExcel = function (params) {\n    var data = params.data, _a = params.fontSize, fontSize = _a === void 0 ? 11 : _a, _b = params.author, author = _b === void 0 ? 'AG Grid' : _b;\n    var hasImages = ExcelXlsxFactory.images.size > 0;\n    ZipContainer.addFolders([\n        '_rels/',\n        'docProps/',\n        'xl/',\n        'xl/theme/',\n        'xl/_rels/',\n        'xl/worksheets/'\n    ]);\n    if (hasImages) {\n        ZipContainer.addFolders([\n            'xl/worksheets/_rels',\n            'xl/drawings/',\n            'xl/drawings/_rels',\n            'xl/media/',\n        ]);\n        var imgCounter_1 = 0;\n        ExcelXlsxFactory.images.forEach(function (value) {\n            var firstImage = value[0].image[0];\n            var ext = firstImage.imageType;\n            ZipContainer.addFile(\"xl/media/image\" + ++imgCounter_1 + \".\" + ext, firstImage.base64, true);\n        });\n    }\n    if (!data || data.length === 0) {\n        console.warn(\"AG Grid: Invalid params supplied to getMultipleSheetsAsExcel() - `ExcelExportParams.data` is empty.\");\n        ExcelXlsxFactory.resetFactory();\n        return;\n    }\n    var sheetLen = data.length;\n    var imageRelationCounter = 0;\n    data.forEach(function (value, idx) {\n        ZipContainer.addFile(\"xl/worksheets/sheet\" + (idx + 1) + \".xml\", value);\n        if (hasImages && ExcelXlsxFactory.worksheetImages.get(idx)) {\n            createImageRelationsForSheet(idx, imageRelationCounter++);\n        }\n    });\n    ZipContainer.addFile('xl/workbook.xml', ExcelXlsxFactory.createWorkbook());\n    ZipContainer.addFile('xl/styles.xml', ExcelXlsxFactory.createStylesheet(fontSize));\n    ZipContainer.addFile('xl/sharedStrings.xml', ExcelXlsxFactory.createSharedStrings());\n    ZipContainer.addFile('xl/theme/theme1.xml', ExcelXlsxFactory.createTheme());\n    ZipContainer.addFile('xl/_rels/workbook.xml.rels', ExcelXlsxFactory.createWorkbookRels(sheetLen));\n    ZipContainer.addFile('docProps/core.xml', ExcelXlsxFactory.createCore(author));\n    ZipContainer.addFile('[Content_Types].xml', ExcelXlsxFactory.createContentTypes(sheetLen));\n    ZipContainer.addFile('_rels/.rels', ExcelXlsxFactory.createRels());\n    ExcelXlsxFactory.resetFactory();\n    return ZipContainer.getContent('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n};\nexport var exportMultipleSheetsAsExcel = function (params) {\n    var _a = params.fileName, fileName = _a === void 0 ? 'export.xlsx' : _a;\n    var contents = getMultipleSheetsAsExcel(params);\n    if (contents) {\n        Downloader.download(fileName, contents);\n    }\n};\nvar createImageRelationsForSheet = function (sheetIndex, currentRelationIndex) {\n    var drawingFolder = 'xl/drawings';\n    var drawingFileName = drawingFolder + \"/drawing\" + (currentRelationIndex + 1) + \".xml\";\n    var relFileName = drawingFolder + \"/_rels/drawing\" + (currentRelationIndex + 1) + \".xml.rels\";\n    var worksheetRelFile = \"xl/worksheets/_rels/sheet\" + (sheetIndex + 1) + \".xml.rels\";\n    ZipContainer.addFile(relFileName, ExcelXlsxFactory.createDrawingRel(sheetIndex));\n    ZipContainer.addFile(drawingFileName, ExcelXlsxFactory.createDrawing(sheetIndex));\n    ZipContainer.addFile(worksheetRelFile, ExcelXlsxFactory.createWorksheetDrawingRel(currentRelationIndex));\n};\nvar ExcelCreator = /** @class */ (function (_super) {\n    __extends(ExcelCreator, _super);\n    function ExcelCreator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.exportMode = 'xlsx';\n        return _this;\n    }\n    ExcelCreator.prototype.postConstruct = function () {\n        this.setBeans({\n            gridSerializer: this.gridSerializer,\n            gridOptionsWrapper: this.gridOptionsWrapper\n        });\n    };\n    ExcelCreator.prototype.getDefaultExportParams = function () {\n        return this.gridOptionsWrapper.getDefaultExportParams('excel');\n    };\n    ExcelCreator.prototype.export = function (userParams) {\n        if (this.isExportSuppressed()) {\n            console.warn(\"ag-grid: Export cancelled. Export is not allowed as per your configuration.\");\n            return '';\n        }\n        var _a = this.getMergedParamsAndData(userParams), mergedParams = _a.mergedParams, data = _a.data;\n        var packageFile = this.packageFile({\n            data: [data],\n            fontSize: mergedParams.fontSize,\n            author: mergedParams.author\n        });\n        if (packageFile) {\n            Downloader.download(this.getFileName(mergedParams.fileName), packageFile);\n        }\n        return data;\n    };\n    ExcelCreator.prototype.exportDataAsExcel = function (params) {\n        var exportMode = 'xlsx';\n        if (params && params.exportMode) {\n            exportMode = params.exportMode;\n        }\n        this.setExportMode(exportMode);\n        return this.export(params);\n    };\n    ExcelCreator.prototype.getDataAsExcel = function (params) {\n        var _a = this.getMergedParamsAndData(params), mergedParams = _a.mergedParams, data = _a.data;\n        if (params && params.exportMode === 'xml') {\n            return data;\n        }\n        return this.packageFile({\n            data: [data],\n            fontSize: mergedParams.fontSize,\n            author: mergedParams.author\n        });\n    };\n    ExcelCreator.prototype.setFactoryMode = function (factoryMode, exportMode) {\n        if (exportMode === void 0) { exportMode = 'xlsx'; }\n        var factory = exportMode === 'xlsx' ? ExcelXlsxFactory : ExcelXmlFactory;\n        factory.factoryMode = factoryMode;\n    };\n    ExcelCreator.prototype.getFactoryMode = function (exportMode) {\n        var factory = exportMode === 'xlsx' ? ExcelXlsxFactory : ExcelXmlFactory;\n        return factory.factoryMode;\n    };\n    ExcelCreator.prototype.getSheetDataForExcel = function (params) {\n        return this.getMergedParamsAndData(params).data;\n    };\n    ExcelCreator.prototype.getMultipleSheetsAsExcel = function (params) {\n        return getMultipleSheetsAsExcel(params);\n    };\n    ExcelCreator.prototype.exportMultipleSheetsAsExcel = function (params) {\n        return exportMultipleSheetsAsExcel(params);\n    };\n    ExcelCreator.prototype.getMimeType = function () {\n        return this.getExportMode() === 'xml' ? 'application/vnd.ms-excel' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n    };\n    ExcelCreator.prototype.getDefaultFileName = function () {\n        return \"export.\" + this.getExportMode();\n    };\n    ExcelCreator.prototype.getDefaultFileExtension = function () {\n        return this.getExportMode();\n    };\n    ExcelCreator.prototype.createSerializingSession = function (params) {\n        var _a = this, columnModel = _a.columnModel, valueService = _a.valueService, gridOptionsWrapper = _a.gridOptionsWrapper;\n        var isXlsx = this.getExportMode() === 'xlsx';\n        var sheetName = 'ag-grid';\n        if (params.sheetName != null) {\n            sheetName = _.utf8_encode(params.sheetName.toString().substr(0, 31));\n        }\n        var config = __assign(__assign({}, params), { sheetName: sheetName,\n            columnModel: columnModel,\n            valueService: valueService,\n            gridOptionsWrapper: gridOptionsWrapper, headerRowHeight: params.headerRowHeight || params.rowHeight, baseExcelStyles: this.gridOptions.excelStyles || [], styleLinker: this.styleLinker.bind(this) });\n        return new (isXlsx ? ExcelXlsxSerializingSession : ExcelXmlSerializingSession)(config);\n    };\n    ExcelCreator.prototype.styleLinker = function (rowType, rowIndex, value, column, node) {\n        if (rowType === RowType.HEADER) {\n            return [\"header\"];\n        }\n        if (rowType === RowType.HEADER_GROUPING) {\n            return [\"header\", \"headerGroup\"];\n        }\n        var styles = this.gridOptions.excelStyles;\n        var applicableStyles = [\"cell\"];\n        if (!styles || !styles.length) {\n            return applicableStyles;\n        }\n        var styleIds = styles.map(function (it) {\n            return it.id;\n        });\n        this.stylingService.processAllCellClasses(column.getColDef(), {\n            value: value,\n            data: node.data,\n            node: node,\n            colDef: column.getColDef(),\n            rowIndex: rowIndex,\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi(),\n            $scope: null,\n            context: this.gridOptionsWrapper.getContext()\n        }, function (className) {\n            if (styleIds.indexOf(className) > -1) {\n                applicableStyles.push(className);\n            }\n        });\n        return applicableStyles.sort(function (left, right) {\n            return (styleIds.indexOf(left) < styleIds.indexOf(right)) ? -1 : 1;\n        });\n    };\n    ExcelCreator.prototype.isExportSuppressed = function () {\n        return this.gridOptionsWrapper.isSuppressExcelExport();\n    };\n    ExcelCreator.prototype.setExportMode = function (exportMode) {\n        this.exportMode = exportMode;\n    };\n    ExcelCreator.prototype.getExportMode = function () {\n        return this.exportMode;\n    };\n    ExcelCreator.prototype.packageFile = function (params) {\n        if (this.getExportMode() === 'xml') {\n            return new Blob([\"\\ufeff\", params.data[0]], {\n                // @ts-ignore\n                type: window.navigator.msSaveOrOpenBlob ? this.getMimeType() : 'octet/stream'\n            });\n        }\n        return getMultipleSheetsAsExcel(params);\n    };\n    __decorate([\n        Autowired('columnModel')\n    ], ExcelCreator.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('valueService')\n    ], ExcelCreator.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('gridOptions')\n    ], ExcelCreator.prototype, \"gridOptions\", void 0);\n    __decorate([\n        Autowired('stylingService')\n    ], ExcelCreator.prototype, \"stylingService\", void 0);\n    __decorate([\n        Autowired('gridSerializer')\n    ], ExcelCreator.prototype, \"gridSerializer\", void 0);\n    __decorate([\n        Autowired('gridOptionsWrapper')\n    ], ExcelCreator.prototype, \"gridOptionsWrapper\", void 0);\n    __decorate([\n        PostConstruct\n    ], ExcelCreator.prototype, \"postConstruct\", null);\n    ExcelCreator = __decorate([\n        Bean('excelCreator')\n    ], ExcelCreator);\n    return ExcelCreator;\n}(BaseCreator));\nexport { ExcelCreator };\n"]},"metadata":{},"sourceType":"module"}