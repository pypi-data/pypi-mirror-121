{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { _ } from '@ag-grid-community/core';\nimport numberFormatsFactory from './numberFormats';\nimport fontsFactory from './fonts';\nimport fillsFactory from './fills';\nimport bordersFactory from './borders';\nimport cellStylesXfsFactory from './cellStyleXfs';\nimport cellXfsFactory from './cellXfs';\nimport cellStylesFactory from './cellStyles';\nimport { convertLegacyBorder, convertLegacyColor, convertLegacyPattern } from '../../../assets/excelLegacyConvert';\nimport { numberFormatMap } from '../../../assets/excelConstants';\nimport { getFontFamilyId } from '../../../assets/excelUtils';\nvar stylesMap;\nvar registeredNumberFmts;\nvar registeredFonts;\nvar registeredFills;\nvar registeredBorders;\nvar registeredCellStyleXfs;\nvar registeredCellXfs;\nvar registeredCellStyles;\nvar currentSheet;\n\nvar getStyleName = function getStyleName(name, currentSheet) {\n  if (name.indexOf('mixedStyle') !== -1 && currentSheet > 1) {\n    name += \"_\" + currentSheet;\n  }\n\n  return name;\n};\n\nvar resetStylesheetValues = function resetStylesheetValues() {\n  stylesMap = {\n    base: 0\n  };\n  registeredNumberFmts = [];\n  registeredFonts = [{\n    fontName: 'Calibri',\n    colorTheme: '1',\n    family: '2',\n    scheme: 'minor'\n  }];\n  registeredFills = [{\n    patternType: 'none'\n  }, {\n    patternType: 'gray125'\n  }];\n  registeredBorders = [{\n    left: undefined,\n    right: undefined,\n    top: undefined,\n    bottom: undefined,\n    diagonal: undefined\n  }];\n  registeredCellStyleXfs = [{\n    borderId: 0,\n    fillId: 0,\n    fontId: 0,\n    numFmtId: 0\n  }];\n  registeredCellXfs = [{\n    borderId: 0,\n    fillId: 0,\n    fontId: 0,\n    numFmtId: 0,\n    xfId: 0\n  }];\n  registeredCellStyles = [{\n    builtinId: 0,\n    name: 'Normal',\n    xfId: 0\n  }];\n};\n\nvar registerFill = function registerFill(fill) {\n  var convertedPattern = convertLegacyPattern(fill.pattern);\n  var convertedFillColor = convertLegacyColor(fill.color);\n  var convertedPatternColor = convertLegacyColor(fill.patternColor);\n\n  var pos = _.findIndex(registeredFills, function (currentFill) {\n    var patternType = currentFill.patternType,\n        fgRgb = currentFill.fgRgb,\n        bgRgb = currentFill.bgRgb;\n\n    if (patternType != convertedPattern || fgRgb != convertedFillColor || bgRgb != convertedPatternColor) {\n      return false;\n    }\n\n    return true;\n  });\n\n  if (pos === -1) {\n    pos = registeredFills.length;\n    registeredFills.push({\n      patternType: convertedPattern,\n      fgRgb: convertedFillColor,\n      bgRgb: convertedPatternColor\n    });\n  }\n\n  return pos;\n};\n\nvar registerNumberFmt = function registerNumberFmt(format) {\n  format = _.utf8_encode(format);\n\n  if (numberFormatMap[format]) {\n    return numberFormatMap[format];\n  }\n\n  var pos = _.findIndex(registeredNumberFmts, function (currentFormat) {\n    return currentFormat.formatCode === format;\n  });\n\n  if (pos === -1) {\n    pos = registeredNumberFmts.length + 164;\n    registeredNumberFmts.push({\n      formatCode: format,\n      numFmtId: pos\n    });\n  } else {\n    pos = registeredNumberFmts[pos].numFmtId;\n  }\n\n  return pos;\n};\n\nvar registerBorders = function registerBorders(borders) {\n  var borderBottom = borders.borderBottom,\n      borderTop = borders.borderTop,\n      borderLeft = borders.borderLeft,\n      borderRight = borders.borderRight;\n  var bottomStyle;\n  var topStyle;\n  var leftStyle;\n  var rightStyle;\n  var bottomColor;\n  var topColor;\n  var leftColor;\n  var rightColor;\n\n  if (borderLeft) {\n    leftStyle = convertLegacyBorder(borderLeft.lineStyle, borderLeft.weight);\n    leftColor = convertLegacyColor(borderLeft.color);\n  }\n\n  if (borderRight) {\n    rightStyle = convertLegacyBorder(borderRight.lineStyle, borderRight.weight);\n    rightColor = convertLegacyColor(borderRight.color);\n  }\n\n  if (borderBottom) {\n    bottomStyle = convertLegacyBorder(borderBottom.lineStyle, borderBottom.weight);\n    bottomColor = convertLegacyColor(borderBottom.color);\n  }\n\n  if (borderTop) {\n    topStyle = convertLegacyBorder(borderTop.lineStyle, borderTop.weight);\n    topColor = convertLegacyColor(borderTop.color);\n  }\n\n  var pos = _.findIndex(registeredBorders, function (currentBorder) {\n    var left = currentBorder.left,\n        right = currentBorder.right,\n        top = currentBorder.top,\n        bottom = currentBorder.bottom;\n\n    if (!left && (leftStyle || leftColor)) {\n      return false;\n    }\n\n    if (!right && (rightStyle || rightColor)) {\n      return false;\n    }\n\n    if (!top && (topStyle || topColor)) {\n      return false;\n    }\n\n    if (!bottom && (bottomStyle || bottomColor)) {\n      return false;\n    }\n\n    var _a = left || {},\n        clS = _a.style,\n        clC = _a.color;\n\n    var _b = right || {},\n        crS = _b.style,\n        crC = _b.color;\n\n    var _c = top || {},\n        ctS = _c.style,\n        ctC = _c.color;\n\n    var _d = bottom || {},\n        cbS = _d.style,\n        cbC = _d.color;\n\n    if (clS != leftStyle || clC != leftColor) {\n      return false;\n    }\n\n    if (crS != rightStyle || crC != rightColor) {\n      return false;\n    }\n\n    if (ctS != topStyle || ctC != topColor) {\n      return false;\n    }\n\n    if (cbS != bottomStyle || cbC != bottomColor) {\n      return false;\n    }\n\n    return true;\n  });\n\n  if (pos === -1) {\n    pos = registeredBorders.length;\n    registeredBorders.push({\n      left: {\n        style: leftStyle,\n        color: leftColor\n      },\n      right: {\n        style: rightStyle,\n        color: rightColor\n      },\n      top: {\n        style: topStyle,\n        color: topColor\n      },\n      bottom: {\n        style: bottomStyle,\n        color: bottomColor\n      },\n      diagonal: {\n        style: undefined,\n        color: undefined\n      }\n    });\n  }\n\n  return pos;\n};\n\nvar registerFont = function registerFont(font) {\n  var _a = font.fontName,\n      name = _a === void 0 ? 'Calibri' : _a,\n      color = font.color,\n      size = font.size,\n      bold = font.bold,\n      italic = font.italic,\n      outline = font.outline,\n      shadow = font.shadow,\n      strikeThrough = font.strikeThrough,\n      underline = font.underline,\n      family = font.family,\n      verticalAlign = font.verticalAlign;\n  var utf8Name = name ? _.utf8_encode(name) : name;\n  var convertedColor = convertLegacyColor(color);\n  var familyId = getFontFamilyId(family);\n  var convertedUnderline = underline ? underline.toLocaleLowerCase() : undefined;\n  var convertedVerticalAlign = verticalAlign ? verticalAlign.toLocaleLowerCase() : undefined;\n\n  var pos = _.findIndex(registeredFonts, function (currentFont) {\n    if (currentFont.fontName != utf8Name || currentFont.color != convertedColor || currentFont.size != size || currentFont.bold != bold || currentFont.italic != italic || currentFont.outline != outline || currentFont.shadow != shadow || currentFont.strikeThrough != strikeThrough || currentFont.underline != convertedUnderline || currentFont.verticalAlign != convertedVerticalAlign || // @ts-ignore\n    currentFont.family != familyId) {\n      return false;\n    }\n\n    return true;\n  });\n\n  if (pos === -1) {\n    pos = registeredFonts.length;\n    registeredFonts.push({\n      fontName: utf8Name,\n      color: convertedColor,\n      size: size,\n      bold: bold,\n      italic: italic,\n      outline: outline,\n      shadow: shadow,\n      strikeThrough: strikeThrough,\n      underline: convertedUnderline,\n      verticalAlign: convertedVerticalAlign,\n      family: familyId != null ? familyId.toString() : undefined\n    });\n  }\n\n  return pos;\n};\n\nvar registerStyle = function registerStyle(config) {\n  var alignment = config.alignment,\n      borders = config.borders,\n      font = config.font,\n      interior = config.interior,\n      numberFormat = config.numberFormat,\n      protection = config.protection;\n  var id = config.id;\n  var currentFill = 0;\n  var currentBorder = 0;\n  var currentFont = 0;\n  var currentNumberFmt = 0;\n\n  if (!id) {\n    return;\n  }\n\n  id = getStyleName(id, currentSheet);\n\n  if (stylesMap[id] != undefined) {\n    return;\n  }\n\n  if (interior) {\n    currentFill = registerFill(interior);\n  }\n\n  if (borders) {\n    currentBorder = registerBorders(borders);\n  }\n\n  if (font) {\n    currentFont = registerFont(font);\n  }\n\n  if (numberFormat) {\n    currentNumberFmt = registerNumberFmt(numberFormat.format);\n  }\n\n  stylesMap[id] = registeredCellXfs.length;\n  registeredCellXfs.push({\n    alignment: alignment,\n    borderId: currentBorder || 0,\n    fillId: currentFill || 0,\n    fontId: currentFont || 0,\n    numFmtId: currentNumberFmt || 0,\n    protection: protection,\n    xfId: 0\n  });\n};\n\nvar stylesheetFactory = {\n  getTemplate: function getTemplate(defaultFontSize) {\n    var numberFormats = numberFormatsFactory.getTemplate(registeredNumberFmts);\n    var fonts = fontsFactory.getTemplate(registeredFonts.map(function (font) {\n      return __assign(__assign({}, font), {\n        size: font.size != null ? font.size : defaultFontSize\n      });\n    }));\n    var fills = fillsFactory.getTemplate(registeredFills);\n    var borders = bordersFactory.getTemplate(registeredBorders);\n    var cellStylesXfs = cellStylesXfsFactory.getTemplate(registeredCellStyleXfs);\n    var cellXfs = cellXfsFactory.getTemplate(registeredCellXfs);\n    var cellStyles = cellStylesFactory.getTemplate(registeredCellStyles);\n    resetStylesheetValues();\n    return {\n      name: 'styleSheet',\n      properties: {\n        rawMap: {\n          'mc:Ignorable': 'x14ac x16r2 xr',\n          'xmlns': 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n          'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n          'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n          'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n          'xmlns:xr': 'http://schemas.microsoft.com/office/spreadsheetml/2014/revision'\n        }\n      },\n      children: [numberFormats, fonts, fills, borders, cellStylesXfs, cellXfs, cellStyles, {\n        name: 'tableStyles',\n        properties: {\n          rawMap: {\n            count: 0,\n            defaultPivotStyle: 'PivotStyleLight16',\n            defaultTableStyle: 'TableStyleMedium2'\n          }\n        }\n      }]\n    };\n  }\n};\nexport var getStyleId = function getStyleId(name, currentSheet) {\n  return stylesMap[getStyleName(name, currentSheet)] || 0;\n};\nexport var registerStyles = function registerStyles(styles, _currentSheet) {\n  currentSheet = _currentSheet;\n\n  if (currentSheet === 1) {\n    resetStylesheetValues();\n  }\n\n  styles.forEach(registerStyle);\n};\nexport default stylesheetFactory;","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/files/ooxml/styles/stylesheet.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","_","numberFormatsFactory","fontsFactory","fillsFactory","bordersFactory","cellStylesXfsFactory","cellXfsFactory","cellStylesFactory","convertLegacyBorder","convertLegacyColor","convertLegacyPattern","numberFormatMap","getFontFamilyId","stylesMap","registeredNumberFmts","registeredFonts","registeredFills","registeredBorders","registeredCellStyleXfs","registeredCellXfs","registeredCellStyles","currentSheet","getStyleName","name","indexOf","resetStylesheetValues","base","fontName","colorTheme","family","scheme","patternType","left","undefined","right","top","bottom","diagonal","borderId","fillId","fontId","numFmtId","xfId","builtinId","registerFill","fill","convertedPattern","pattern","convertedFillColor","color","convertedPatternColor","patternColor","pos","findIndex","currentFill","fgRgb","bgRgb","push","registerNumberFmt","format","utf8_encode","currentFormat","formatCode","registerBorders","borders","borderBottom","borderTop","borderLeft","borderRight","bottomStyle","topStyle","leftStyle","rightStyle","bottomColor","topColor","leftColor","rightColor","lineStyle","weight","currentBorder","_a","clS","style","clC","_b","crS","crC","_c","ctS","ctC","_d","cbS","cbC","registerFont","font","size","bold","italic","outline","shadow","strikeThrough","underline","verticalAlign","utf8Name","convertedColor","familyId","convertedUnderline","toLocaleLowerCase","convertedVerticalAlign","currentFont","toString","registerStyle","config","alignment","interior","numberFormat","protection","id","currentNumberFmt","stylesheetFactory","getTemplate","defaultFontSize","numberFormats","fonts","map","fills","cellStylesXfs","cellXfs","cellStyles","properties","rawMap","children","count","defaultPivotStyle","defaultTableStyle","getStyleId","registerStyles","styles","_currentSheet","forEach"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,CAAT,QAAkB,yBAAlB;AACA,OAAOC,oBAAP,MAAiC,iBAAjC;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,SAAzB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,oBAAP,MAAiC,gBAAjC;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,EAAkDC,oBAAlD,QAA8E,oCAA9E;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,IAAIC,SAAJ;AACA,IAAIC,oBAAJ;AACA,IAAIC,eAAJ;AACA,IAAIC,eAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,sBAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,oBAAJ;AACA,IAAIC,YAAJ;;AACA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAAUC,IAAV,EAAgBF,YAAhB,EAA8B;AAC7C,MAAIE,IAAI,CAACC,OAAL,CAAa,YAAb,MAA+B,CAAC,CAAhC,IAAqCH,YAAY,GAAG,CAAxD,EAA2D;AACvDE,IAAAA,IAAI,IAAI,MAAMF,YAAd;AACH;;AACD,SAAOE,IAAP;AACH,CALD;;AAMA,IAAIE,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAY;AACpCZ,EAAAA,SAAS,GAAG;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAAZ;AACAZ,EAAAA,oBAAoB,GAAG,EAAvB;AACAC,EAAAA,eAAe,GAAG,CAAC;AAAEY,IAAAA,QAAQ,EAAE,SAAZ;AAAuBC,IAAAA,UAAU,EAAE,GAAnC;AAAwCC,IAAAA,MAAM,EAAE,GAAhD;AAAqDC,IAAAA,MAAM,EAAE;AAA7D,GAAD,CAAlB;AACAd,EAAAA,eAAe,GAAG,CAAC;AAAEe,IAAAA,WAAW,EAAE;AAAf,GAAD,EAA2B;AAAEA,IAAAA,WAAW,EAAE;AAAf,GAA3B,CAAlB;AACAd,EAAAA,iBAAiB,GAAG,CAAC;AAAEe,IAAAA,IAAI,EAAEC,SAAR;AAAmBC,IAAAA,KAAK,EAAED,SAA1B;AAAqCE,IAAAA,GAAG,EAAEF,SAA1C;AAAqDG,IAAAA,MAAM,EAAEH,SAA7D;AAAwEI,IAAAA,QAAQ,EAAEJ;AAAlF,GAAD,CAApB;AACAf,EAAAA,sBAAsB,GAAG,CAAC;AAAEoB,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,MAAM,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE,CAAlC;AAAqCC,IAAAA,QAAQ,EAAE;AAA/C,GAAD,CAAzB;AACAtB,EAAAA,iBAAiB,GAAG,CAAC;AAAEmB,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,MAAM,EAAE,CAAvB;AAA0BC,IAAAA,MAAM,EAAE,CAAlC;AAAqCC,IAAAA,QAAQ,EAAE,CAA/C;AAAkDC,IAAAA,IAAI,EAAE;AAAxD,GAAD,CAApB;AACAtB,EAAAA,oBAAoB,GAAG,CAAC;AAAEuB,IAAAA,SAAS,EAAE,CAAb;AAAgBpB,IAAAA,IAAI,EAAE,QAAtB;AAAgCmB,IAAAA,IAAI,EAAE;AAAtC,GAAD,CAAvB;AACH,CATD;;AAUA,IAAIE,YAAY,GAAG,SAAfA,YAAe,CAAUC,IAAV,EAAgB;AAC/B,MAAIC,gBAAgB,GAAGpC,oBAAoB,CAACmC,IAAI,CAACE,OAAN,CAA3C;AACA,MAAIC,kBAAkB,GAAGvC,kBAAkB,CAACoC,IAAI,CAACI,KAAN,CAA3C;AACA,MAAIC,qBAAqB,GAAGzC,kBAAkB,CAACoC,IAAI,CAACM,YAAN,CAA9C;;AACA,MAAIC,GAAG,GAAGpD,CAAC,CAACqD,SAAF,CAAYrC,eAAZ,EAA6B,UAAUsC,WAAV,EAAuB;AAC1D,QAAIvB,WAAW,GAAGuB,WAAW,CAACvB,WAA9B;AAAA,QAA2CwB,KAAK,GAAGD,WAAW,CAACC,KAA/D;AAAA,QAAsEC,KAAK,GAAGF,WAAW,CAACE,KAA1F;;AACA,QAAIzB,WAAW,IAAIe,gBAAf,IACAS,KAAK,IAAIP,kBADT,IAEAQ,KAAK,IAAIN,qBAFb,EAEoC;AAChC,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GARS,CAAV;;AASA,MAAIE,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZA,IAAAA,GAAG,GAAGpC,eAAe,CAACtB,MAAtB;AACAsB,IAAAA,eAAe,CAACyC,IAAhB,CAAqB;AAAE1B,MAAAA,WAAW,EAAEe,gBAAf;AAAiCS,MAAAA,KAAK,EAAEP,kBAAxC;AAA4DQ,MAAAA,KAAK,EAAEN;AAAnE,KAArB;AACH;;AACD,SAAOE,GAAP;AACH,CAlBD;;AAmBA,IAAIM,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,MAAV,EAAkB;AACtCA,EAAAA,MAAM,GAAG3D,CAAC,CAAC4D,WAAF,CAAcD,MAAd,CAAT;;AACA,MAAIhD,eAAe,CAACgD,MAAD,CAAnB,EAA6B;AACzB,WAAOhD,eAAe,CAACgD,MAAD,CAAtB;AACH;;AACD,MAAIP,GAAG,GAAGpD,CAAC,CAACqD,SAAF,CAAYvC,oBAAZ,EAAkC,UAAU+C,aAAV,EAAyB;AAAE,WAAOA,aAAa,CAACC,UAAd,KAA6BH,MAApC;AAA6C,GAA1G,CAAV;;AACA,MAAIP,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZA,IAAAA,GAAG,GAAGtC,oBAAoB,CAACpB,MAArB,GAA8B,GAApC;AACAoB,IAAAA,oBAAoB,CAAC2C,IAArB,CAA0B;AAAEK,MAAAA,UAAU,EAAEH,MAAd;AAAsBlB,MAAAA,QAAQ,EAAEW;AAAhC,KAA1B;AACH,GAHD,MAIK;AACDA,IAAAA,GAAG,GAAGtC,oBAAoB,CAACsC,GAAD,CAApB,CAA0BX,QAAhC;AACH;;AACD,SAAOW,GAAP;AACH,CAdD;;AAeA,IAAIW,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,OAAV,EAAmB;AACrC,MAAIC,YAAY,GAAGD,OAAO,CAACC,YAA3B;AAAA,MAAyCC,SAAS,GAAGF,OAAO,CAACE,SAA7D;AAAA,MAAwEC,UAAU,GAAGH,OAAO,CAACG,UAA7F;AAAA,MAAyGC,WAAW,GAAGJ,OAAO,CAACI,WAA/H;AACA,MAAIC,WAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAJ;;AACA,MAAIT,UAAJ,EAAgB;AACZI,IAAAA,SAAS,GAAG/D,mBAAmB,CAAC2D,UAAU,CAACU,SAAZ,EAAuBV,UAAU,CAACW,MAAlC,CAA/B;AACAH,IAAAA,SAAS,GAAGlE,kBAAkB,CAAC0D,UAAU,CAAClB,KAAZ,CAA9B;AACH;;AACD,MAAImB,WAAJ,EAAiB;AACbI,IAAAA,UAAU,GAAGhE,mBAAmB,CAAC4D,WAAW,CAACS,SAAb,EAAwBT,WAAW,CAACU,MAApC,CAAhC;AACAF,IAAAA,UAAU,GAAGnE,kBAAkB,CAAC2D,WAAW,CAACnB,KAAb,CAA/B;AACH;;AACD,MAAIgB,YAAJ,EAAkB;AACdI,IAAAA,WAAW,GAAG7D,mBAAmB,CAACyD,YAAY,CAACY,SAAd,EAAyBZ,YAAY,CAACa,MAAtC,CAAjC;AACAL,IAAAA,WAAW,GAAGhE,kBAAkB,CAACwD,YAAY,CAAChB,KAAd,CAAhC;AACH;;AACD,MAAIiB,SAAJ,EAAe;AACXI,IAAAA,QAAQ,GAAG9D,mBAAmB,CAAC0D,SAAS,CAACW,SAAX,EAAsBX,SAAS,CAACY,MAAhC,CAA9B;AACAJ,IAAAA,QAAQ,GAAGjE,kBAAkB,CAACyD,SAAS,CAACjB,KAAX,CAA7B;AACH;;AACD,MAAIG,GAAG,GAAGpD,CAAC,CAACqD,SAAF,CAAYpC,iBAAZ,EAA+B,UAAU8D,aAAV,EAAyB;AAC9D,QAAI/C,IAAI,GAAG+C,aAAa,CAAC/C,IAAzB;AAAA,QAA+BE,KAAK,GAAG6C,aAAa,CAAC7C,KAArD;AAAA,QAA4DC,GAAG,GAAG4C,aAAa,CAAC5C,GAAhF;AAAA,QAAqFC,MAAM,GAAG2C,aAAa,CAAC3C,MAA5G;;AACA,QAAI,CAACJ,IAAD,KAAUuC,SAAS,IAAII,SAAvB,CAAJ,EAAuC;AACnC,aAAO,KAAP;AACH;;AACD,QAAI,CAACzC,KAAD,KAAWsC,UAAU,IAAII,UAAzB,CAAJ,EAA0C;AACtC,aAAO,KAAP;AACH;;AACD,QAAI,CAACzC,GAAD,KAASmC,QAAQ,IAAII,QAArB,CAAJ,EAAoC;AAChC,aAAO,KAAP;AACH;;AACD,QAAI,CAACtC,MAAD,KAAYiC,WAAW,IAAII,WAA3B,CAAJ,EAA6C;AACzC,aAAO,KAAP;AACH;;AACD,QAAIO,EAAE,GAAGhD,IAAI,IAAI,EAAjB;AAAA,QAAqBiD,GAAG,GAAGD,EAAE,CAACE,KAA9B;AAAA,QAAqCC,GAAG,GAAGH,EAAE,CAAC/B,KAA9C;;AACA,QAAImC,EAAE,GAAGlD,KAAK,IAAI,EAAlB;AAAA,QAAsBmD,GAAG,GAAGD,EAAE,CAACF,KAA/B;AAAA,QAAsCI,GAAG,GAAGF,EAAE,CAACnC,KAA/C;;AACA,QAAIsC,EAAE,GAAGpD,GAAG,IAAI,EAAhB;AAAA,QAAoBqD,GAAG,GAAGD,EAAE,CAACL,KAA7B;AAAA,QAAoCO,GAAG,GAAGF,EAAE,CAACtC,KAA7C;;AACA,QAAIyC,EAAE,GAAGtD,MAAM,IAAI,EAAnB;AAAA,QAAuBuD,GAAG,GAAGD,EAAE,CAACR,KAAhC;AAAA,QAAuCU,GAAG,GAAGF,EAAE,CAACzC,KAAhD;;AACA,QAAIgC,GAAG,IAAIV,SAAP,IAAoBY,GAAG,IAAIR,SAA/B,EAA0C;AACtC,aAAO,KAAP;AACH;;AACD,QAAIU,GAAG,IAAIb,UAAP,IAAqBc,GAAG,IAAIV,UAAhC,EAA4C;AACxC,aAAO,KAAP;AACH;;AACD,QAAIY,GAAG,IAAIlB,QAAP,IAAmBmB,GAAG,IAAIf,QAA9B,EAAwC;AACpC,aAAO,KAAP;AACH;;AACD,QAAIiB,GAAG,IAAItB,WAAP,IAAsBuB,GAAG,IAAInB,WAAjC,EAA8C;AAC1C,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GA/BS,CAAV;;AAgCA,MAAIrB,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZA,IAAAA,GAAG,GAAGnC,iBAAiB,CAACvB,MAAxB;AACAuB,IAAAA,iBAAiB,CAACwC,IAAlB,CAAuB;AACnBzB,MAAAA,IAAI,EAAE;AACFkD,QAAAA,KAAK,EAAEX,SADL;AACgBtB,QAAAA,KAAK,EAAE0B;AADvB,OADa;AAInBzC,MAAAA,KAAK,EAAE;AACHgD,QAAAA,KAAK,EAAEV,UADJ;AACgBvB,QAAAA,KAAK,EAAE2B;AADvB,OAJY;AAOnBzC,MAAAA,GAAG,EAAE;AACD+C,QAAAA,KAAK,EAAEZ,QADN;AACgBrB,QAAAA,KAAK,EAAEyB;AADvB,OAPc;AAUnBtC,MAAAA,MAAM,EAAE;AACJ8C,QAAAA,KAAK,EAAEb,WADH;AACgBpB,QAAAA,KAAK,EAAEwB;AADvB,OAVW;AAanBpC,MAAAA,QAAQ,EAAE;AACN6C,QAAAA,KAAK,EAAEjD,SADD;AAENgB,QAAAA,KAAK,EAAEhB;AAFD;AAbS,KAAvB;AAkBH;;AACD,SAAOmB,GAAP;AACH,CAhFD;;AAiFA,IAAIyC,YAAY,GAAG,SAAfA,YAAe,CAAUC,IAAV,EAAgB;AAC/B,MAAId,EAAE,GAAGc,IAAI,CAACnE,QAAd;AAAA,MAAwBJ,IAAI,GAAGyD,EAAE,KAAK,KAAK,CAAZ,GAAgB,SAAhB,GAA4BA,EAA3D;AAAA,MAA+D/B,KAAK,GAAG6C,IAAI,CAAC7C,KAA5E;AAAA,MAAmF8C,IAAI,GAAGD,IAAI,CAACC,IAA/F;AAAA,MAAqGC,IAAI,GAAGF,IAAI,CAACE,IAAjH;AAAA,MAAuHC,MAAM,GAAGH,IAAI,CAACG,MAArI;AAAA,MAA6IC,OAAO,GAAGJ,IAAI,CAACI,OAA5J;AAAA,MAAqKC,MAAM,GAAGL,IAAI,CAACK,MAAnL;AAAA,MAA2LC,aAAa,GAAGN,IAAI,CAACM,aAAhN;AAAA,MAA+NC,SAAS,GAAGP,IAAI,CAACO,SAAhP;AAAA,MAA2PxE,MAAM,GAAGiE,IAAI,CAACjE,MAAzQ;AAAA,MAAiRyE,aAAa,GAAGR,IAAI,CAACQ,aAAtS;AACA,MAAIC,QAAQ,GAAGhF,IAAI,GAAGvB,CAAC,CAAC4D,WAAF,CAAcrC,IAAd,CAAH,GAAyBA,IAA5C;AACA,MAAIiF,cAAc,GAAG/F,kBAAkB,CAACwC,KAAD,CAAvC;AACA,MAAIwD,QAAQ,GAAG7F,eAAe,CAACiB,MAAD,CAA9B;AACA,MAAI6E,kBAAkB,GAAGL,SAAS,GAAGA,SAAS,CAACM,iBAAV,EAAH,GAAmC1E,SAArE;AACA,MAAI2E,sBAAsB,GAAGN,aAAa,GAAGA,aAAa,CAACK,iBAAd,EAAH,GAAuC1E,SAAjF;;AACA,MAAImB,GAAG,GAAGpD,CAAC,CAACqD,SAAF,CAAYtC,eAAZ,EAA6B,UAAU8F,WAAV,EAAuB;AAC1D,QAAIA,WAAW,CAAClF,QAAZ,IAAwB4E,QAAxB,IACAM,WAAW,CAAC5D,KAAZ,IAAqBuD,cADrB,IAEAK,WAAW,CAACd,IAAZ,IAAoBA,IAFpB,IAGAc,WAAW,CAACb,IAAZ,IAAoBA,IAHpB,IAIAa,WAAW,CAACZ,MAAZ,IAAsBA,MAJtB,IAKAY,WAAW,CAACX,OAAZ,IAAuBA,OALvB,IAMAW,WAAW,CAACV,MAAZ,IAAsBA,MANtB,IAOAU,WAAW,CAACT,aAAZ,IAA6BA,aAP7B,IAQAS,WAAW,CAACR,SAAZ,IAAyBK,kBARzB,IASAG,WAAW,CAACP,aAAZ,IAA6BM,sBAT7B,IAUA;AACAC,IAAAA,WAAW,CAAChF,MAAZ,IAAsB4E,QAX1B,EAWoC;AAChC,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GAhBS,CAAV;;AAiBA,MAAIrD,GAAG,KAAK,CAAC,CAAb,EAAgB;AACZA,IAAAA,GAAG,GAAGrC,eAAe,CAACrB,MAAtB;AACAqB,IAAAA,eAAe,CAAC0C,IAAhB,CAAqB;AACjB9B,MAAAA,QAAQ,EAAE4E,QADO;AAEjBtD,MAAAA,KAAK,EAAEuD,cAFU;AAGjBT,MAAAA,IAAI,EAAEA,IAHW;AAIjBC,MAAAA,IAAI,EAAEA,IAJW;AAKjBC,MAAAA,MAAM,EAAEA,MALS;AAMjBC,MAAAA,OAAO,EAAEA,OANQ;AAOjBC,MAAAA,MAAM,EAAEA,MAPS;AAQjBC,MAAAA,aAAa,EAAEA,aARE;AASjBC,MAAAA,SAAS,EAAEK,kBATM;AAUjBJ,MAAAA,aAAa,EAAEM,sBAVE;AAWjB/E,MAAAA,MAAM,EAAE4E,QAAQ,IAAI,IAAZ,GAAmBA,QAAQ,CAACK,QAAT,EAAnB,GAAyC7E;AAXhC,KAArB;AAaH;;AACD,SAAOmB,GAAP;AACH,CAzCD;;AA0CA,IAAI2D,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,MAAV,EAAkB;AAClC,MAAIC,SAAS,GAAGD,MAAM,CAACC,SAAvB;AAAA,MAAkCjD,OAAO,GAAGgD,MAAM,CAAChD,OAAnD;AAAA,MAA4D8B,IAAI,GAAGkB,MAAM,CAAClB,IAA1E;AAAA,MAAgFoB,QAAQ,GAAGF,MAAM,CAACE,QAAlG;AAAA,MAA4GC,YAAY,GAAGH,MAAM,CAACG,YAAlI;AAAA,MAAgJC,UAAU,GAAGJ,MAAM,CAACI,UAApK;AACA,MAAIC,EAAE,GAAGL,MAAM,CAACK,EAAhB;AACA,MAAI/D,WAAW,GAAG,CAAlB;AACA,MAAIyB,aAAa,GAAG,CAApB;AACA,MAAI8B,WAAW,GAAG,CAAlB;AACA,MAAIS,gBAAgB,GAAG,CAAvB;;AACA,MAAI,CAACD,EAAL,EAAS;AACL;AACH;;AACDA,EAAAA,EAAE,GAAG/F,YAAY,CAAC+F,EAAD,EAAKhG,YAAL,CAAjB;;AACA,MAAIR,SAAS,CAACwG,EAAD,CAAT,IAAiBpF,SAArB,EAAgC;AAC5B;AACH;;AACD,MAAIiF,QAAJ,EAAc;AACV5D,IAAAA,WAAW,GAAGV,YAAY,CAACsE,QAAD,CAA1B;AACH;;AACD,MAAIlD,OAAJ,EAAa;AACTe,IAAAA,aAAa,GAAGhB,eAAe,CAACC,OAAD,CAA/B;AACH;;AACD,MAAI8B,IAAJ,EAAU;AACNe,IAAAA,WAAW,GAAGhB,YAAY,CAACC,IAAD,CAA1B;AACH;;AACD,MAAIqB,YAAJ,EAAkB;AACdG,IAAAA,gBAAgB,GAAG5D,iBAAiB,CAACyD,YAAY,CAACxD,MAAd,CAApC;AACH;;AACD9C,EAAAA,SAAS,CAACwG,EAAD,CAAT,GAAgBlG,iBAAiB,CAACzB,MAAlC;AACAyB,EAAAA,iBAAiB,CAACsC,IAAlB,CAAuB;AACnBwD,IAAAA,SAAS,EAAEA,SADQ;AAEnB3E,IAAAA,QAAQ,EAAEyC,aAAa,IAAI,CAFR;AAGnBxC,IAAAA,MAAM,EAAEe,WAAW,IAAI,CAHJ;AAInBd,IAAAA,MAAM,EAAEqE,WAAW,IAAI,CAJJ;AAKnBpE,IAAAA,QAAQ,EAAE6E,gBAAgB,IAAI,CALX;AAMnBF,IAAAA,UAAU,EAAEA,UANO;AAOnB1E,IAAAA,IAAI,EAAE;AAPa,GAAvB;AASH,CApCD;;AAqCA,IAAI6E,iBAAiB,GAAG;AACpBC,EAAAA,WAAW,EAAE,qBAAUC,eAAV,EAA2B;AACpC,QAAIC,aAAa,GAAGzH,oBAAoB,CAACuH,WAArB,CAAiC1G,oBAAjC,CAApB;AACA,QAAI6G,KAAK,GAAGzH,YAAY,CAACsH,WAAb,CAAyBzG,eAAe,CAAC6G,GAAhB,CAAoB,UAAU9B,IAAV,EAAgB;AAAE,aAAQ5G,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAK4G,IAAL,CAAT,EAAqB;AAAEC,QAAAA,IAAI,EAAED,IAAI,CAACC,IAAL,IAAa,IAAb,GAAoBD,IAAI,CAACC,IAAzB,GAAgC0B;AAAxC,OAArB,CAAhB;AAAmG,KAAzI,CAAzB,CAAZ;AACA,QAAII,KAAK,GAAG1H,YAAY,CAACqH,WAAb,CAAyBxG,eAAzB,CAAZ;AACA,QAAIgD,OAAO,GAAG5D,cAAc,CAACoH,WAAf,CAA2BvG,iBAA3B,CAAd;AACA,QAAI6G,aAAa,GAAGzH,oBAAoB,CAACmH,WAArB,CAAiCtG,sBAAjC,CAApB;AACA,QAAI6G,OAAO,GAAGzH,cAAc,CAACkH,WAAf,CAA2BrG,iBAA3B,CAAd;AACA,QAAI6G,UAAU,GAAGzH,iBAAiB,CAACiH,WAAlB,CAA8BpG,oBAA9B,CAAjB;AACAK,IAAAA,qBAAqB;AACrB,WAAO;AACHF,MAAAA,IAAI,EAAE,YADH;AAEH0G,MAAAA,UAAU,EAAE;AACRC,QAAAA,MAAM,EAAE;AACJ,0BAAgB,gBADZ;AAEJ,mBAAS,2DAFL;AAGJ,sBAAY,6DAHR;AAIJ,yBAAe,6DAJX;AAKJ,yBAAe,gEALX;AAMJ,sBAAY;AANR;AADA,OAFT;AAYHC,MAAAA,QAAQ,EAAE,CACNT,aADM,EAENC,KAFM,EAGNE,KAHM,EAIN7D,OAJM,EAKN8D,aALM,EAMNC,OANM,EAONC,UAPM,EAQN;AACIzG,QAAAA,IAAI,EAAE,aADV;AAEI0G,QAAAA,UAAU,EAAE;AACRC,UAAAA,MAAM,EAAE;AACJE,YAAAA,KAAK,EAAE,CADH;AAEJC,YAAAA,iBAAiB,EAAE,mBAFf;AAGJC,YAAAA,iBAAiB,EAAE;AAHf;AADA;AAFhB,OARM;AAZP,KAAP;AAgCH;AA1CmB,CAAxB;AA4CA,OAAO,IAAIC,UAAU,GAAG,SAAbA,UAAa,CAAUhH,IAAV,EAAgBF,YAAhB,EAA8B;AAClD,SAAOR,SAAS,CAACS,YAAY,CAACC,IAAD,EAAOF,YAAP,CAAb,CAAT,IAA+C,CAAtD;AACH,CAFM;AAGP,OAAO,IAAImH,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,MAAV,EAAkBC,aAAlB,EAAiC;AACzDrH,EAAAA,YAAY,GAAGqH,aAAf;;AACA,MAAIrH,YAAY,KAAK,CAArB,EAAwB;AACpBI,IAAAA,qBAAqB;AACxB;;AACDgH,EAAAA,MAAM,CAACE,OAAP,CAAe5B,aAAf;AACH,CANM;AAOP,eAAeQ,iBAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { _ } from '@ag-grid-community/core';\nimport numberFormatsFactory from './numberFormats';\nimport fontsFactory from './fonts';\nimport fillsFactory from './fills';\nimport bordersFactory from './borders';\nimport cellStylesXfsFactory from './cellStyleXfs';\nimport cellXfsFactory from './cellXfs';\nimport cellStylesFactory from './cellStyles';\nimport { convertLegacyBorder, convertLegacyColor, convertLegacyPattern } from '../../../assets/excelLegacyConvert';\nimport { numberFormatMap } from '../../../assets/excelConstants';\nimport { getFontFamilyId } from '../../../assets/excelUtils';\nvar stylesMap;\nvar registeredNumberFmts;\nvar registeredFonts;\nvar registeredFills;\nvar registeredBorders;\nvar registeredCellStyleXfs;\nvar registeredCellXfs;\nvar registeredCellStyles;\nvar currentSheet;\nvar getStyleName = function (name, currentSheet) {\n    if (name.indexOf('mixedStyle') !== -1 && currentSheet > 1) {\n        name += \"_\" + currentSheet;\n    }\n    return name;\n};\nvar resetStylesheetValues = function () {\n    stylesMap = { base: 0 };\n    registeredNumberFmts = [];\n    registeredFonts = [{ fontName: 'Calibri', colorTheme: '1', family: '2', scheme: 'minor' }];\n    registeredFills = [{ patternType: 'none', }, { patternType: 'gray125' }];\n    registeredBorders = [{ left: undefined, right: undefined, top: undefined, bottom: undefined, diagonal: undefined }];\n    registeredCellStyleXfs = [{ borderId: 0, fillId: 0, fontId: 0, numFmtId: 0 }];\n    registeredCellXfs = [{ borderId: 0, fillId: 0, fontId: 0, numFmtId: 0, xfId: 0 }];\n    registeredCellStyles = [{ builtinId: 0, name: 'Normal', xfId: 0 }];\n};\nvar registerFill = function (fill) {\n    var convertedPattern = convertLegacyPattern(fill.pattern);\n    var convertedFillColor = convertLegacyColor(fill.color);\n    var convertedPatternColor = convertLegacyColor(fill.patternColor);\n    var pos = _.findIndex(registeredFills, function (currentFill) {\n        var patternType = currentFill.patternType, fgRgb = currentFill.fgRgb, bgRgb = currentFill.bgRgb;\n        if (patternType != convertedPattern ||\n            fgRgb != convertedFillColor ||\n            bgRgb != convertedPatternColor) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredFills.length;\n        registeredFills.push({ patternType: convertedPattern, fgRgb: convertedFillColor, bgRgb: convertedPatternColor });\n    }\n    return pos;\n};\nvar registerNumberFmt = function (format) {\n    format = _.utf8_encode(format);\n    if (numberFormatMap[format]) {\n        return numberFormatMap[format];\n    }\n    var pos = _.findIndex(registeredNumberFmts, function (currentFormat) { return currentFormat.formatCode === format; });\n    if (pos === -1) {\n        pos = registeredNumberFmts.length + 164;\n        registeredNumberFmts.push({ formatCode: format, numFmtId: pos });\n    }\n    else {\n        pos = registeredNumberFmts[pos].numFmtId;\n    }\n    return pos;\n};\nvar registerBorders = function (borders) {\n    var borderBottom = borders.borderBottom, borderTop = borders.borderTop, borderLeft = borders.borderLeft, borderRight = borders.borderRight;\n    var bottomStyle;\n    var topStyle;\n    var leftStyle;\n    var rightStyle;\n    var bottomColor;\n    var topColor;\n    var leftColor;\n    var rightColor;\n    if (borderLeft) {\n        leftStyle = convertLegacyBorder(borderLeft.lineStyle, borderLeft.weight);\n        leftColor = convertLegacyColor(borderLeft.color);\n    }\n    if (borderRight) {\n        rightStyle = convertLegacyBorder(borderRight.lineStyle, borderRight.weight);\n        rightColor = convertLegacyColor(borderRight.color);\n    }\n    if (borderBottom) {\n        bottomStyle = convertLegacyBorder(borderBottom.lineStyle, borderBottom.weight);\n        bottomColor = convertLegacyColor(borderBottom.color);\n    }\n    if (borderTop) {\n        topStyle = convertLegacyBorder(borderTop.lineStyle, borderTop.weight);\n        topColor = convertLegacyColor(borderTop.color);\n    }\n    var pos = _.findIndex(registeredBorders, function (currentBorder) {\n        var left = currentBorder.left, right = currentBorder.right, top = currentBorder.top, bottom = currentBorder.bottom;\n        if (!left && (leftStyle || leftColor)) {\n            return false;\n        }\n        if (!right && (rightStyle || rightColor)) {\n            return false;\n        }\n        if (!top && (topStyle || topColor)) {\n            return false;\n        }\n        if (!bottom && (bottomStyle || bottomColor)) {\n            return false;\n        }\n        var _a = left || {}, clS = _a.style, clC = _a.color;\n        var _b = right || {}, crS = _b.style, crC = _b.color;\n        var _c = top || {}, ctS = _c.style, ctC = _c.color;\n        var _d = bottom || {}, cbS = _d.style, cbC = _d.color;\n        if (clS != leftStyle || clC != leftColor) {\n            return false;\n        }\n        if (crS != rightStyle || crC != rightColor) {\n            return false;\n        }\n        if (ctS != topStyle || ctC != topColor) {\n            return false;\n        }\n        if (cbS != bottomStyle || cbC != bottomColor) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredBorders.length;\n        registeredBorders.push({\n            left: {\n                style: leftStyle, color: leftColor\n            },\n            right: {\n                style: rightStyle, color: rightColor\n            },\n            top: {\n                style: topStyle, color: topColor\n            },\n            bottom: {\n                style: bottomStyle, color: bottomColor\n            },\n            diagonal: {\n                style: undefined,\n                color: undefined\n            }\n        });\n    }\n    return pos;\n};\nvar registerFont = function (font) {\n    var _a = font.fontName, name = _a === void 0 ? 'Calibri' : _a, color = font.color, size = font.size, bold = font.bold, italic = font.italic, outline = font.outline, shadow = font.shadow, strikeThrough = font.strikeThrough, underline = font.underline, family = font.family, verticalAlign = font.verticalAlign;\n    var utf8Name = name ? _.utf8_encode(name) : name;\n    var convertedColor = convertLegacyColor(color);\n    var familyId = getFontFamilyId(family);\n    var convertedUnderline = underline ? underline.toLocaleLowerCase() : undefined;\n    var convertedVerticalAlign = verticalAlign ? verticalAlign.toLocaleLowerCase() : undefined;\n    var pos = _.findIndex(registeredFonts, function (currentFont) {\n        if (currentFont.fontName != utf8Name ||\n            currentFont.color != convertedColor ||\n            currentFont.size != size ||\n            currentFont.bold != bold ||\n            currentFont.italic != italic ||\n            currentFont.outline != outline ||\n            currentFont.shadow != shadow ||\n            currentFont.strikeThrough != strikeThrough ||\n            currentFont.underline != convertedUnderline ||\n            currentFont.verticalAlign != convertedVerticalAlign ||\n            // @ts-ignore\n            currentFont.family != familyId) {\n            return false;\n        }\n        return true;\n    });\n    if (pos === -1) {\n        pos = registeredFonts.length;\n        registeredFonts.push({\n            fontName: utf8Name,\n            color: convertedColor,\n            size: size,\n            bold: bold,\n            italic: italic,\n            outline: outline,\n            shadow: shadow,\n            strikeThrough: strikeThrough,\n            underline: convertedUnderline,\n            verticalAlign: convertedVerticalAlign,\n            family: familyId != null ? familyId.toString() : undefined\n        });\n    }\n    return pos;\n};\nvar registerStyle = function (config) {\n    var alignment = config.alignment, borders = config.borders, font = config.font, interior = config.interior, numberFormat = config.numberFormat, protection = config.protection;\n    var id = config.id;\n    var currentFill = 0;\n    var currentBorder = 0;\n    var currentFont = 0;\n    var currentNumberFmt = 0;\n    if (!id) {\n        return;\n    }\n    id = getStyleName(id, currentSheet);\n    if (stylesMap[id] != undefined) {\n        return;\n    }\n    if (interior) {\n        currentFill = registerFill(interior);\n    }\n    if (borders) {\n        currentBorder = registerBorders(borders);\n    }\n    if (font) {\n        currentFont = registerFont(font);\n    }\n    if (numberFormat) {\n        currentNumberFmt = registerNumberFmt(numberFormat.format);\n    }\n    stylesMap[id] = registeredCellXfs.length;\n    registeredCellXfs.push({\n        alignment: alignment,\n        borderId: currentBorder || 0,\n        fillId: currentFill || 0,\n        fontId: currentFont || 0,\n        numFmtId: currentNumberFmt || 0,\n        protection: protection,\n        xfId: 0\n    });\n};\nvar stylesheetFactory = {\n    getTemplate: function (defaultFontSize) {\n        var numberFormats = numberFormatsFactory.getTemplate(registeredNumberFmts);\n        var fonts = fontsFactory.getTemplate(registeredFonts.map(function (font) { return (__assign(__assign({}, font), { size: font.size != null ? font.size : defaultFontSize })); }));\n        var fills = fillsFactory.getTemplate(registeredFills);\n        var borders = bordersFactory.getTemplate(registeredBorders);\n        var cellStylesXfs = cellStylesXfsFactory.getTemplate(registeredCellStyleXfs);\n        var cellXfs = cellXfsFactory.getTemplate(registeredCellXfs);\n        var cellStyles = cellStylesFactory.getTemplate(registeredCellStyles);\n        resetStylesheetValues();\n        return {\n            name: 'styleSheet',\n            properties: {\n                rawMap: {\n                    'mc:Ignorable': 'x14ac x16r2 xr',\n                    'xmlns': 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n                    'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n                    'xmlns:x14ac': 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac',\n                    'xmlns:x16r2': 'http://schemas.microsoft.com/office/spreadsheetml/2015/02/main',\n                    'xmlns:xr': 'http://schemas.microsoft.com/office/spreadsheetml/2014/revision'\n                }\n            },\n            children: [\n                numberFormats,\n                fonts,\n                fills,\n                borders,\n                cellStylesXfs,\n                cellXfs,\n                cellStyles,\n                {\n                    name: 'tableStyles',\n                    properties: {\n                        rawMap: {\n                            count: 0,\n                            defaultPivotStyle: 'PivotStyleLight16',\n                            defaultTableStyle: 'TableStyleMedium2'\n                        }\n                    }\n                }\n            ]\n        };\n    }\n};\nexport var getStyleId = function (name, currentSheet) {\n    return stylesMap[getStyleName(name, currentSheet)] || 0;\n};\nexport var registerStyles = function (styles, _currentSheet) {\n    currentSheet = _currentSheet;\n    if (currentSheet === 1) {\n        resetStylesheetValues();\n    }\n    styles.forEach(registerStyle);\n};\nexport default stylesheetFactory;\n"]},"metadata":{},"sourceType":"module"}