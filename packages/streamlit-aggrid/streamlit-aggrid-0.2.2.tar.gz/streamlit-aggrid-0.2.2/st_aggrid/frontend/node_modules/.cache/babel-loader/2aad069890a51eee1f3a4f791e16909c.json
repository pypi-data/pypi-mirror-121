{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from \"../../widgets/component\";\nimport { Autowired, PostConstruct, PreDestroy } from \"../../context/context\";\nimport { RowNode } from \"../../entities/rowNode\";\nimport { DragSourceType } from \"../../dragAndDrop/dragAndDropService\";\nimport { Events } from \"../../eventKeys\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { createIconNoSpan } from \"../../utils/icon\";\nimport { doOnce, isFunction } from \"../../utils/function\";\n\nvar RowDragComp = function (_super) {\n  __extends(RowDragComp, _super);\n\n  function RowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels) {\n    var _this = _super.call(this) || this;\n\n    _this.dragSource = null;\n    _this.cellValueFn = cellValueFn;\n    _this.rowNode = rowNode;\n    _this.column = column;\n    _this.customGui = customGui;\n    _this.dragStartPixels = dragStartPixels;\n    return _this;\n  }\n\n  RowDragComp.prototype.isCustomGui = function () {\n    return this.customGui != null;\n  };\n\n  RowDragComp.prototype.postConstruct = function () {\n    if (!this.customGui) {\n      this.setTemplate(\n      /* html */\n      \"<div class=\\\"ag-drag-handle ag-row-drag\\\" aria-hidden=\\\"true\\\"></div>\");\n      var eGui = this.getGui();\n      eGui.appendChild(createIconNoSpan('rowDrag', this.beans.gridOptionsWrapper, null));\n      this.addDragSource();\n    } else {\n      this.setDragElement(this.customGui, this.dragStartPixels);\n    }\n\n    this.checkCompatibility();\n    var strategy = this.beans.gridOptionsWrapper.isRowDragManaged() ? new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column) : new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column);\n    this.createManagedBean(strategy, this.beans.context);\n  };\n\n  RowDragComp.prototype.setDragElement = function (dragElement, dragStartPixels) {\n    this.setTemplateFromElement(dragElement);\n    this.addDragSource(dragStartPixels);\n  };\n\n  RowDragComp.prototype.getSelectedCount = function () {\n    var multiRowEnabled = this.beans.gridOptionsWrapper.isEnableMultiRowDragging();\n\n    if (!multiRowEnabled) {\n      return 1;\n    }\n\n    var selection = this.beans.selectionService.getSelectedNodes();\n    return selection.indexOf(this.rowNode) !== -1 ? selection.length : 1;\n  }; // returns true if all compatibility items work out\n\n\n  RowDragComp.prototype.checkCompatibility = function () {\n    var managed = this.beans.gridOptionsWrapper.isRowDragManaged();\n    var treeData = this.beans.gridOptionsWrapper.isTreeData();\n\n    if (treeData && managed) {\n      doOnce(function () {\n        return console.warn('AG Grid: If using row drag with tree data, you cannot have rowDragManaged=true');\n      }, 'RowDragComp.managedAndTreeData');\n    }\n  };\n\n  RowDragComp.prototype.addDragSource = function (dragStartPixels) {\n    var _this = this;\n\n    if (dragStartPixels === void 0) {\n      dragStartPixels = 4;\n    } // if this is changing the drag element, delete the previous dragSource\n\n\n    if (this.dragSource) {\n      this.removeDragSource();\n    }\n\n    var dragItem = {\n      rowNode: this.rowNode,\n      columns: this.column ? [this.column] : undefined,\n      defaultTextValue: this.cellValueFn()\n    };\n    var rowDragText = this.column && this.column.getColDef().rowDragText;\n    this.dragSource = {\n      type: DragSourceType.RowDrag,\n      eElement: this.getGui(),\n      dragItemName: function dragItemName() {\n        var dragItemCount = _this.getSelectedCount();\n\n        if (rowDragText) {\n          return rowDragText(dragItem, dragItemCount);\n        }\n\n        return dragItemCount === 1 ? _this.cellValueFn() : dragItemCount + \" rows\";\n      },\n      getDragItem: function getDragItem() {\n        return dragItem;\n      },\n      dragStartPixels: dragStartPixels,\n      dragSourceDomDataKey: this.beans.gridOptionsWrapper.getDomDataKey()\n    };\n    this.beans.dragAndDropService.addDragSource(this.dragSource, true);\n  };\n\n  RowDragComp.prototype.removeDragSource = function () {\n    if (this.dragSource) {\n      this.beans.dragAndDropService.removeDragSource(this.dragSource);\n    }\n\n    this.dragSource = null;\n  };\n\n  __decorate([Autowired('beans')], RowDragComp.prototype, \"beans\", void 0);\n\n  __decorate([PostConstruct], RowDragComp.prototype, \"postConstruct\", null);\n\n  __decorate([PreDestroy], RowDragComp.prototype, \"removeDragSource\", null);\n\n  return RowDragComp;\n}(Component);\n\nexport { RowDragComp };\n\nvar VisibilityStrategy = function (_super) {\n  __extends(VisibilityStrategy, _super);\n\n  function VisibilityStrategy(parent, rowNode, column) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    _this.column = column;\n    _this.rowNode = rowNode;\n    return _this;\n  }\n\n  VisibilityStrategy.prototype.setDisplayedOrVisible = function (neverDisplayed) {\n    if (neverDisplayed) {\n      this.parent.setDisplayed(false);\n    } else {\n      var shown = true;\n      var isShownSometimes = false;\n\n      if (this.column) {\n        shown = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui();\n        isShownSometimes = isFunction(this.column.getColDef().rowDrag);\n      } // if shown sometimes, them some rows can have drag handle while other don't,\n      // so we use setVisible to keep the handles horizontally aligned (as setVisible\n      // keeps the empty space, whereas setDisplayed looses the space)\n\n\n      if (isShownSometimes) {\n        this.parent.setDisplayed(true);\n        this.parent.setVisible(shown);\n      } else {\n        this.parent.setDisplayed(shown);\n      }\n    }\n  };\n\n  return VisibilityStrategy;\n}(BeanStub); // when non managed, the visibility depends on suppressRowDrag property only\n\n\nvar NonManagedVisibilityStrategy = function (_super) {\n  __extends(NonManagedVisibilityStrategy, _super);\n\n  function NonManagedVisibilityStrategy(parent, beans, rowNode, column) {\n    var _this = _super.call(this, parent, rowNode, column) || this;\n\n    _this.beans = beans;\n    return _this;\n  }\n\n  NonManagedVisibilityStrategy.prototype.postConstruct = function () {\n    this.addManagedListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this)); // in case data changes, then we need to update visibility of drag item\n\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n    this.workOutVisibility();\n  };\n\n  NonManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n    this.workOutVisibility();\n  };\n\n  NonManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n    // only show the drag if both sort and filter are not present\n    var neverDisplayed = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n    this.setDisplayedOrVisible(neverDisplayed);\n  };\n\n  __decorate([PostConstruct], NonManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n\n  return NonManagedVisibilityStrategy;\n}(VisibilityStrategy); // when managed, the visibility depends on sort, filter and row group, as well as suppressRowDrag property\n\n\nvar ManagedVisibilityStrategy = function (_super) {\n  __extends(ManagedVisibilityStrategy, _super);\n\n  function ManagedVisibilityStrategy(parent, beans, rowNode, column) {\n    var _this = _super.call(this, parent, rowNode, column) || this;\n\n    _this.beans = beans;\n    return _this;\n  }\n\n  ManagedVisibilityStrategy.prototype.postConstruct = function () {\n    // we do not show the component if sort, filter or grouping is active\n    this.addManagedListener(this.beans.eventService, Events.EVENT_SORT_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.beans.eventService, Events.EVENT_FILTER_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.beans.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.workOutVisibility.bind(this)); // in case data changes, then we need to update visibility of drag item\n\n    this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n    this.addManagedListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n    this.workOutVisibility();\n  };\n\n  ManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n    this.workOutVisibility();\n  };\n\n  ManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n    // only show the drag if both sort and filter are not present\n    var gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n    var rowDragFeature = gridBodyCon.getRowDragFeature();\n    var shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\n    var suppressRowDrag = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n    var hasExternalDropZones = this.beans.dragAndDropService.hasExternalDropZones();\n    var neverDisplayed = shouldPreventRowMove && !hasExternalDropZones || suppressRowDrag;\n    this.setDisplayedOrVisible(neverDisplayed);\n  };\n\n  __decorate([PostConstruct], ManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n\n  return ManagedVisibilityStrategy;\n}(VisibilityStrategy);","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-community/core/dist/es6/rendering/row/rowDragComp.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Autowired","PostConstruct","PreDestroy","RowNode","DragSourceType","Events","BeanStub","createIconNoSpan","doOnce","isFunction","RowDragComp","_super","cellValueFn","rowNode","column","customGui","dragStartPixels","_this","call","dragSource","isCustomGui","postConstruct","setTemplate","eGui","getGui","appendChild","beans","gridOptionsWrapper","addDragSource","setDragElement","checkCompatibility","strategy","isRowDragManaged","ManagedVisibilityStrategy","NonManagedVisibilityStrategy","createManagedBean","context","dragElement","setTemplateFromElement","getSelectedCount","multiRowEnabled","isEnableMultiRowDragging","selection","selectionService","getSelectedNodes","indexOf","managed","treeData","isTreeData","console","warn","removeDragSource","dragItem","columns","undefined","defaultTextValue","rowDragText","getColDef","type","RowDrag","eElement","dragItemName","dragItemCount","getDragItem","dragSourceDomDataKey","getDomDataKey","dragAndDropService","VisibilityStrategy","parent","setDisplayedOrVisible","neverDisplayed","setDisplayed","shown","isShownSometimes","isRowDrag","rowDrag","setVisible","addManagedListener","onSuppressRowDrag","bind","EVENT_DATA_CHANGED","workOutVisibility","EVENT_CELL_CHANGED","isSuppressRowDrag","eventService","EVENT_SORT_CHANGED","EVENT_FILTER_CHANGED","EVENT_COLUMN_ROW_GROUP_CHANGED","gridBodyCon","ctrlsService","getGridBodyCtrl","rowDragFeature","getRowDragFeature","shouldPreventRowMove","suppressRowDrag","hasExternalDropZones"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"../../widgets/component\";\nimport { Autowired, PostConstruct, PreDestroy } from \"../../context/context\";\nimport { RowNode } from \"../../entities/rowNode\";\nimport { DragSourceType } from \"../../dragAndDrop/dragAndDropService\";\nimport { Events } from \"../../eventKeys\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { createIconNoSpan } from \"../../utils/icon\";\nimport { doOnce, isFunction } from \"../../utils/function\";\nvar RowDragComp = /** @class */ (function (_super) {\n    __extends(RowDragComp, _super);\n    function RowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels) {\n        var _this = _super.call(this) || this;\n        _this.dragSource = null;\n        _this.cellValueFn = cellValueFn;\n        _this.rowNode = rowNode;\n        _this.column = column;\n        _this.customGui = customGui;\n        _this.dragStartPixels = dragStartPixels;\n        return _this;\n    }\n    RowDragComp.prototype.isCustomGui = function () {\n        return this.customGui != null;\n    };\n    RowDragComp.prototype.postConstruct = function () {\n        if (!this.customGui) {\n            this.setTemplate(/* html */ \"<div class=\\\"ag-drag-handle ag-row-drag\\\" aria-hidden=\\\"true\\\"></div>\");\n            var eGui = this.getGui();\n            eGui.appendChild(createIconNoSpan('rowDrag', this.beans.gridOptionsWrapper, null));\n            this.addDragSource();\n        }\n        else {\n            this.setDragElement(this.customGui, this.dragStartPixels);\n        }\n        this.checkCompatibility();\n        var strategy = this.beans.gridOptionsWrapper.isRowDragManaged() ?\n            new ManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column) :\n            new NonManagedVisibilityStrategy(this, this.beans, this.rowNode, this.column);\n        this.createManagedBean(strategy, this.beans.context);\n    };\n    RowDragComp.prototype.setDragElement = function (dragElement, dragStartPixels) {\n        this.setTemplateFromElement(dragElement);\n        this.addDragSource(dragStartPixels);\n    };\n    RowDragComp.prototype.getSelectedCount = function () {\n        var multiRowEnabled = this.beans.gridOptionsWrapper.isEnableMultiRowDragging();\n        if (!multiRowEnabled) {\n            return 1;\n        }\n        var selection = this.beans.selectionService.getSelectedNodes();\n        return selection.indexOf(this.rowNode) !== -1 ? selection.length : 1;\n    };\n    // returns true if all compatibility items work out\n    RowDragComp.prototype.checkCompatibility = function () {\n        var managed = this.beans.gridOptionsWrapper.isRowDragManaged();\n        var treeData = this.beans.gridOptionsWrapper.isTreeData();\n        if (treeData && managed) {\n            doOnce(function () {\n                return console.warn('AG Grid: If using row drag with tree data, you cannot have rowDragManaged=true');\n            }, 'RowDragComp.managedAndTreeData');\n        }\n    };\n    RowDragComp.prototype.addDragSource = function (dragStartPixels) {\n        var _this = this;\n        if (dragStartPixels === void 0) { dragStartPixels = 4; }\n        // if this is changing the drag element, delete the previous dragSource\n        if (this.dragSource) {\n            this.removeDragSource();\n        }\n        var dragItem = {\n            rowNode: this.rowNode,\n            columns: this.column ? [this.column] : undefined,\n            defaultTextValue: this.cellValueFn(),\n        };\n        var rowDragText = this.column && this.column.getColDef().rowDragText;\n        this.dragSource = {\n            type: DragSourceType.RowDrag,\n            eElement: this.getGui(),\n            dragItemName: function () {\n                var dragItemCount = _this.getSelectedCount();\n                if (rowDragText) {\n                    return rowDragText(dragItem, dragItemCount);\n                }\n                return dragItemCount === 1 ? _this.cellValueFn() : dragItemCount + \" rows\";\n            },\n            getDragItem: function () { return dragItem; },\n            dragStartPixels: dragStartPixels,\n            dragSourceDomDataKey: this.beans.gridOptionsWrapper.getDomDataKey()\n        };\n        this.beans.dragAndDropService.addDragSource(this.dragSource, true);\n    };\n    RowDragComp.prototype.removeDragSource = function () {\n        if (this.dragSource) {\n            this.beans.dragAndDropService.removeDragSource(this.dragSource);\n        }\n        this.dragSource = null;\n    };\n    __decorate([\n        Autowired('beans')\n    ], RowDragComp.prototype, \"beans\", void 0);\n    __decorate([\n        PostConstruct\n    ], RowDragComp.prototype, \"postConstruct\", null);\n    __decorate([\n        PreDestroy\n    ], RowDragComp.prototype, \"removeDragSource\", null);\n    return RowDragComp;\n}(Component));\nexport { RowDragComp };\nvar VisibilityStrategy = /** @class */ (function (_super) {\n    __extends(VisibilityStrategy, _super);\n    function VisibilityStrategy(parent, rowNode, column) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.column = column;\n        _this.rowNode = rowNode;\n        return _this;\n    }\n    VisibilityStrategy.prototype.setDisplayedOrVisible = function (neverDisplayed) {\n        if (neverDisplayed) {\n            this.parent.setDisplayed(false);\n        }\n        else {\n            var shown = true;\n            var isShownSometimes = false;\n            if (this.column) {\n                shown = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui();\n                isShownSometimes = isFunction(this.column.getColDef().rowDrag);\n            }\n            // if shown sometimes, them some rows can have drag handle while other don't,\n            // so we use setVisible to keep the handles horizontally aligned (as setVisible\n            // keeps the empty space, whereas setDisplayed looses the space)\n            if (isShownSometimes) {\n                this.parent.setDisplayed(true);\n                this.parent.setVisible(shown);\n            }\n            else {\n                this.parent.setDisplayed(shown);\n            }\n        }\n    };\n    return VisibilityStrategy;\n}(BeanStub));\n// when non managed, the visibility depends on suppressRowDrag property only\nvar NonManagedVisibilityStrategy = /** @class */ (function (_super) {\n    __extends(NonManagedVisibilityStrategy, _super);\n    function NonManagedVisibilityStrategy(parent, beans, rowNode, column) {\n        var _this = _super.call(this, parent, rowNode, column) || this;\n        _this.beans = beans;\n        return _this;\n    }\n    NonManagedVisibilityStrategy.prototype.postConstruct = function () {\n        this.addManagedListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n        // in case data changes, then we need to update visibility of drag item\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n        this.workOutVisibility();\n    };\n    NonManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n        this.workOutVisibility();\n    };\n    NonManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n        // only show the drag if both sort and filter are not present\n        var neverDisplayed = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n        this.setDisplayedOrVisible(neverDisplayed);\n    };\n    __decorate([\n        PostConstruct\n    ], NonManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n    return NonManagedVisibilityStrategy;\n}(VisibilityStrategy));\n// when managed, the visibility depends on sort, filter and row group, as well as suppressRowDrag property\nvar ManagedVisibilityStrategy = /** @class */ (function (_super) {\n    __extends(ManagedVisibilityStrategy, _super);\n    function ManagedVisibilityStrategy(parent, beans, rowNode, column) {\n        var _this = _super.call(this, parent, rowNode, column) || this;\n        _this.beans = beans;\n        return _this;\n    }\n    ManagedVisibilityStrategy.prototype.postConstruct = function () {\n        // we do not show the component if sort, filter or grouping is active\n        this.addManagedListener(this.beans.eventService, Events.EVENT_SORT_CHANGED, this.workOutVisibility.bind(this));\n        this.addManagedListener(this.beans.eventService, Events.EVENT_FILTER_CHANGED, this.workOutVisibility.bind(this));\n        this.addManagedListener(this.beans.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.workOutVisibility.bind(this));\n        // in case data changes, then we need to update visibility of drag item\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this));\n        this.addManagedListener(this.beans.gridOptionsWrapper, 'suppressRowDrag', this.onSuppressRowDrag.bind(this));\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.onSuppressRowDrag = function () {\n        this.workOutVisibility();\n    };\n    ManagedVisibilityStrategy.prototype.workOutVisibility = function () {\n        // only show the drag if both sort and filter are not present\n        var gridBodyCon = this.beans.ctrlsService.getGridBodyCtrl();\n        var rowDragFeature = gridBodyCon.getRowDragFeature();\n        var shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\n        var suppressRowDrag = this.beans.gridOptionsWrapper.isSuppressRowDrag();\n        var hasExternalDropZones = this.beans.dragAndDropService.hasExternalDropZones();\n        var neverDisplayed = (shouldPreventRowMove && !hasExternalDropZones) || suppressRowDrag;\n        this.setDisplayedOrVisible(neverDisplayed);\n    };\n    __decorate([\n        PostConstruct\n    ], ManagedVisibilityStrategy.prototype, \"postConstruct\", null);\n    return ManagedVisibilityStrategy;\n}(VisibilityStrategy));\n"]},"metadata":{},"sourceType":"module"}