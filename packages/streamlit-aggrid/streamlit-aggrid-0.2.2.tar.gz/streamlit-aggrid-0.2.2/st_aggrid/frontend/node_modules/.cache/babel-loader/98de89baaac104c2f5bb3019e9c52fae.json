{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n// ARIA HELPER FUNCTIONS\nfunction setAriaAttribute(element, attribute, value) {\n  element.setAttribute(ariaAttributeName(attribute), value.toString());\n}\n\nfunction removeAriaAttribute(element, attribute) {\n  element.removeAttribute(ariaAttributeName(attribute));\n}\n\nfunction ariaAttributeName(attribute) {\n  return \"aria-\" + attribute;\n}\n\nexport function getAriaSortState(column) {\n  var sort;\n\n  if (column.isSortAscending()) {\n    sort = 'ascending';\n  } else if (column.isSortDescending()) {\n    sort = 'descending';\n  } else {\n    sort = 'none';\n  }\n\n  return sort;\n} // ARIA ATTRIBUTE GETTERS\n\nexport function getAriaLevel(element) {\n  return parseInt(element.getAttribute('aria-level'), 10);\n}\nexport function getAriaPosInSet(element) {\n  return parseInt(element.getAttribute('aria-posinset'), 10);\n}\nexport function getAriaDescribedBy(element) {\n  return element.getAttribute('aria-describedby') || '';\n} // ARIA ATTRIBUTE SETTERS\n\nexport function setAriaLabel(element, label) {\n  setAriaAttribute(element, 'label', label);\n}\nexport function setAriaLabelledBy(element, labelledBy) {\n  setAriaAttribute(element, 'labelledby', labelledBy);\n}\nexport function setAriaDescribedBy(element, describedby) {\n  setAriaAttribute(element, 'describedby', describedby);\n}\nexport function setAriaLevel(element, level) {\n  setAriaAttribute(element, 'level', level);\n}\nexport function setAriaDisabled(element, disabled) {\n  setAriaAttribute(element, 'disabled', disabled);\n}\nexport function setAriaExpanded(element, expanded) {\n  setAriaAttribute(element, 'expanded', expanded);\n}\nexport function removeAriaExpanded(element) {\n  removeAriaAttribute(element, 'expanded');\n}\nexport function setAriaSetSize(element, setsize) {\n  setAriaAttribute(element, 'setsize', setsize);\n}\nexport function setAriaPosInSet(element, position) {\n  setAriaAttribute(element, 'posinset', position);\n}\nexport function setAriaMultiSelectable(element, multiSelectable) {\n  setAriaAttribute(element, 'multiselectable', multiSelectable);\n}\nexport function setAriaRowCount(element, rowCount) {\n  setAriaAttribute(element, 'rowcount', rowCount);\n}\nexport function setAriaRowIndex(element, rowIndex) {\n  setAriaAttribute(element, 'rowindex', rowIndex);\n}\nexport function setAriaColCount(element, colCount) {\n  setAriaAttribute(element, 'colcount', colCount);\n}\nexport function setAriaColIndex(element, colIndex) {\n  setAriaAttribute(element, 'colindex', colIndex);\n}\nexport function setAriaColSpan(element, colSpan) {\n  setAriaAttribute(element, 'colspan', colSpan);\n}\nexport function setAriaSort(element, sort) {\n  setAriaAttribute(element, 'sort', sort);\n}\nexport function removeAriaSort(element) {\n  removeAriaAttribute(element, 'sort');\n}\nexport function setAriaSelected(element, selected) {\n  var attributeName = 'selected';\n\n  if (selected) {\n    setAriaAttribute(element, attributeName, selected);\n  } else {\n    removeAriaAttribute(element, attributeName);\n  }\n}\nexport function setAriaChecked(element, checked) {\n  setAriaAttribute(element, 'checked', checked === undefined ? 'mixed' : checked);\n}","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-community/core/dist/es6/utils/aria.js"],"names":["setAriaAttribute","element","attribute","value","setAttribute","ariaAttributeName","toString","removeAriaAttribute","removeAttribute","getAriaSortState","column","sort","isSortAscending","isSortDescending","getAriaLevel","parseInt","getAttribute","getAriaPosInSet","getAriaDescribedBy","setAriaLabel","label","setAriaLabelledBy","labelledBy","setAriaDescribedBy","describedby","setAriaLevel","level","setAriaDisabled","disabled","setAriaExpanded","expanded","removeAriaExpanded","setAriaSetSize","setsize","setAriaPosInSet","position","setAriaMultiSelectable","multiSelectable","setAriaRowCount","rowCount","setAriaRowIndex","rowIndex","setAriaColCount","colCount","setAriaColIndex","colIndex","setAriaColSpan","colSpan","setAriaSort","removeAriaSort","setAriaSelected","selected","attributeName","setAriaChecked","checked","undefined"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\n// ARIA HELPER FUNCTIONS\nfunction setAriaAttribute(element, attribute, value) {\n    element.setAttribute(ariaAttributeName(attribute), value.toString());\n}\nfunction removeAriaAttribute(element, attribute) {\n    element.removeAttribute(ariaAttributeName(attribute));\n}\nfunction ariaAttributeName(attribute) {\n    return \"aria-\" + attribute;\n}\nexport function getAriaSortState(column) {\n    var sort;\n    if (column.isSortAscending()) {\n        sort = 'ascending';\n    }\n    else if (column.isSortDescending()) {\n        sort = 'descending';\n    }\n    else {\n        sort = 'none';\n    }\n    return sort;\n}\n// ARIA ATTRIBUTE GETTERS\nexport function getAriaLevel(element) {\n    return parseInt(element.getAttribute('aria-level'), 10);\n}\nexport function getAriaPosInSet(element) {\n    return parseInt(element.getAttribute('aria-posinset'), 10);\n}\nexport function getAriaDescribedBy(element) {\n    return element.getAttribute('aria-describedby') || '';\n}\n// ARIA ATTRIBUTE SETTERS\nexport function setAriaLabel(element, label) {\n    setAriaAttribute(element, 'label', label);\n}\nexport function setAriaLabelledBy(element, labelledBy) {\n    setAriaAttribute(element, 'labelledby', labelledBy);\n}\nexport function setAriaDescribedBy(element, describedby) {\n    setAriaAttribute(element, 'describedby', describedby);\n}\nexport function setAriaLevel(element, level) {\n    setAriaAttribute(element, 'level', level);\n}\nexport function setAriaDisabled(element, disabled) {\n    setAriaAttribute(element, 'disabled', disabled);\n}\nexport function setAriaExpanded(element, expanded) {\n    setAriaAttribute(element, 'expanded', expanded);\n}\nexport function removeAriaExpanded(element) {\n    removeAriaAttribute(element, 'expanded');\n}\nexport function setAriaSetSize(element, setsize) {\n    setAriaAttribute(element, 'setsize', setsize);\n}\nexport function setAriaPosInSet(element, position) {\n    setAriaAttribute(element, 'posinset', position);\n}\nexport function setAriaMultiSelectable(element, multiSelectable) {\n    setAriaAttribute(element, 'multiselectable', multiSelectable);\n}\nexport function setAriaRowCount(element, rowCount) {\n    setAriaAttribute(element, 'rowcount', rowCount);\n}\nexport function setAriaRowIndex(element, rowIndex) {\n    setAriaAttribute(element, 'rowindex', rowIndex);\n}\nexport function setAriaColCount(element, colCount) {\n    setAriaAttribute(element, 'colcount', colCount);\n}\nexport function setAriaColIndex(element, colIndex) {\n    setAriaAttribute(element, 'colindex', colIndex);\n}\nexport function setAriaColSpan(element, colSpan) {\n    setAriaAttribute(element, 'colspan', colSpan);\n}\nexport function setAriaSort(element, sort) {\n    setAriaAttribute(element, 'sort', sort);\n}\nexport function removeAriaSort(element) {\n    removeAriaAttribute(element, 'sort');\n}\nexport function setAriaSelected(element, selected) {\n    var attributeName = 'selected';\n    if (selected) {\n        setAriaAttribute(element, attributeName, selected);\n    }\n    else {\n        removeAriaAttribute(element, attributeName);\n    }\n}\nexport function setAriaChecked(element, checked) {\n    setAriaAttribute(element, 'checked', checked === undefined ? 'mixed' : checked);\n}\n"]},"metadata":{},"sourceType":"module"}