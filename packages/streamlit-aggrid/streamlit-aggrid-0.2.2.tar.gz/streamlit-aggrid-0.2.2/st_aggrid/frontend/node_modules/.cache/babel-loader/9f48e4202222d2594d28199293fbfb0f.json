{"ast":null,"code":"import { EventService } from \"@ag-grid-community/core\";\n\nvar ColumnModelItem = function () {\n  function ColumnModelItem(displayName, columnOrGroup, dept, group, expanded) {\n    if (group === void 0) {\n      group = false;\n    }\n\n    this.eventService = new EventService();\n    this.displayName = displayName;\n    this.dept = dept;\n    this.group = group;\n\n    if (group) {\n      this.columnGroup = columnOrGroup;\n      this.expanded = expanded;\n      this.children = [];\n    } else {\n      this.column = columnOrGroup;\n    }\n  }\n\n  ColumnModelItem.prototype.isGroup = function () {\n    return this.group;\n  };\n\n  ColumnModelItem.prototype.getDisplayName = function () {\n    return this.displayName;\n  };\n\n  ColumnModelItem.prototype.getColumnGroup = function () {\n    return this.columnGroup;\n  };\n\n  ColumnModelItem.prototype.getColumn = function () {\n    return this.column;\n  };\n\n  ColumnModelItem.prototype.getDept = function () {\n    return this.dept;\n  };\n\n  ColumnModelItem.prototype.isExpanded = function () {\n    return !!this.expanded;\n  };\n\n  ColumnModelItem.prototype.getChildren = function () {\n    return this.children;\n  };\n\n  ColumnModelItem.prototype.isPassesFilter = function () {\n    return this.passesFilter;\n  };\n\n  ColumnModelItem.prototype.setExpanded = function (expanded) {\n    if (expanded === this.expanded) {\n      return;\n    }\n\n    this.expanded = expanded;\n    this.eventService.dispatchEvent({\n      type: ColumnModelItem.EVENT_EXPANDED_CHANGED\n    });\n  };\n\n  ColumnModelItem.prototype.setPassesFilter = function (passesFilter) {\n    this.passesFilter = passesFilter;\n  };\n\n  ColumnModelItem.prototype.addEventListener = function (eventType, listener) {\n    this.eventService.addEventListener(eventType, listener);\n  };\n\n  ColumnModelItem.prototype.removeEventListener = function (eventType, listener) {\n    this.eventService.removeEventListener(eventType, listener);\n  };\n\n  ColumnModelItem.EVENT_EXPANDED_CHANGED = 'expandedChanged';\n  return ColumnModelItem;\n}();\n\nexport { ColumnModelItem };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/column-tool-panel/dist/es6/columnToolPanel/columnModelItem.js"],"names":["EventService","ColumnModelItem","displayName","columnOrGroup","dept","group","expanded","eventService","columnGroup","children","column","prototype","isGroup","getDisplayName","getColumnGroup","getColumn","getDept","isExpanded","getChildren","isPassesFilter","passesFilter","setExpanded","dispatchEvent","type","EVENT_EXPANDED_CHANGED","setPassesFilter","addEventListener","eventType","listener","removeEventListener"],"mappings":"AAAA,SAASA,YAAT,QAA6B,yBAA7B;;AACA,IAAIC,eAAe,GAAkB,YAAY;AAC7C,WAASA,eAAT,CAAyBC,WAAzB,EAAsCC,aAAtC,EAAqDC,IAArD,EAA2DC,KAA3D,EAAkEC,QAAlE,EAA4E;AACxE,QAAID,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,KAAR;AAAgB;;AACxC,SAAKE,YAAL,GAAoB,IAAIP,YAAJ,EAApB;AACA,SAAKE,WAAL,GAAmBA,WAAnB;AACA,SAAKE,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;;AACA,QAAIA,KAAJ,EAAW;AACP,WAAKG,WAAL,GAAmBL,aAAnB;AACA,WAAKG,QAAL,GAAgBA,QAAhB;AACA,WAAKG,QAAL,GAAgB,EAAhB;AACH,KAJD,MAKK;AACD,WAAKC,MAAL,GAAcP,aAAd;AACH;AACJ;;AACDF,EAAAA,eAAe,CAACU,SAAhB,CAA0BC,OAA1B,GAAoC,YAAY;AAAE,WAAO,KAAKP,KAAZ;AAAoB,GAAtE;;AACAJ,EAAAA,eAAe,CAACU,SAAhB,CAA0BE,cAA1B,GAA2C,YAAY;AAAE,WAAO,KAAKX,WAAZ;AAA0B,GAAnF;;AACAD,EAAAA,eAAe,CAACU,SAAhB,CAA0BG,cAA1B,GAA2C,YAAY;AAAE,WAAO,KAAKN,WAAZ;AAA0B,GAAnF;;AACAP,EAAAA,eAAe,CAACU,SAAhB,CAA0BI,SAA1B,GAAsC,YAAY;AAAE,WAAO,KAAKL,MAAZ;AAAqB,GAAzE;;AACAT,EAAAA,eAAe,CAACU,SAAhB,CAA0BK,OAA1B,GAAoC,YAAY;AAAE,WAAO,KAAKZ,IAAZ;AAAmB,GAArE;;AACAH,EAAAA,eAAe,CAACU,SAAhB,CAA0BM,UAA1B,GAAuC,YAAY;AAAE,WAAO,CAAC,CAAC,KAAKX,QAAd;AAAyB,GAA9E;;AACAL,EAAAA,eAAe,CAACU,SAAhB,CAA0BO,WAA1B,GAAwC,YAAY;AAAE,WAAO,KAAKT,QAAZ;AAAuB,GAA7E;;AACAR,EAAAA,eAAe,CAACU,SAAhB,CAA0BQ,cAA1B,GAA2C,YAAY;AAAE,WAAO,KAAKC,YAAZ;AAA2B,GAApF;;AACAnB,EAAAA,eAAe,CAACU,SAAhB,CAA0BU,WAA1B,GAAwC,UAAUf,QAAV,EAAoB;AACxD,QAAIA,QAAQ,KAAK,KAAKA,QAAtB,EAAgC;AAC5B;AACH;;AACD,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,YAAL,CAAkBe,aAAlB,CAAgC;AAAEC,MAAAA,IAAI,EAAEtB,eAAe,CAACuB;AAAxB,KAAhC;AACH,GAND;;AAOAvB,EAAAA,eAAe,CAACU,SAAhB,CAA0Bc,eAA1B,GAA4C,UAAUL,YAAV,EAAwB;AAChE,SAAKA,YAAL,GAAoBA,YAApB;AACH,GAFD;;AAGAnB,EAAAA,eAAe,CAACU,SAAhB,CAA0Be,gBAA1B,GAA6C,UAAUC,SAAV,EAAqBC,QAArB,EAA+B;AACxE,SAAKrB,YAAL,CAAkBmB,gBAAlB,CAAmCC,SAAnC,EAA8CC,QAA9C;AACH,GAFD;;AAGA3B,EAAAA,eAAe,CAACU,SAAhB,CAA0BkB,mBAA1B,GAAgD,UAAUF,SAAV,EAAqBC,QAArB,EAA+B;AAC3E,SAAKrB,YAAL,CAAkBsB,mBAAlB,CAAsCF,SAAtC,EAAiDC,QAAjD;AACH,GAFD;;AAGA3B,EAAAA,eAAe,CAACuB,sBAAhB,GAAyC,iBAAzC;AACA,SAAOvB,eAAP;AACH,CA1CoC,EAArC;;AA2CA,SAASA,eAAT","sourcesContent":["import { EventService } from \"@ag-grid-community/core\";\nvar ColumnModelItem = /** @class */ (function () {\n    function ColumnModelItem(displayName, columnOrGroup, dept, group, expanded) {\n        if (group === void 0) { group = false; }\n        this.eventService = new EventService();\n        this.displayName = displayName;\n        this.dept = dept;\n        this.group = group;\n        if (group) {\n            this.columnGroup = columnOrGroup;\n            this.expanded = expanded;\n            this.children = [];\n        }\n        else {\n            this.column = columnOrGroup;\n        }\n    }\n    ColumnModelItem.prototype.isGroup = function () { return this.group; };\n    ColumnModelItem.prototype.getDisplayName = function () { return this.displayName; };\n    ColumnModelItem.prototype.getColumnGroup = function () { return this.columnGroup; };\n    ColumnModelItem.prototype.getColumn = function () { return this.column; };\n    ColumnModelItem.prototype.getDept = function () { return this.dept; };\n    ColumnModelItem.prototype.isExpanded = function () { return !!this.expanded; };\n    ColumnModelItem.prototype.getChildren = function () { return this.children; };\n    ColumnModelItem.prototype.isPassesFilter = function () { return this.passesFilter; };\n    ColumnModelItem.prototype.setExpanded = function (expanded) {\n        if (expanded === this.expanded) {\n            return;\n        }\n        this.expanded = expanded;\n        this.eventService.dispatchEvent({ type: ColumnModelItem.EVENT_EXPANDED_CHANGED });\n    };\n    ColumnModelItem.prototype.setPassesFilter = function (passesFilter) {\n        this.passesFilter = passesFilter;\n    };\n    ColumnModelItem.prototype.addEventListener = function (eventType, listener) {\n        this.eventService.addEventListener(eventType, listener);\n    };\n    ColumnModelItem.prototype.removeEventListener = function (eventType, listener) {\n        this.eventService.removeEventListener(eventType, listener);\n    };\n    ColumnModelItem.EVENT_EXPANDED_CHANGED = 'expandedChanged';\n    return ColumnModelItem;\n}());\nexport { ColumnModelItem };\n"]},"metadata":{},"sourceType":"module"}