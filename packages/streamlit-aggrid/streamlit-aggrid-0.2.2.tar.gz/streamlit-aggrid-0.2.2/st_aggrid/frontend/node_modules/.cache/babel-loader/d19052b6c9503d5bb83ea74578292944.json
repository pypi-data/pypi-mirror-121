{"ast":null,"code":"import { ExcelXlsxFactory } from '../../excelXlsxFactory';\nimport { pixelsToEMU } from '../../assets/excelUtils';\n\nvar getAnchor = function getAnchor(name, imageAnchor) {\n  return {\n    name: \"xdr:\" + name,\n    children: [{\n      name: 'xdr:col',\n      textNode: imageAnchor.col.toString()\n    }, {\n      name: 'xdr:colOff',\n      textNode: imageAnchor.offsetX.toString()\n    }, {\n      name: 'xdr:row',\n      textNode: imageAnchor.row.toString()\n    }, {\n      name: 'xdr:rowOff',\n      textNode: imageAnchor.offsetY.toString()\n    }]\n  };\n};\n\nvar getExt = function getExt(image) {\n  var children = [{\n    name: 'a:ext',\n    properties: {\n      rawMap: {\n        uri: '{FF2B5EF4-FFF2-40B4-BE49-F238E27FC236}'\n      }\n    },\n    children: [{\n      name: 'a16:creationId',\n      properties: {\n        rawMap: {\n          id: '{822E6D20-D7BC-2841-A643-D49A6EF008A2}',\n          'xmlns:a16': 'http://schemas.microsoft.com/office/drawing/2014/main'\n        }\n      }\n    }]\n  }];\n  var recolor = image.recolor && image.recolor.toLowerCase();\n\n  switch (recolor) {\n    case 'grayscale':\n    case 'sepia':\n    case 'washout':\n      children.push({\n        name: 'a:ext',\n        properties: {\n          rawMap: {\n            uri: '{C183D7F6-B498-43B3-948B-1728B52AA6E4}'\n          }\n        },\n        children: [{\n          name: 'adec:decorative',\n          properties: {\n            rawMap: {\n              val: '0',\n              'xmlns:adec': 'http://schemas.microsoft.com/office/drawing/2017/decorative'\n            }\n          }\n        }]\n      });\n  }\n\n  return {\n    name: 'a:extLst',\n    children: children\n  };\n};\n\nvar getNvPicPr = function getNvPicPr(image, index) {\n  return {\n    name: 'xdr:nvPicPr',\n    children: [{\n      name: 'xdr:cNvPr',\n      properties: {\n        rawMap: {\n          id: index,\n          name: image.id,\n          descr: image.altText != null ? image.altText : undefined\n        }\n      },\n      children: [getExt(image)]\n    }, {\n      name: 'xdr:cNvPicPr',\n      properties: {\n        rawMap: {\n          preferRelativeResize: '0'\n        }\n      },\n      children: [{\n        name: 'a:picLocks'\n      }]\n    }]\n  };\n};\n\nvar getColorDetails = function getColorDetails(color) {\n  if (!color.saturation && !color.tint) {\n    return;\n  }\n\n  var ret = [];\n\n  if (color.saturation) {\n    ret.push({\n      name: 'a:satMod',\n      properties: {\n        rawMap: {\n          val: color.saturation * 1000\n        }\n      }\n    });\n  }\n\n  if (color.tint) {\n    ret.push({\n      name: 'a:tint',\n      properties: {\n        rawMap: {\n          val: color.tint * 1000\n        }\n      }\n    });\n  }\n\n  return ret;\n};\n\nvar getDuoTone = function getDuoTone(primaryColor, secondaryColor) {\n  return {\n    name: 'a:duotone',\n    children: [{\n      name: 'a:prstClr',\n      properties: {\n        rawMap: {\n          val: primaryColor.color\n        }\n      },\n      children: getColorDetails(primaryColor)\n    }, {\n      name: 'a:srgbClr',\n      properties: {\n        rawMap: {\n          val: secondaryColor.color\n        }\n      },\n      children: getColorDetails(secondaryColor)\n    }]\n  };\n};\n\nvar getBlipFill = function getBlipFill(image, index) {\n  var blipChildren;\n\n  if (image.transparency) {\n    var transparency = Math.min(Math.max(image.transparency, 0), 100);\n    blipChildren = [{\n      name: 'a:alphaModFix',\n      properties: {\n        rawMap: {\n          amt: 100000 - Math.round(transparency * 1000)\n        }\n      }\n    }];\n  }\n\n  if (image.recolor) {\n    if (!blipChildren) {\n      blipChildren = [];\n    }\n\n    switch (image.recolor.toLocaleLowerCase()) {\n      case 'grayscale':\n        blipChildren.push({\n          name: 'a:grayscl'\n        });\n        break;\n\n      case 'sepia':\n        blipChildren.push(getDuoTone({\n          color: 'black'\n        }, {\n          color: 'D9C3A5',\n          tint: 50,\n          saturation: 180\n        }));\n        break;\n\n      case 'washout':\n        blipChildren.push({\n          name: 'a:lum',\n          properties: {\n            rawMap: {\n              bright: '70000',\n              contrast: '-70000'\n            }\n          }\n        });\n        break;\n\n      default:\n    }\n  }\n\n  return {\n    name: 'xdr:blipFill',\n    children: [{\n      name: 'a:blip',\n      properties: {\n        rawMap: {\n          cstate: 'print',\n          'r:embed': \"rId\" + index,\n          'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships'\n        }\n      },\n      children: blipChildren\n    }, {\n      name: 'a:stretch',\n      children: [{\n        name: 'a:fillRect'\n      }]\n    }]\n  };\n};\n\nvar getSpPr = function getSpPr(image, imageBoxSize) {\n  var xfrm = {\n    name: 'a:xfrm',\n    children: [{\n      name: 'a:off',\n      properties: {\n        rawMap: {\n          x: 0,\n          y: 0\n        }\n      }\n    }, {\n      name: 'a:ext',\n      properties: {\n        rawMap: {\n          cx: imageBoxSize.width,\n          cy: imageBoxSize.height\n        }\n      }\n    }]\n  };\n\n  if (image.rotation) {\n    var rotation = image.rotation;\n    xfrm.properties = {\n      rawMap: {\n        rot: Math.min(Math.max(rotation, 0), 360) * 60000\n      }\n    };\n  }\n\n  var prstGeom = {\n    name: 'a:prstGeom',\n    properties: {\n      rawMap: {\n        prst: 'rect'\n      }\n    },\n    children: [{\n      name: 'a:avLst'\n    }]\n  };\n  var ret = {\n    name: 'xdr:spPr',\n    children: [xfrm, prstGeom]\n  };\n  return ret;\n};\n\nvar getImageBoxSize = function getImageBoxSize(image) {\n  image.fitCell = !!image.fitCell || !image.width || !image.height;\n  var _a = image.position,\n      position = _a === void 0 ? {} : _a,\n      fitCell = image.fitCell,\n      _b = image.width,\n      width = _b === void 0 ? 0 : _b,\n      _c = image.height,\n      height = _c === void 0 ? 0 : _c,\n      totalHeight = image.totalHeight,\n      totalWidth = image.totalWidth;\n  var _d = position.offsetX,\n      offsetX = _d === void 0 ? 0 : _d,\n      _e = position.offsetY,\n      offsetY = _e === void 0 ? 0 : _e,\n      _f = position.row,\n      row = _f === void 0 ? 1 : _f,\n      _g = position.rowSpan,\n      rowSpan = _g === void 0 ? 1 : _g,\n      _h = position.column,\n      column = _h === void 0 ? 1 : _h,\n      _j = position.colSpan,\n      colSpan = _j === void 0 ? 1 : _j;\n  return {\n    from: {\n      row: row - 1,\n      col: column - 1,\n      offsetX: pixelsToEMU(offsetX),\n      offsetY: pixelsToEMU(offsetY)\n    },\n    to: {\n      row: row - 1 + (fitCell ? 1 : rowSpan - 1),\n      col: column - 1 + (fitCell ? 1 : colSpan - 1),\n      offsetX: pixelsToEMU(width + offsetX),\n      offsetY: pixelsToEMU(height + offsetY)\n    },\n    height: pixelsToEMU(totalHeight || height),\n    width: pixelsToEMU(totalWidth || width)\n  };\n};\n\nvar getPicture = function getPicture(image, currentIndex, worksheetImageIndex, imageBoxSize) {\n  return {\n    name: 'xdr:pic',\n    children: [getNvPicPr(image, currentIndex + 1), getBlipFill(image, worksheetImageIndex + 1), getSpPr(image, imageBoxSize)]\n  };\n};\n\nvar drawingFactory = {\n  getTemplate: function getTemplate(config) {\n    var sheetIndex = config.sheetIndex;\n    var sheetImages = ExcelXlsxFactory.worksheetImages.get(sheetIndex);\n    var sheetImageIds = ExcelXlsxFactory.worksheetImageIds.get(sheetIndex);\n    var children = sheetImages.map(function (image, idx) {\n      var boxSize = getImageBoxSize(image);\n      return {\n        name: 'xdr:twoCellAnchor',\n        properties: {\n          rawMap: {\n            editAs: 'absolute'\n          }\n        },\n        children: [getAnchor('from', boxSize.from), getAnchor('to', boxSize.to), getPicture(image, idx, sheetImageIds.get(image.id).index, boxSize), {\n          name: 'xdr:clientData'\n        }]\n      };\n    });\n    return {\n      name: 'xdr:wsDr',\n      properties: {\n        rawMap: {\n          'xmlns:a': 'http://schemas.openxmlformats.org/drawingml/2006/main',\n          'xmlns:xdr': 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing'\n        }\n      },\n      children: children\n    };\n  }\n};\nexport default drawingFactory;","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/files/ooxml/drawing.js"],"names":["ExcelXlsxFactory","pixelsToEMU","getAnchor","name","imageAnchor","children","textNode","col","toString","offsetX","row","offsetY","getExt","image","properties","rawMap","uri","id","recolor","toLowerCase","push","val","getNvPicPr","index","descr","altText","undefined","preferRelativeResize","getColorDetails","color","saturation","tint","ret","getDuoTone","primaryColor","secondaryColor","getBlipFill","blipChildren","transparency","Math","min","max","amt","round","toLocaleLowerCase","bright","contrast","cstate","getSpPr","imageBoxSize","xfrm","x","y","cx","width","cy","height","rotation","rot","prstGeom","prst","getImageBoxSize","fitCell","_a","position","_b","_c","totalHeight","totalWidth","_d","_e","_f","_g","rowSpan","_h","column","_j","colSpan","from","to","getPicture","currentIndex","worksheetImageIndex","drawingFactory","getTemplate","config","sheetIndex","sheetImages","worksheetImages","get","sheetImageIds","worksheetImageIds","map","idx","boxSize","editAs"],"mappings":"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","sourcesContent":["import { ExcelXlsxFactory } from '../../excelXlsxFactory';\nimport { pixelsToEMU } from '../../assets/excelUtils';\nvar getAnchor = function (name, imageAnchor) { return ({\n    name: \"xdr:\" + name,\n    children: [{\n            name: 'xdr:col',\n            textNode: (imageAnchor.col).toString()\n        }, {\n            name: 'xdr:colOff',\n            textNode: imageAnchor.offsetX.toString()\n        }, {\n            name: 'xdr:row',\n            textNode: imageAnchor.row.toString()\n        }, {\n            name: 'xdr:rowOff',\n            textNode: imageAnchor.offsetY.toString()\n        }]\n}); };\nvar getExt = function (image) {\n    var children = [{\n            name: 'a:ext',\n            properties: {\n                rawMap: {\n                    uri: '{FF2B5EF4-FFF2-40B4-BE49-F238E27FC236}'\n                }\n            },\n            children: [{\n                    name: 'a16:creationId',\n                    properties: {\n                        rawMap: {\n                            id: '{822E6D20-D7BC-2841-A643-D49A6EF008A2}',\n                            'xmlns:a16': 'http://schemas.microsoft.com/office/drawing/2014/main'\n                        }\n                    }\n                }]\n        }];\n    var recolor = image.recolor && image.recolor.toLowerCase();\n    switch (recolor) {\n        case 'grayscale':\n        case 'sepia':\n        case 'washout':\n            children.push({\n                name: 'a:ext',\n                properties: {\n                    rawMap: {\n                        uri: '{C183D7F6-B498-43B3-948B-1728B52AA6E4}'\n                    }\n                },\n                children: [{\n                        name: 'adec:decorative',\n                        properties: {\n                            rawMap: {\n                                val: '0',\n                                'xmlns:adec': 'http://schemas.microsoft.com/office/drawing/2017/decorative'\n                            }\n                        }\n                    }]\n            });\n    }\n    return {\n        name: 'a:extLst',\n        children: children\n    };\n};\nvar getNvPicPr = function (image, index) { return ({\n    name: 'xdr:nvPicPr',\n    children: [{\n            name: 'xdr:cNvPr',\n            properties: {\n                rawMap: {\n                    id: index,\n                    name: image.id,\n                    descr: image.altText != null ? image.altText : undefined\n                }\n            },\n            children: [getExt(image)]\n        }, {\n            name: 'xdr:cNvPicPr',\n            properties: {\n                rawMap: {\n                    preferRelativeResize: '0'\n                }\n            },\n            children: [{\n                    name: 'a:picLocks'\n                }]\n        }]\n}); };\nvar getColorDetails = function (color) {\n    if (!color.saturation && !color.tint) {\n        return;\n    }\n    var ret = [];\n    if (color.saturation) {\n        ret.push({\n            name: 'a:satMod',\n            properties: {\n                rawMap: {\n                    val: color.saturation * 1000\n                }\n            }\n        });\n    }\n    if (color.tint) {\n        ret.push({\n            name: 'a:tint',\n            properties: {\n                rawMap: {\n                    val: color.tint * 1000\n                }\n            }\n        });\n    }\n    return ret;\n};\nvar getDuoTone = function (primaryColor, secondaryColor) {\n    return ({\n        name: 'a:duotone',\n        children: [{\n                name: 'a:prstClr',\n                properties: {\n                    rawMap: {\n                        val: primaryColor.color\n                    }\n                },\n                children: getColorDetails(primaryColor)\n            }, {\n                name: 'a:srgbClr',\n                properties: {\n                    rawMap: {\n                        val: secondaryColor.color\n                    }\n                },\n                children: getColorDetails(secondaryColor)\n            }]\n    });\n};\nvar getBlipFill = function (image, index) {\n    var blipChildren;\n    if (image.transparency) {\n        var transparency = Math.min(Math.max(image.transparency, 0), 100);\n        blipChildren = [{\n                name: 'a:alphaModFix',\n                properties: {\n                    rawMap: {\n                        amt: 100000 - Math.round(transparency * 1000),\n                    }\n                }\n            }];\n    }\n    if (image.recolor) {\n        if (!blipChildren) {\n            blipChildren = [];\n        }\n        switch (image.recolor.toLocaleLowerCase()) {\n            case 'grayscale':\n                blipChildren.push({ name: 'a:grayscl' });\n                break;\n            case 'sepia':\n                blipChildren.push(getDuoTone({ color: 'black' }, { color: 'D9C3A5', tint: 50, saturation: 180 }));\n                break;\n            case 'washout':\n                blipChildren.push({\n                    name: 'a:lum',\n                    properties: {\n                        rawMap: {\n                            bright: '70000',\n                            contrast: '-70000'\n                        }\n                    }\n                });\n                break;\n            default:\n        }\n    }\n    return ({\n        name: 'xdr:blipFill',\n        children: [{\n                name: 'a:blip',\n                properties: {\n                    rawMap: {\n                        cstate: 'print',\n                        'r:embed': \"rId\" + index,\n                        'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships'\n                    }\n                },\n                children: blipChildren\n            }, {\n                name: 'a:stretch',\n                children: [{\n                        name: 'a:fillRect'\n                    }]\n            }]\n    });\n};\nvar getSpPr = function (image, imageBoxSize) {\n    var xfrm = {\n        name: 'a:xfrm',\n        children: [{\n                name: 'a:off',\n                properties: {\n                    rawMap: {\n                        x: 0,\n                        y: 0\n                    }\n                }\n            }, {\n                name: 'a:ext',\n                properties: {\n                    rawMap: {\n                        cx: imageBoxSize.width,\n                        cy: imageBoxSize.height\n                    }\n                }\n            }]\n    };\n    if (image.rotation) {\n        var rotation = image.rotation;\n        xfrm.properties = {\n            rawMap: {\n                rot: Math.min(Math.max(rotation, 0), 360) * 60000\n            }\n        };\n    }\n    var prstGeom = {\n        name: 'a:prstGeom',\n        properties: {\n            rawMap: {\n                prst: 'rect'\n            }\n        },\n        children: [{ name: 'a:avLst' }]\n    };\n    var ret = {\n        name: 'xdr:spPr',\n        children: [xfrm, prstGeom]\n    };\n    return ret;\n};\nvar getImageBoxSize = function (image) {\n    image.fitCell = !!image.fitCell || (!image.width || !image.height);\n    var _a = image.position, position = _a === void 0 ? {} : _a, fitCell = image.fitCell, _b = image.width, width = _b === void 0 ? 0 : _b, _c = image.height, height = _c === void 0 ? 0 : _c, totalHeight = image.totalHeight, totalWidth = image.totalWidth;\n    var _d = position.offsetX, offsetX = _d === void 0 ? 0 : _d, _e = position.offsetY, offsetY = _e === void 0 ? 0 : _e, _f = position.row, row = _f === void 0 ? 1 : _f, _g = position.rowSpan, rowSpan = _g === void 0 ? 1 : _g, _h = position.column, column = _h === void 0 ? 1 : _h, _j = position.colSpan, colSpan = _j === void 0 ? 1 : _j;\n    return {\n        from: {\n            row: row - 1,\n            col: column - 1,\n            offsetX: pixelsToEMU(offsetX),\n            offsetY: pixelsToEMU(offsetY)\n        },\n        to: {\n            row: (row - 1) + (fitCell ? 1 : rowSpan - 1),\n            col: (column - 1) + (fitCell ? 1 : colSpan - 1),\n            offsetX: pixelsToEMU(width + offsetX),\n            offsetY: pixelsToEMU(height + offsetY)\n        },\n        height: pixelsToEMU(totalHeight || height),\n        width: pixelsToEMU(totalWidth || width)\n    };\n};\nvar getPicture = function (image, currentIndex, worksheetImageIndex, imageBoxSize) {\n    return {\n        name: 'xdr:pic',\n        children: [\n            getNvPicPr(image, currentIndex + 1),\n            getBlipFill(image, worksheetImageIndex + 1),\n            getSpPr(image, imageBoxSize)\n        ]\n    };\n};\nvar drawingFactory = {\n    getTemplate: function (config) {\n        var sheetIndex = config.sheetIndex;\n        var sheetImages = ExcelXlsxFactory.worksheetImages.get(sheetIndex);\n        var sheetImageIds = ExcelXlsxFactory.worksheetImageIds.get(sheetIndex);\n        var children = sheetImages.map(function (image, idx) {\n            var boxSize = getImageBoxSize(image);\n            return ({\n                name: 'xdr:twoCellAnchor',\n                properties: {\n                    rawMap: {\n                        editAs: 'absolute'\n                    }\n                },\n                children: [\n                    getAnchor('from', boxSize.from),\n                    getAnchor('to', boxSize.to),\n                    getPicture(image, idx, sheetImageIds.get(image.id).index, boxSize),\n                    { name: 'xdr:clientData' }\n                ]\n            });\n        });\n        return {\n            name: 'xdr:wsDr',\n            properties: {\n                rawMap: {\n                    'xmlns:a': 'http://schemas.openxmlformats.org/drawingml/2006/main',\n                    'xmlns:xdr': 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing'\n                }\n            },\n            children: children\n        };\n    }\n};\nexport default drawingFactory;\n"]},"metadata":{},"sourceType":"module"}