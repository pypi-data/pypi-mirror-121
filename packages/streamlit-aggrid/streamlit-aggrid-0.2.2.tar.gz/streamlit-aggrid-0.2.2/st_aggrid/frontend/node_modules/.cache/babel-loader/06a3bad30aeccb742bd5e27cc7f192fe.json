{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, ChartType, Component, PostConstruct } from \"@ag-grid-community/core\";\nimport { ChartController } from \"../../chartController\";\nimport { LegendPanel } from \"./legend/legendPanel\";\nimport { BarSeriesPanel } from \"./series/barSeriesPanel\";\nimport { AxisPanel } from \"./axis/axisPanel\";\nimport { NavigatorPanel } from \"./navigator/navigatorPanel\";\nimport { LineSeriesPanel } from \"./series/lineSeriesPanel\";\nimport { PieSeriesPanel } from \"./series/pieSeriesPanel\";\nimport { ChartPanel } from \"./chart/chartPanel\";\nimport { AreaSeriesPanel } from \"./series/areaSeriesPanel\";\nimport { ScatterSeriesPanel } from \"./series/scatterSeriesPanel\";\nimport { HistogramSeriesPanel } from \"./series/histogramSeriesPanel\";\n\nvar ChartFormattingPanel = function (_super) {\n  __extends(ChartFormattingPanel, _super);\n\n  function ChartFormattingPanel(chartController) {\n    var _this = _super.call(this, ChartFormattingPanel.TEMPLATE) || this;\n\n    _this.panels = [];\n    _this.chartController = chartController;\n    return _this;\n  }\n\n  ChartFormattingPanel.prototype.init = function () {\n    this.createPanels();\n    this.addManagedListener(this.chartController, ChartController.EVENT_CHART_UPDATED, this.createPanels.bind(this));\n  };\n\n  ChartFormattingPanel.prototype.createPanels = function () {\n    var chartType = this.chartController.getChartType();\n    var isGrouping = this.chartController.isGrouping();\n\n    if (chartType === this.chartType && isGrouping === this.isGrouping) {\n      // existing panels can be re-used\n      return;\n    }\n\n    this.destroyPanels();\n    this.addComponent(new ChartPanel(this.chartController));\n    this.addComponent(new LegendPanel(this.chartController));\n\n    switch (chartType) {\n      case ChartType.GroupedColumn:\n      case ChartType.StackedColumn:\n      case ChartType.NormalizedColumn:\n      case ChartType.GroupedBar:\n      case ChartType.StackedBar:\n      case ChartType.NormalizedBar:\n        this.addComponent(new AxisPanel(this.chartController));\n        this.addComponent(new BarSeriesPanel(this.chartController));\n        this.addComponent(new NavigatorPanel(this.chartController));\n        break;\n\n      case ChartType.Pie:\n      case ChartType.Doughnut:\n        this.addComponent(new PieSeriesPanel(this.chartController));\n        break;\n\n      case ChartType.Line:\n        this.addComponent(new AxisPanel(this.chartController));\n        this.addComponent(new LineSeriesPanel(this.chartController));\n        this.addComponent(new NavigatorPanel(this.chartController));\n        break;\n\n      case ChartType.Scatter:\n      case ChartType.Bubble:\n        this.addComponent(new AxisPanel(this.chartController));\n        this.addComponent(new ScatterSeriesPanel(this.chartController));\n        this.addComponent(new NavigatorPanel(this.chartController));\n        break;\n\n      case ChartType.Area:\n      case ChartType.StackedArea:\n      case ChartType.NormalizedArea:\n        this.addComponent(new AxisPanel(this.chartController));\n        this.addComponent(new AreaSeriesPanel(this.chartController));\n        this.addComponent(new NavigatorPanel(this.chartController));\n        break;\n\n      case ChartType.Histogram:\n        this.addComponent(new AxisPanel(this.chartController));\n        this.addComponent(new HistogramSeriesPanel(this.chartController));\n        this.addComponent(new NavigatorPanel(this.chartController));\n        break;\n\n      default:\n        console.warn(\"AG Grid: ChartFormattingPanel - unexpected chart type index: \" + chartType + \" supplied\");\n    }\n\n    this.chartType = chartType;\n    this.isGrouping = isGrouping;\n  };\n\n  ChartFormattingPanel.prototype.addComponent = function (component) {\n    this.createBean(component);\n    this.panels.push(component);\n\n    _.addCssClass(component.getGui(), 'ag-chart-format-section');\n\n    this.getGui().appendChild(component.getGui());\n  };\n\n  ChartFormattingPanel.prototype.destroyPanels = function () {\n    var _this = this;\n\n    this.panels.forEach(function (panel) {\n      _.removeFromParent(panel.getGui());\n\n      _this.destroyBean(panel);\n    });\n  };\n\n  ChartFormattingPanel.prototype.destroy = function () {\n    this.destroyPanels();\n\n    _super.prototype.destroy.call(this);\n  };\n\n  ChartFormattingPanel.TEMPLATE = \"<div class=\\\"ag-chart-format-wrapper\\\"></div>\";\n\n  __decorate([PostConstruct], ChartFormattingPanel.prototype, \"init\", null);\n\n  return ChartFormattingPanel;\n}(Component);\n\nexport { ChartFormattingPanel };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/charts/dist/es6/charts/chartComp/menu/format/chartFormattingPanel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","ChartType","Component","PostConstruct","ChartController","LegendPanel","BarSeriesPanel","AxisPanel","NavigatorPanel","LineSeriesPanel","PieSeriesPanel","ChartPanel","AreaSeriesPanel","ScatterSeriesPanel","HistogramSeriesPanel","ChartFormattingPanel","_super","chartController","_this","call","TEMPLATE","panels","init","createPanels","addManagedListener","EVENT_CHART_UPDATED","bind","chartType","getChartType","isGrouping","destroyPanels","addComponent","GroupedColumn","StackedColumn","NormalizedColumn","GroupedBar","StackedBar","NormalizedBar","Pie","Doughnut","Line","Scatter","Bubble","Area","StackedArea","NormalizedArea","Histogram","console","warn","component","createBean","push","addCssClass","getGui","appendChild","forEach","panel","removeFromParent","destroyBean","destroy"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, ChartType, Component, PostConstruct } from \"@ag-grid-community/core\";\nimport { ChartController } from \"../../chartController\";\nimport { LegendPanel } from \"./legend/legendPanel\";\nimport { BarSeriesPanel } from \"./series/barSeriesPanel\";\nimport { AxisPanel } from \"./axis/axisPanel\";\nimport { NavigatorPanel } from \"./navigator/navigatorPanel\";\nimport { LineSeriesPanel } from \"./series/lineSeriesPanel\";\nimport { PieSeriesPanel } from \"./series/pieSeriesPanel\";\nimport { ChartPanel } from \"./chart/chartPanel\";\nimport { AreaSeriesPanel } from \"./series/areaSeriesPanel\";\nimport { ScatterSeriesPanel } from \"./series/scatterSeriesPanel\";\nimport { HistogramSeriesPanel } from \"./series/histogramSeriesPanel\";\nvar ChartFormattingPanel = /** @class */ (function (_super) {\n    __extends(ChartFormattingPanel, _super);\n    function ChartFormattingPanel(chartController) {\n        var _this = _super.call(this, ChartFormattingPanel.TEMPLATE) || this;\n        _this.panels = [];\n        _this.chartController = chartController;\n        return _this;\n    }\n    ChartFormattingPanel.prototype.init = function () {\n        this.createPanels();\n        this.addManagedListener(this.chartController, ChartController.EVENT_CHART_UPDATED, this.createPanels.bind(this));\n    };\n    ChartFormattingPanel.prototype.createPanels = function () {\n        var chartType = this.chartController.getChartType();\n        var isGrouping = this.chartController.isGrouping();\n        if (chartType === this.chartType && isGrouping === this.isGrouping) {\n            // existing panels can be re-used\n            return;\n        }\n        this.destroyPanels();\n        this.addComponent(new ChartPanel(this.chartController));\n        this.addComponent(new LegendPanel(this.chartController));\n        switch (chartType) {\n            case ChartType.GroupedColumn:\n            case ChartType.StackedColumn:\n            case ChartType.NormalizedColumn:\n            case ChartType.GroupedBar:\n            case ChartType.StackedBar:\n            case ChartType.NormalizedBar:\n                this.addComponent(new AxisPanel(this.chartController));\n                this.addComponent(new BarSeriesPanel(this.chartController));\n                this.addComponent(new NavigatorPanel(this.chartController));\n                break;\n            case ChartType.Pie:\n            case ChartType.Doughnut:\n                this.addComponent(new PieSeriesPanel(this.chartController));\n                break;\n            case ChartType.Line:\n                this.addComponent(new AxisPanel(this.chartController));\n                this.addComponent(new LineSeriesPanel(this.chartController));\n                this.addComponent(new NavigatorPanel(this.chartController));\n                break;\n            case ChartType.Scatter:\n            case ChartType.Bubble:\n                this.addComponent(new AxisPanel(this.chartController));\n                this.addComponent(new ScatterSeriesPanel(this.chartController));\n                this.addComponent(new NavigatorPanel(this.chartController));\n                break;\n            case ChartType.Area:\n            case ChartType.StackedArea:\n            case ChartType.NormalizedArea:\n                this.addComponent(new AxisPanel(this.chartController));\n                this.addComponent(new AreaSeriesPanel(this.chartController));\n                this.addComponent(new NavigatorPanel(this.chartController));\n                break;\n            case ChartType.Histogram:\n                this.addComponent(new AxisPanel(this.chartController));\n                this.addComponent(new HistogramSeriesPanel(this.chartController));\n                this.addComponent(new NavigatorPanel(this.chartController));\n                break;\n            default:\n                console.warn(\"AG Grid: ChartFormattingPanel - unexpected chart type index: \" + chartType + \" supplied\");\n        }\n        this.chartType = chartType;\n        this.isGrouping = isGrouping;\n    };\n    ChartFormattingPanel.prototype.addComponent = function (component) {\n        this.createBean(component);\n        this.panels.push(component);\n        _.addCssClass(component.getGui(), 'ag-chart-format-section');\n        this.getGui().appendChild(component.getGui());\n    };\n    ChartFormattingPanel.prototype.destroyPanels = function () {\n        var _this = this;\n        this.panels.forEach(function (panel) {\n            _.removeFromParent(panel.getGui());\n            _this.destroyBean(panel);\n        });\n    };\n    ChartFormattingPanel.prototype.destroy = function () {\n        this.destroyPanels();\n        _super.prototype.destroy.call(this);\n    };\n    ChartFormattingPanel.TEMPLATE = \"<div class=\\\"ag-chart-format-wrapper\\\"></div>\";\n    __decorate([\n        PostConstruct\n    ], ChartFormattingPanel.prototype, \"init\", null);\n    return ChartFormattingPanel;\n}(Component));\nexport { ChartFormattingPanel };\n"]},"metadata":{},"sourceType":"module"}