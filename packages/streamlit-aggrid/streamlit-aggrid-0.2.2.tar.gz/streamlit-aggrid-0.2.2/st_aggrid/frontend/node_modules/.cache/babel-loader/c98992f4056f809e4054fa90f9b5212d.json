{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Autowired, PopupComponent, RefSelector, VirtualList, KeyCode, _ } from \"@ag-grid-community/core\";\nimport { RichSelectRow } from \"./richSelectRow\";\n\nvar RichSelectCellEditor = function (_super) {\n  __extends(RichSelectCellEditor, _super);\n\n  function RichSelectCellEditor() {\n    var _this = _super.call(this, RichSelectCellEditor.TEMPLATE) || this;\n\n    _this.selectionConfirmed = false;\n    _this.searchString = '';\n    return _this;\n  }\n\n  RichSelectCellEditor.prototype.init = function (params) {\n    this.params = params;\n    this.selectedValue = params.value;\n    this.originalSelectedValue = params.value;\n    this.focusAfterAttached = params.cellStartedEdit;\n\n    var icon = _.createIconNoSpan('smallDown', this.gridOptionsWrapper);\n\n    _.addCssClass(icon, 'ag-rich-select-value-icon');\n\n    this.eValue.appendChild(icon);\n    this.virtualList = this.getContext().createBean(new VirtualList('rich-select'));\n    this.virtualList.setComponentCreator(this.createRowComponent.bind(this));\n    this.eList.appendChild(this.virtualList.getGui());\n\n    if (_.exists(this.params.cellHeight)) {\n      this.virtualList.setRowHeight(this.params.cellHeight);\n    }\n\n    this.renderSelectedValue();\n\n    if (_.missing(params.values)) {\n      console.warn('AG Grid: richSelectCellEditor requires values for it to work');\n      return;\n    }\n\n    var values = params.values;\n    this.virtualList.setModel({\n      getRowCount: function () {\n        return values.length;\n      },\n      getRow: function (index) {\n        return values[index];\n      }\n    });\n    this.addGuiEventListener('keydown', this.onKeyDown.bind(this));\n    var virtualListGui = this.virtualList.getGui();\n    this.addManagedListener(virtualListGui, 'click', this.onClick.bind(this));\n    this.addManagedListener(virtualListGui, 'mousemove', this.onMouseMove.bind(this));\n    var debounceDelay = _.exists(params.searchDebounceDelay) ? params.searchDebounceDelay : 300;\n    this.clearSearchString = _.debounce(this.clearSearchString, debounceDelay);\n\n    if (_.exists(params.charPress)) {\n      this.searchText(params.charPress);\n    }\n  };\n\n  RichSelectCellEditor.prototype.onKeyDown = function (event) {\n    var key = event.keyCode;\n    event.preventDefault();\n\n    switch (key) {\n      case KeyCode.ENTER:\n        this.onEnterKeyDown();\n        break;\n\n      case KeyCode.DOWN:\n      case KeyCode.UP:\n        this.onNavigationKeyPressed(event, key);\n        break;\n\n      default:\n        this.searchText(event);\n    }\n  };\n\n  RichSelectCellEditor.prototype.onEnterKeyDown = function () {\n    this.selectionConfirmed = true;\n    this.params.stopEditing();\n  };\n\n  RichSelectCellEditor.prototype.onNavigationKeyPressed = function (event, key) {\n    // if we don't preventDefault the page body and/or grid scroll will move.\n    event.preventDefault();\n    var oldIndex = this.params.values.indexOf(this.selectedValue);\n    var newIndex = key === KeyCode.UP ? oldIndex - 1 : oldIndex + 1;\n\n    if (newIndex >= 0 && newIndex < this.params.values.length) {\n      var valueToSelect = this.params.values[newIndex];\n      this.setSelectedValue(valueToSelect);\n    }\n  };\n\n  RichSelectCellEditor.prototype.searchText = function (key) {\n    if (typeof key !== 'string') {\n      var keyCode = key.keyCode;\n      var keyString = key.key;\n\n      if (keyCode === KeyCode.BACKSPACE) {\n        this.searchString = this.searchString.slice(0, -1);\n        keyString = '';\n      } else if (!_.isEventFromPrintableCharacter(key)) {\n        return;\n      }\n\n      this.searchText(keyString);\n      return;\n    }\n\n    this.searchString += key;\n    this.runSearch();\n    this.clearSearchString();\n  };\n\n  RichSelectCellEditor.prototype.runSearch = function () {\n    var values = this.params.values;\n    var searchStrings;\n\n    if (typeof values[0] === 'number' || typeof values[0] === 'string') {\n      searchStrings = values.map(String);\n    }\n\n    if (typeof values[0] === 'object' && this.params.colDef.keyCreator) {\n      searchStrings = values.map(this.params.colDef.keyCreator);\n    }\n\n    if (!searchStrings) {\n      return;\n    }\n\n    var topSuggestion = _.fuzzySuggestions(this.searchString, searchStrings, true, true)[0];\n\n    if (!topSuggestion) {\n      return;\n    }\n\n    var topSuggestionIndex = searchStrings.indexOf(topSuggestion);\n    var topValue = values[topSuggestionIndex];\n    this.setSelectedValue(topValue);\n  };\n\n  RichSelectCellEditor.prototype.clearSearchString = function () {\n    this.searchString = '';\n  };\n\n  RichSelectCellEditor.prototype.renderSelectedValue = function () {\n    var _this = this;\n\n    var valueFormatted = this.params.formatValue(this.selectedValue);\n    var eValue = this.eValue;\n    var params = {\n      value: this.selectedValue,\n      valueFormatted: valueFormatted,\n      api: this.gridOptionsWrapper.getApi()\n    };\n    var promise = this.userComponentFactory.newCellRenderer(this.params, params);\n\n    if (_.exists(promise)) {\n      _.bindCellRendererToHtmlElement(promise, eValue);\n\n      promise.then(function (renderer) {\n        _this.addDestroyFunc(function () {\n          return _this.getContext().destroyBean(renderer);\n        });\n      });\n    } else {\n      if (_.exists(this.selectedValue)) {\n        eValue.innerHTML = valueFormatted;\n      } else {\n        _.clearElement(eValue);\n      }\n    }\n  };\n\n  RichSelectCellEditor.prototype.setSelectedValue = function (value) {\n    if (this.selectedValue === value) {\n      return;\n    }\n\n    var index = this.params.values.indexOf(value);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.selectedValue = value;\n    this.virtualList.ensureIndexVisible(index);\n    this.virtualList.refresh();\n  };\n\n  RichSelectCellEditor.prototype.createRowComponent = function (value) {\n    var valueFormatted = this.params.formatValue(value);\n    var row = new RichSelectRow(this.params);\n    this.getContext().createBean(row);\n    row.setState(value, valueFormatted, value === this.selectedValue);\n    return row;\n  };\n\n  RichSelectCellEditor.prototype.onMouseMove = function (mouseEvent) {\n    var rect = this.virtualList.getGui().getBoundingClientRect();\n    var scrollTop = this.virtualList.getScrollTop();\n    var mouseY = mouseEvent.clientY - rect.top + scrollTop;\n    var row = Math.floor(mouseY / this.virtualList.getRowHeight());\n    var value = this.params.values[row]; // not using utils.exist() as want empty string test to pass\n\n    if (value !== undefined) {\n      this.setSelectedValue(value);\n    }\n  };\n\n  RichSelectCellEditor.prototype.onClick = function () {\n    this.selectionConfirmed = true;\n    this.params.stopEditing();\n  }; // we need to have the gui attached before we can draw the virtual rows, as the\n  // virtual row logic needs info about the gui state\n\n\n  RichSelectCellEditor.prototype.afterGuiAttached = function () {\n    var selectedIndex = this.params.values.indexOf(this.selectedValue); // we have to call this here to get the list to have the right height, ie\n    // otherwise it would not have scrolls yet and ensureIndexVisible would do nothing\n\n    this.virtualList.refresh();\n\n    if (selectedIndex >= 0) {\n      this.virtualList.ensureIndexVisible(selectedIndex);\n    } // we call refresh again, as the list could of moved, and we need to render the new rows\n\n\n    this.virtualList.refresh();\n\n    if (this.focusAfterAttached) {\n      this.getGui().focus();\n    }\n  };\n\n  RichSelectCellEditor.prototype.getValue = function () {\n    // NOTE: we don't use valueParser for Set Filter. The user should provide values that are to be\n    // set into the data. valueParser only really makese sense when the user is typing in text (not picking\n    // form a set).\n    return this.selectionConfirmed ? this.selectedValue : this.originalSelectedValue;\n  }; // tab index is needed so we can focus, which is needed for keyboard events\n\n\n  RichSelectCellEditor.TEMPLATE = \"<div class=\\\"ag-rich-select\\\" tabindex=\\\"-1\\\">\\n            <div ref=\\\"eValue\\\" class=\\\"ag-rich-select-value\\\"></div>\\n            <div ref=\\\"eList\\\" class=\\\"ag-rich-select-list\\\"></div>\\n        </div>\";\n\n  __decorate([Autowired('userComponentFactory')], RichSelectCellEditor.prototype, \"userComponentFactory\", void 0);\n\n  __decorate([RefSelector('eValue')], RichSelectCellEditor.prototype, \"eValue\", void 0);\n\n  __decorate([RefSelector('eList')], RichSelectCellEditor.prototype, \"eList\", void 0);\n\n  return RichSelectCellEditor;\n}(PopupComponent);\n\nexport { RichSelectCellEditor };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/rich-select/dist/es6/richSelect/richSelectCellEditor.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Autowired","PopupComponent","RefSelector","VirtualList","KeyCode","_","RichSelectRow","RichSelectCellEditor","_super","_this","call","TEMPLATE","selectionConfirmed","searchString","init","params","selectedValue","value","originalSelectedValue","focusAfterAttached","cellStartedEdit","icon","createIconNoSpan","gridOptionsWrapper","addCssClass","eValue","appendChild","virtualList","getContext","createBean","setComponentCreator","createRowComponent","bind","eList","getGui","exists","cellHeight","setRowHeight","renderSelectedValue","missing","values","console","warn","setModel","getRowCount","getRow","index","addGuiEventListener","onKeyDown","virtualListGui","addManagedListener","onClick","onMouseMove","debounceDelay","searchDebounceDelay","clearSearchString","debounce","charPress","searchText","event","keyCode","preventDefault","ENTER","onEnterKeyDown","DOWN","UP","onNavigationKeyPressed","stopEditing","oldIndex","indexOf","newIndex","valueToSelect","setSelectedValue","keyString","BACKSPACE","slice","isEventFromPrintableCharacter","runSearch","searchStrings","map","String","colDef","keyCreator","topSuggestion","fuzzySuggestions","topSuggestionIndex","topValue","valueFormatted","formatValue","api","getApi","promise","userComponentFactory","newCellRenderer","bindCellRendererToHtmlElement","then","renderer","addDestroyFunc","destroyBean","innerHTML","clearElement","ensureIndexVisible","refresh","row","setState","mouseEvent","rect","getBoundingClientRect","scrollTop","getScrollTop","mouseY","clientY","top","Math","floor","getRowHeight","undefined","afterGuiAttached","selectedIndex","focus","getValue"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Autowired, PopupComponent, RefSelector, VirtualList, KeyCode, _, } from \"@ag-grid-community/core\";\nimport { RichSelectRow } from \"./richSelectRow\";\nvar RichSelectCellEditor = /** @class */ (function (_super) {\n    __extends(RichSelectCellEditor, _super);\n    function RichSelectCellEditor() {\n        var _this = _super.call(this, RichSelectCellEditor.TEMPLATE) || this;\n        _this.selectionConfirmed = false;\n        _this.searchString = '';\n        return _this;\n    }\n    RichSelectCellEditor.prototype.init = function (params) {\n        this.params = params;\n        this.selectedValue = params.value;\n        this.originalSelectedValue = params.value;\n        this.focusAfterAttached = params.cellStartedEdit;\n        var icon = _.createIconNoSpan('smallDown', this.gridOptionsWrapper);\n        _.addCssClass(icon, 'ag-rich-select-value-icon');\n        this.eValue.appendChild(icon);\n        this.virtualList = this.getContext().createBean(new VirtualList('rich-select'));\n        this.virtualList.setComponentCreator(this.createRowComponent.bind(this));\n        this.eList.appendChild(this.virtualList.getGui());\n        if (_.exists(this.params.cellHeight)) {\n            this.virtualList.setRowHeight(this.params.cellHeight);\n        }\n        this.renderSelectedValue();\n        if (_.missing(params.values)) {\n            console.warn('AG Grid: richSelectCellEditor requires values for it to work');\n            return;\n        }\n        var values = params.values;\n        this.virtualList.setModel({\n            getRowCount: function () { return values.length; },\n            getRow: function (index) { return values[index]; }\n        });\n        this.addGuiEventListener('keydown', this.onKeyDown.bind(this));\n        var virtualListGui = this.virtualList.getGui();\n        this.addManagedListener(virtualListGui, 'click', this.onClick.bind(this));\n        this.addManagedListener(virtualListGui, 'mousemove', this.onMouseMove.bind(this));\n        var debounceDelay = _.exists(params.searchDebounceDelay) ? params.searchDebounceDelay : 300;\n        this.clearSearchString = _.debounce(this.clearSearchString, debounceDelay);\n        if (_.exists(params.charPress)) {\n            this.searchText(params.charPress);\n        }\n    };\n    RichSelectCellEditor.prototype.onKeyDown = function (event) {\n        var key = event.keyCode;\n        event.preventDefault();\n        switch (key) {\n            case KeyCode.ENTER:\n                this.onEnterKeyDown();\n                break;\n            case KeyCode.DOWN:\n            case KeyCode.UP:\n                this.onNavigationKeyPressed(event, key);\n                break;\n            default:\n                this.searchText(event);\n        }\n    };\n    RichSelectCellEditor.prototype.onEnterKeyDown = function () {\n        this.selectionConfirmed = true;\n        this.params.stopEditing();\n    };\n    RichSelectCellEditor.prototype.onNavigationKeyPressed = function (event, key) {\n        // if we don't preventDefault the page body and/or grid scroll will move.\n        event.preventDefault();\n        var oldIndex = this.params.values.indexOf(this.selectedValue);\n        var newIndex = key === KeyCode.UP ? oldIndex - 1 : oldIndex + 1;\n        if (newIndex >= 0 && newIndex < this.params.values.length) {\n            var valueToSelect = this.params.values[newIndex];\n            this.setSelectedValue(valueToSelect);\n        }\n    };\n    RichSelectCellEditor.prototype.searchText = function (key) {\n        if (typeof key !== 'string') {\n            var keyCode = key.keyCode;\n            var keyString = key.key;\n            if (keyCode === KeyCode.BACKSPACE) {\n                this.searchString = this.searchString.slice(0, -1);\n                keyString = '';\n            }\n            else if (!_.isEventFromPrintableCharacter(key)) {\n                return;\n            }\n            this.searchText(keyString);\n            return;\n        }\n        this.searchString += key;\n        this.runSearch();\n        this.clearSearchString();\n    };\n    RichSelectCellEditor.prototype.runSearch = function () {\n        var values = this.params.values;\n        var searchStrings;\n        if (typeof values[0] === 'number' || typeof values[0] === 'string') {\n            searchStrings = values.map(String);\n        }\n        if (typeof values[0] === 'object' && this.params.colDef.keyCreator) {\n            searchStrings = values.map(this.params.colDef.keyCreator);\n        }\n        if (!searchStrings) {\n            return;\n        }\n        var topSuggestion = _.fuzzySuggestions(this.searchString, searchStrings, true, true)[0];\n        if (!topSuggestion) {\n            return;\n        }\n        var topSuggestionIndex = searchStrings.indexOf(topSuggestion);\n        var topValue = values[topSuggestionIndex];\n        this.setSelectedValue(topValue);\n    };\n    RichSelectCellEditor.prototype.clearSearchString = function () {\n        this.searchString = '';\n    };\n    RichSelectCellEditor.prototype.renderSelectedValue = function () {\n        var _this = this;\n        var valueFormatted = this.params.formatValue(this.selectedValue);\n        var eValue = this.eValue;\n        var params = {\n            value: this.selectedValue,\n            valueFormatted: valueFormatted,\n            api: this.gridOptionsWrapper.getApi()\n        };\n        var promise = this.userComponentFactory.newCellRenderer(this.params, params);\n        if (_.exists(promise)) {\n            _.bindCellRendererToHtmlElement(promise, eValue);\n            promise.then(function (renderer) {\n                _this.addDestroyFunc(function () { return _this.getContext().destroyBean(renderer); });\n            });\n        }\n        else {\n            if (_.exists(this.selectedValue)) {\n                eValue.innerHTML = valueFormatted;\n            }\n            else {\n                _.clearElement(eValue);\n            }\n        }\n    };\n    RichSelectCellEditor.prototype.setSelectedValue = function (value) {\n        if (this.selectedValue === value) {\n            return;\n        }\n        var index = this.params.values.indexOf(value);\n        if (index === -1) {\n            return;\n        }\n        this.selectedValue = value;\n        this.virtualList.ensureIndexVisible(index);\n        this.virtualList.refresh();\n    };\n    RichSelectCellEditor.prototype.createRowComponent = function (value) {\n        var valueFormatted = this.params.formatValue(value);\n        var row = new RichSelectRow(this.params);\n        this.getContext().createBean(row);\n        row.setState(value, valueFormatted, value === this.selectedValue);\n        return row;\n    };\n    RichSelectCellEditor.prototype.onMouseMove = function (mouseEvent) {\n        var rect = this.virtualList.getGui().getBoundingClientRect();\n        var scrollTop = this.virtualList.getScrollTop();\n        var mouseY = mouseEvent.clientY - rect.top + scrollTop;\n        var row = Math.floor(mouseY / this.virtualList.getRowHeight());\n        var value = this.params.values[row];\n        // not using utils.exist() as want empty string test to pass\n        if (value !== undefined) {\n            this.setSelectedValue(value);\n        }\n    };\n    RichSelectCellEditor.prototype.onClick = function () {\n        this.selectionConfirmed = true;\n        this.params.stopEditing();\n    };\n    // we need to have the gui attached before we can draw the virtual rows, as the\n    // virtual row logic needs info about the gui state\n    RichSelectCellEditor.prototype.afterGuiAttached = function () {\n        var selectedIndex = this.params.values.indexOf(this.selectedValue);\n        // we have to call this here to get the list to have the right height, ie\n        // otherwise it would not have scrolls yet and ensureIndexVisible would do nothing\n        this.virtualList.refresh();\n        if (selectedIndex >= 0) {\n            this.virtualList.ensureIndexVisible(selectedIndex);\n        }\n        // we call refresh again, as the list could of moved, and we need to render the new rows\n        this.virtualList.refresh();\n        if (this.focusAfterAttached) {\n            this.getGui().focus();\n        }\n    };\n    RichSelectCellEditor.prototype.getValue = function () {\n        // NOTE: we don't use valueParser for Set Filter. The user should provide values that are to be\n        // set into the data. valueParser only really makese sense when the user is typing in text (not picking\n        // form a set).\n        return this.selectionConfirmed ? this.selectedValue : this.originalSelectedValue;\n    };\n    // tab index is needed so we can focus, which is needed for keyboard events\n    RichSelectCellEditor.TEMPLATE = \"<div class=\\\"ag-rich-select\\\" tabindex=\\\"-1\\\">\\n            <div ref=\\\"eValue\\\" class=\\\"ag-rich-select-value\\\"></div>\\n            <div ref=\\\"eList\\\" class=\\\"ag-rich-select-list\\\"></div>\\n        </div>\";\n    __decorate([\n        Autowired('userComponentFactory')\n    ], RichSelectCellEditor.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        RefSelector('eValue')\n    ], RichSelectCellEditor.prototype, \"eValue\", void 0);\n    __decorate([\n        RefSelector('eList')\n    ], RichSelectCellEditor.prototype, \"eList\", void 0);\n    return RichSelectCellEditor;\n}(PopupComponent));\nexport { RichSelectCellEditor };\n"]},"metadata":{},"sourceType":"module"}