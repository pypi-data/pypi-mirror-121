{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { _, Autowired, Bean, BeanStub, PostConstruct, RowNode } from \"@ag-grid-community/core\";\n\nvar BlockUtils = function (_super) {\n  __extends(BlockUtils, _super);\n\n  function BlockUtils() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BlockUtils.prototype.postConstruct = function () {\n    this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber();\n    this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n    this.usingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n  };\n\n  BlockUtils.prototype.createRowNode = function (params) {\n    var rowNode = this.getContext().createBean(new RowNode());\n    rowNode.setRowHeight(this.rowHeight);\n    rowNode.group = params.group;\n    rowNode.leafGroup = params.leafGroup;\n    rowNode.level = params.level;\n    rowNode.uiLevel = params.level;\n    rowNode.parent = params.parent; // stub gets set to true here, and then false when this rowNode gets it's data\n\n    rowNode.stub = true;\n\n    if (rowNode.group) {\n      rowNode.expanded = false;\n      rowNode.field = params.field;\n      rowNode.rowGroupColumn = params.rowGroupColumn;\n    }\n\n    return rowNode;\n  };\n\n  BlockUtils.prototype.destroyRowNodes = function (rowNodes) {\n    if (rowNodes) {\n      rowNodes.forEach(this.destroyRowNode.bind(this));\n    }\n  };\n\n  BlockUtils.prototype.destroyRowNode = function (rowNode) {\n    if (rowNode.childStore) {\n      this.destroyBean(rowNode.childStore);\n      rowNode.childStore = null;\n    } // this is needed, so row render knows to fade out the row, otherwise it\n    // sees row top is present, and thinks the row should be shown. maybe\n    // rowNode should have a flag on whether it is visible???\n\n\n    rowNode.clearRowTopAndRowIndex();\n\n    if (rowNode.id != null) {\n      this.nodeManager.removeNode(rowNode);\n    }\n  };\n\n  BlockUtils.prototype.setDataIntoRowNode = function (rowNode, data, defaultId) {\n    rowNode.stub = false;\n\n    if (_.exists(data)) {\n      rowNode.setDataAndId(data, defaultId);\n\n      if (this.usingTreeData) {\n        var isGroupFunc = this.gridOptionsWrapper.getIsServerSideGroupFunc();\n        var getKeyFunc = this.gridOptionsWrapper.getServerSideGroupKeyFunc();\n\n        if (isGroupFunc != null) {\n          rowNode.group = isGroupFunc(rowNode.data);\n\n          if (rowNode.group && getKeyFunc != null) {\n            rowNode.key = getKeyFunc(rowNode.data);\n          }\n        }\n      } else if (rowNode.group) {\n        rowNode.key = this.valueService.getValue(rowNode.rowGroupColumn, rowNode);\n\n        if (rowNode.key === null || rowNode.key === undefined) {\n          _.doOnce(function () {\n            console.warn(\"null and undefined values are not allowed for server side row model keys\");\n\n            if (rowNode.rowGroupColumn) {\n              console.warn(\"column = \" + rowNode.rowGroupColumn.getId());\n            }\n\n            console.warn(\"data is \", rowNode.data);\n          }, 'ServerSideBlock-CannotHaveNullOrUndefinedForKey');\n        }\n      } else if (this.usingMasterDetail) {\n        var isMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc();\n\n        if (isMasterFunc != null) {\n          rowNode.master = isMasterFunc(rowNode.data);\n        } else {\n          rowNode.master = true;\n        }\n      }\n    } else {\n      rowNode.setDataAndId(undefined, undefined);\n      rowNode.key = null;\n    }\n\n    if (this.usingTreeData || rowNode.group) {\n      this.setGroupDataIntoRowNode(rowNode);\n      this.setChildCountIntoRowNode(rowNode);\n    } // this needs to be done AFTER setGroupDataIntoRowNode(), as the height can depend on the group data\n    // getting set, if it's a group node and colDef.autoHeight=true\n\n\n    if (_.exists(data)) {\n      rowNode.setRowHeight(this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n    }\n  };\n\n  BlockUtils.prototype.setChildCountIntoRowNode = function (rowNode) {\n    var getChildCount = this.gridOptionsWrapper.getChildCountFunc();\n\n    if (getChildCount) {\n      rowNode.allChildrenCount = getChildCount(rowNode.data);\n    }\n  };\n\n  BlockUtils.prototype.setGroupDataIntoRowNode = function (rowNode) {\n    var _this = this;\n\n    var groupDisplayCols = this.columnModel.getGroupDisplayColumns();\n    var usingTreeData = this.gridOptionsWrapper.isTreeData();\n    groupDisplayCols.forEach(function (col) {\n      if (rowNode.groupData == null) {\n        rowNode.groupData = {};\n      }\n\n      if (usingTreeData) {\n        rowNode.groupData[col.getColId()] = rowNode.key;\n      } else if (col.isRowGroupDisplayed(rowNode.rowGroupColumn.getId())) {\n        var groupValue = _this.valueService.getValue(rowNode.rowGroupColumn, rowNode);\n\n        rowNode.groupData[col.getColId()] = groupValue;\n      }\n    });\n  };\n\n  BlockUtils.prototype.clearDisplayIndex = function (rowNode) {\n    rowNode.clearRowTopAndRowIndex();\n\n    var hasChildStore = rowNode.group && _.exists(rowNode.childStore);\n\n    if (hasChildStore) {\n      var childStore = rowNode.childStore;\n      childStore.clearDisplayIndexes();\n    }\n\n    var hasDetailNode = rowNode.master && rowNode.detailNode;\n\n    if (hasDetailNode) {\n      rowNode.detailNode.clearRowTopAndRowIndex();\n    }\n  };\n\n  BlockUtils.prototype.setDisplayIndex = function (rowNode, displayIndexSeq, nextRowTop) {\n    // set this row\n    rowNode.setRowIndex(displayIndexSeq.next());\n    rowNode.setRowTop(nextRowTop.value);\n    nextRowTop.value += rowNode.rowHeight; // set child for master / detail\n\n    var hasDetailRow = rowNode.master;\n\n    if (hasDetailRow) {\n      if (rowNode.expanded && rowNode.detailNode) {\n        rowNode.detailNode.setRowIndex(displayIndexSeq.next());\n        rowNode.detailNode.setRowTop(nextRowTop.value);\n        nextRowTop.value += rowNode.detailNode.rowHeight;\n      } else if (rowNode.detailNode) {\n        rowNode.detailNode.clearRowTopAndRowIndex();\n      }\n    } // set children for SSRM child rows\n\n\n    var hasChildStore = rowNode.group && _.exists(rowNode.childStore);\n\n    if (hasChildStore) {\n      var childStore = rowNode.childStore;\n\n      if (rowNode.expanded) {\n        childStore.setDisplayIndexes(displayIndexSeq, nextRowTop);\n      } else {\n        // we need to clear the row tops, as the row renderer depends on\n        // this to know if the row should be faded out\n        childStore.clearDisplayIndexes();\n      }\n    }\n  };\n\n  BlockUtils.prototype.binarySearchForDisplayIndex = function (displayRowIndex, rowNodes) {\n    var bottomPointer = 0;\n    var topPointer = rowNodes.length - 1;\n\n    if (_.missing(topPointer) || _.missing(bottomPointer)) {\n      console.warn(\"ag-grid: error: topPointer = \" + topPointer + \", bottomPointer = \" + bottomPointer);\n      return undefined;\n    }\n\n    while (true) {\n      var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n      var currentRowNode = rowNodes[midPointer]; // first check current row for index\n\n      if (currentRowNode.rowIndex === displayRowIndex) {\n        return currentRowNode;\n      } // then check if current row contains a detail row with the index\n\n\n      var expandedMasterRow = currentRowNode.master && currentRowNode.expanded;\n\n      if (expandedMasterRow && currentRowNode.detailNode.rowIndex === displayRowIndex) {\n        return currentRowNode.detailNode;\n      } // then check if child cache contains index\n\n\n      var childStore = currentRowNode.childStore;\n\n      if (currentRowNode.expanded && childStore && childStore.isDisplayIndexInStore(displayRowIndex)) {\n        return childStore.getRowUsingDisplayIndex(displayRowIndex);\n      } // otherwise adjust pointers to continue searching for index\n\n\n      if (currentRowNode.rowIndex < displayRowIndex) {\n        bottomPointer = midPointer + 1;\n      } else if (currentRowNode.rowIndex > displayRowIndex) {\n        topPointer = midPointer - 1;\n      } else {\n        console.warn(\"AG Grid: error: unable to locate rowIndex = \" + displayRowIndex + \" in cache\");\n        return undefined;\n      }\n    }\n  };\n\n  BlockUtils.prototype.extractRowBounds = function (rowNode, index) {\n    var extractRowBounds = function extractRowBounds(currentRowNode) {\n      return {\n        rowHeight: currentRowNode.rowHeight,\n        rowTop: currentRowNode.rowTop\n      };\n    };\n\n    if (rowNode.rowIndex === index) {\n      return extractRowBounds(rowNode);\n    }\n\n    if (rowNode.group && rowNode.expanded && _.exists(rowNode.childStore)) {\n      var childStore = rowNode.childStore;\n\n      if (childStore.isDisplayIndexInStore(index)) {\n        return childStore.getRowBounds(index);\n      }\n    } else if (rowNode.master && rowNode.expanded && _.exists(rowNode.detailNode)) {\n      if (rowNode.detailNode.rowIndex === index) {\n        return extractRowBounds(rowNode.detailNode);\n      }\n    }\n  };\n\n  BlockUtils.prototype.getIndexAtPixel = function (rowNode, pixel) {\n    // first check if pixel is in range of current row\n    if (rowNode.isPixelInRange(pixel)) {\n      return rowNode.rowIndex;\n    } // then check if current row contains a detail row with pixel in range\n\n\n    var expandedMasterRow = rowNode.master && rowNode.expanded;\n\n    if (expandedMasterRow && rowNode.detailNode.isPixelInRange(pixel)) {\n      return rowNode.detailNode.rowIndex;\n    } // then check if it's a group row with a child cache with pixel in range\n\n\n    if (rowNode.group && rowNode.expanded && _.exists(rowNode.childStore)) {\n      var childStore = rowNode.childStore;\n\n      if (childStore.isPixelInRange(pixel)) {\n        return childStore.getRowIndexAtPixel(pixel);\n      }\n    }\n\n    return null; // pixel is not within this row node or it's children / detail, so return undefined\n  };\n\n  BlockUtils.prototype.createNodeIdPrefix = function (parentRowNode) {\n    var parts = [];\n    var rowNode = parentRowNode; // pull keys from all parent nodes, but do not include the root node\n\n    while (rowNode && rowNode.level >= 0) {\n      parts.push(rowNode.key);\n      rowNode = rowNode.parent;\n    }\n\n    if (parts.length > 0) {\n      return parts.reverse().join('-');\n    } // no prefix, so node id's are left as they are\n\n\n    return undefined;\n  };\n\n  BlockUtils.prototype.checkOpenByDefault = function (rowNode) {\n    if (!rowNode.isExpandable()) {\n      return;\n    }\n\n    var userFunc = this.gridOptionsWrapper.getIsServerSideGroupOpenByDefaultFunc();\n\n    if (!userFunc) {\n      return;\n    }\n\n    var params = {\n      data: rowNode.data,\n      rowNode: rowNode\n    };\n    var userFuncRes = userFunc(params);\n\n    if (userFuncRes) {\n      // we do this in a timeout, so that we don't expand a row node while in the middle\n      // of setting up rows, setting up rows is complex enough without another chunk of work\n      // getting added to the call stack. this is also helpful as openByDefault may or may\n      // not happen (so makes setting up rows more deterministic by expands never happening)\n      // and also checkOpenByDefault is shard with both store types, so easier control how it\n      // impacts things by keeping it in new VM turn.\n      window.setTimeout(function () {\n        return rowNode.setExpanded(true);\n      }, 0);\n    }\n  };\n\n  __decorate([Autowired('valueService')], BlockUtils.prototype, \"valueService\", void 0);\n\n  __decorate([Autowired('columnModel')], BlockUtils.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('ssrmNodeManager')], BlockUtils.prototype, \"nodeManager\", void 0);\n\n  __decorate([PostConstruct], BlockUtils.prototype, \"postConstruct\", null);\n\n  BlockUtils = __decorate([Bean('ssrmBlockUtils')], BlockUtils);\n  return BlockUtils;\n}(BeanStub);\n\nexport { BlockUtils };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/server-side-row-model/dist/es6/serverSideRowModel/blocks/blockUtils.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","_","Autowired","Bean","BeanStub","PostConstruct","RowNode","BlockUtils","_super","apply","postConstruct","rowHeight","gridOptionsWrapper","getRowHeightAsNumber","usingTreeData","isTreeData","usingMasterDetail","isMasterDetail","createRowNode","params","rowNode","getContext","createBean","setRowHeight","group","leafGroup","level","uiLevel","parent","stub","expanded","field","rowGroupColumn","destroyRowNodes","rowNodes","forEach","destroyRowNode","bind","childStore","destroyBean","clearRowTopAndRowIndex","id","nodeManager","removeNode","setDataIntoRowNode","data","defaultId","exists","setDataAndId","isGroupFunc","getIsServerSideGroupFunc","getKeyFunc","getServerSideGroupKeyFunc","valueService","getValue","undefined","doOnce","console","warn","getId","isMasterFunc","getIsRowMasterFunc","master","setGroupDataIntoRowNode","setChildCountIntoRowNode","getRowHeightForNode","height","getChildCount","getChildCountFunc","allChildrenCount","_this","groupDisplayCols","columnModel","getGroupDisplayColumns","col","groupData","getColId","isRowGroupDisplayed","groupValue","clearDisplayIndex","hasChildStore","clearDisplayIndexes","hasDetailNode","detailNode","setDisplayIndex","displayIndexSeq","nextRowTop","setRowIndex","next","setRowTop","value","hasDetailRow","setDisplayIndexes","binarySearchForDisplayIndex","displayRowIndex","bottomPointer","topPointer","missing","midPointer","Math","floor","currentRowNode","rowIndex","expandedMasterRow","isDisplayIndexInStore","getRowUsingDisplayIndex","extractRowBounds","index","rowTop","getRowBounds","getIndexAtPixel","pixel","isPixelInRange","getRowIndexAtPixel","createNodeIdPrefix","parentRowNode","parts","push","reverse","join","checkOpenByDefault","isExpandable","userFunc","getIsServerSideGroupOpenByDefaultFunc","userFuncRes","window","setTimeout","setExpanded"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { _, Autowired, Bean, BeanStub, PostConstruct, RowNode } from \"@ag-grid-community/core\";\nvar BlockUtils = /** @class */ (function (_super) {\n    __extends(BlockUtils, _super);\n    function BlockUtils() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BlockUtils.prototype.postConstruct = function () {\n        this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber();\n        this.usingTreeData = this.gridOptionsWrapper.isTreeData();\n        this.usingMasterDetail = this.gridOptionsWrapper.isMasterDetail();\n    };\n    BlockUtils.prototype.createRowNode = function (params) {\n        var rowNode = this.getContext().createBean(new RowNode());\n        rowNode.setRowHeight(this.rowHeight);\n        rowNode.group = params.group;\n        rowNode.leafGroup = params.leafGroup;\n        rowNode.level = params.level;\n        rowNode.uiLevel = params.level;\n        rowNode.parent = params.parent;\n        // stub gets set to true here, and then false when this rowNode gets it's data\n        rowNode.stub = true;\n        if (rowNode.group) {\n            rowNode.expanded = false;\n            rowNode.field = params.field;\n            rowNode.rowGroupColumn = params.rowGroupColumn;\n        }\n        return rowNode;\n    };\n    BlockUtils.prototype.destroyRowNodes = function (rowNodes) {\n        if (rowNodes) {\n            rowNodes.forEach(this.destroyRowNode.bind(this));\n        }\n    };\n    BlockUtils.prototype.destroyRowNode = function (rowNode) {\n        if (rowNode.childStore) {\n            this.destroyBean(rowNode.childStore);\n            rowNode.childStore = null;\n        }\n        // this is needed, so row render knows to fade out the row, otherwise it\n        // sees row top is present, and thinks the row should be shown. maybe\n        // rowNode should have a flag on whether it is visible???\n        rowNode.clearRowTopAndRowIndex();\n        if (rowNode.id != null) {\n            this.nodeManager.removeNode(rowNode);\n        }\n    };\n    BlockUtils.prototype.setDataIntoRowNode = function (rowNode, data, defaultId) {\n        rowNode.stub = false;\n        if (_.exists(data)) {\n            rowNode.setDataAndId(data, defaultId);\n            if (this.usingTreeData) {\n                var isGroupFunc = this.gridOptionsWrapper.getIsServerSideGroupFunc();\n                var getKeyFunc = this.gridOptionsWrapper.getServerSideGroupKeyFunc();\n                if (isGroupFunc != null) {\n                    rowNode.group = isGroupFunc(rowNode.data);\n                    if (rowNode.group && getKeyFunc != null) {\n                        rowNode.key = getKeyFunc(rowNode.data);\n                    }\n                }\n            }\n            else if (rowNode.group) {\n                rowNode.key = this.valueService.getValue(rowNode.rowGroupColumn, rowNode);\n                if (rowNode.key === null || rowNode.key === undefined) {\n                    _.doOnce(function () {\n                        console.warn(\"null and undefined values are not allowed for server side row model keys\");\n                        if (rowNode.rowGroupColumn) {\n                            console.warn(\"column = \" + rowNode.rowGroupColumn.getId());\n                        }\n                        console.warn(\"data is \", rowNode.data);\n                    }, 'ServerSideBlock-CannotHaveNullOrUndefinedForKey');\n                }\n            }\n            else if (this.usingMasterDetail) {\n                var isMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc();\n                if (isMasterFunc != null) {\n                    rowNode.master = isMasterFunc(rowNode.data);\n                }\n                else {\n                    rowNode.master = true;\n                }\n            }\n        }\n        else {\n            rowNode.setDataAndId(undefined, undefined);\n            rowNode.key = null;\n        }\n        if (this.usingTreeData || rowNode.group) {\n            this.setGroupDataIntoRowNode(rowNode);\n            this.setChildCountIntoRowNode(rowNode);\n        }\n        // this needs to be done AFTER setGroupDataIntoRowNode(), as the height can depend on the group data\n        // getting set, if it's a group node and colDef.autoHeight=true\n        if (_.exists(data)) {\n            rowNode.setRowHeight(this.gridOptionsWrapper.getRowHeightForNode(rowNode).height);\n        }\n    };\n    BlockUtils.prototype.setChildCountIntoRowNode = function (rowNode) {\n        var getChildCount = this.gridOptionsWrapper.getChildCountFunc();\n        if (getChildCount) {\n            rowNode.allChildrenCount = getChildCount(rowNode.data);\n        }\n    };\n    BlockUtils.prototype.setGroupDataIntoRowNode = function (rowNode) {\n        var _this = this;\n        var groupDisplayCols = this.columnModel.getGroupDisplayColumns();\n        var usingTreeData = this.gridOptionsWrapper.isTreeData();\n        groupDisplayCols.forEach(function (col) {\n            if (rowNode.groupData == null) {\n                rowNode.groupData = {};\n            }\n            if (usingTreeData) {\n                rowNode.groupData[col.getColId()] = rowNode.key;\n            }\n            else if (col.isRowGroupDisplayed(rowNode.rowGroupColumn.getId())) {\n                var groupValue = _this.valueService.getValue(rowNode.rowGroupColumn, rowNode);\n                rowNode.groupData[col.getColId()] = groupValue;\n            }\n        });\n    };\n    BlockUtils.prototype.clearDisplayIndex = function (rowNode) {\n        rowNode.clearRowTopAndRowIndex();\n        var hasChildStore = rowNode.group && _.exists(rowNode.childStore);\n        if (hasChildStore) {\n            var childStore = rowNode.childStore;\n            childStore.clearDisplayIndexes();\n        }\n        var hasDetailNode = rowNode.master && rowNode.detailNode;\n        if (hasDetailNode) {\n            rowNode.detailNode.clearRowTopAndRowIndex();\n        }\n    };\n    BlockUtils.prototype.setDisplayIndex = function (rowNode, displayIndexSeq, nextRowTop) {\n        // set this row\n        rowNode.setRowIndex(displayIndexSeq.next());\n        rowNode.setRowTop(nextRowTop.value);\n        nextRowTop.value += rowNode.rowHeight;\n        // set child for master / detail\n        var hasDetailRow = rowNode.master;\n        if (hasDetailRow) {\n            if (rowNode.expanded && rowNode.detailNode) {\n                rowNode.detailNode.setRowIndex(displayIndexSeq.next());\n                rowNode.detailNode.setRowTop(nextRowTop.value);\n                nextRowTop.value += rowNode.detailNode.rowHeight;\n            }\n            else if (rowNode.detailNode) {\n                rowNode.detailNode.clearRowTopAndRowIndex();\n            }\n        }\n        // set children for SSRM child rows\n        var hasChildStore = rowNode.group && _.exists(rowNode.childStore);\n        if (hasChildStore) {\n            var childStore = rowNode.childStore;\n            if (rowNode.expanded) {\n                childStore.setDisplayIndexes(displayIndexSeq, nextRowTop);\n            }\n            else {\n                // we need to clear the row tops, as the row renderer depends on\n                // this to know if the row should be faded out\n                childStore.clearDisplayIndexes();\n            }\n        }\n    };\n    BlockUtils.prototype.binarySearchForDisplayIndex = function (displayRowIndex, rowNodes) {\n        var bottomPointer = 0;\n        var topPointer = rowNodes.length - 1;\n        if (_.missing(topPointer) || _.missing(bottomPointer)) {\n            console.warn(\"ag-grid: error: topPointer = \" + topPointer + \", bottomPointer = \" + bottomPointer);\n            return undefined;\n        }\n        while (true) {\n            var midPointer = Math.floor((bottomPointer + topPointer) / 2);\n            var currentRowNode = rowNodes[midPointer];\n            // first check current row for index\n            if (currentRowNode.rowIndex === displayRowIndex) {\n                return currentRowNode;\n            }\n            // then check if current row contains a detail row with the index\n            var expandedMasterRow = currentRowNode.master && currentRowNode.expanded;\n            if (expandedMasterRow && currentRowNode.detailNode.rowIndex === displayRowIndex) {\n                return currentRowNode.detailNode;\n            }\n            // then check if child cache contains index\n            var childStore = currentRowNode.childStore;\n            if (currentRowNode.expanded && childStore && childStore.isDisplayIndexInStore(displayRowIndex)) {\n                return childStore.getRowUsingDisplayIndex(displayRowIndex);\n            }\n            // otherwise adjust pointers to continue searching for index\n            if (currentRowNode.rowIndex < displayRowIndex) {\n                bottomPointer = midPointer + 1;\n            }\n            else if (currentRowNode.rowIndex > displayRowIndex) {\n                topPointer = midPointer - 1;\n            }\n            else {\n                console.warn(\"AG Grid: error: unable to locate rowIndex = \" + displayRowIndex + \" in cache\");\n                return undefined;\n            }\n        }\n    };\n    BlockUtils.prototype.extractRowBounds = function (rowNode, index) {\n        var extractRowBounds = function (currentRowNode) { return ({\n            rowHeight: currentRowNode.rowHeight,\n            rowTop: currentRowNode.rowTop\n        }); };\n        if (rowNode.rowIndex === index) {\n            return extractRowBounds(rowNode);\n        }\n        if (rowNode.group && rowNode.expanded && _.exists(rowNode.childStore)) {\n            var childStore = rowNode.childStore;\n            if (childStore.isDisplayIndexInStore(index)) {\n                return childStore.getRowBounds(index);\n            }\n        }\n        else if (rowNode.master && rowNode.expanded && _.exists(rowNode.detailNode)) {\n            if (rowNode.detailNode.rowIndex === index) {\n                return extractRowBounds(rowNode.detailNode);\n            }\n        }\n    };\n    BlockUtils.prototype.getIndexAtPixel = function (rowNode, pixel) {\n        // first check if pixel is in range of current row\n        if (rowNode.isPixelInRange(pixel)) {\n            return rowNode.rowIndex;\n        }\n        // then check if current row contains a detail row with pixel in range\n        var expandedMasterRow = rowNode.master && rowNode.expanded;\n        if (expandedMasterRow && rowNode.detailNode.isPixelInRange(pixel)) {\n            return rowNode.detailNode.rowIndex;\n        }\n        // then check if it's a group row with a child cache with pixel in range\n        if (rowNode.group && rowNode.expanded && _.exists(rowNode.childStore)) {\n            var childStore = rowNode.childStore;\n            if (childStore.isPixelInRange(pixel)) {\n                return childStore.getRowIndexAtPixel(pixel);\n            }\n        }\n        return null;\n        // pixel is not within this row node or it's children / detail, so return undefined\n    };\n    BlockUtils.prototype.createNodeIdPrefix = function (parentRowNode) {\n        var parts = [];\n        var rowNode = parentRowNode;\n        // pull keys from all parent nodes, but do not include the root node\n        while (rowNode && rowNode.level >= 0) {\n            parts.push(rowNode.key);\n            rowNode = rowNode.parent;\n        }\n        if (parts.length > 0) {\n            return parts.reverse().join('-');\n        }\n        // no prefix, so node id's are left as they are\n        return undefined;\n    };\n    BlockUtils.prototype.checkOpenByDefault = function (rowNode) {\n        if (!rowNode.isExpandable()) {\n            return;\n        }\n        var userFunc = this.gridOptionsWrapper.getIsServerSideGroupOpenByDefaultFunc();\n        if (!userFunc) {\n            return;\n        }\n        var params = {\n            data: rowNode.data,\n            rowNode: rowNode\n        };\n        var userFuncRes = userFunc(params);\n        if (userFuncRes) {\n            // we do this in a timeout, so that we don't expand a row node while in the middle\n            // of setting up rows, setting up rows is complex enough without another chunk of work\n            // getting added to the call stack. this is also helpful as openByDefault may or may\n            // not happen (so makes setting up rows more deterministic by expands never happening)\n            // and also checkOpenByDefault is shard with both store types, so easier control how it\n            // impacts things by keeping it in new VM turn.\n            window.setTimeout(function () { return rowNode.setExpanded(true); }, 0);\n        }\n    };\n    __decorate([\n        Autowired('valueService')\n    ], BlockUtils.prototype, \"valueService\", void 0);\n    __decorate([\n        Autowired('columnModel')\n    ], BlockUtils.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('ssrmNodeManager')\n    ], BlockUtils.prototype, \"nodeManager\", void 0);\n    __decorate([\n        PostConstruct\n    ], BlockUtils.prototype, \"postConstruct\", null);\n    BlockUtils = __decorate([\n        Bean('ssrmBlockUtils')\n    ], BlockUtils);\n    return BlockUtils;\n}(BeanStub));\nexport { BlockUtils };\n"]},"metadata":{},"sourceType":"module"}