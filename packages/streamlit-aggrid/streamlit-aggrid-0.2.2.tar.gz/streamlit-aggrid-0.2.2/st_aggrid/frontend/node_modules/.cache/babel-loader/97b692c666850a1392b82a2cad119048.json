{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { missing } from \"../utils/generic\";\nimport { addCssClass } from \"../utils/dom\";\n\nvar CssClassApplier = function () {\n  function CssClassApplier() {}\n\n  CssClassApplier.addHeaderClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (missing(abstractColDef)) {\n      return;\n    }\n\n    this.addColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.addToolPanelClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (missing(abstractColDef)) {\n      return;\n    }\n\n    this.addColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n  };\n\n  CssClassApplier.addColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n    if (missing(classesOrFunc)) {\n      return;\n    }\n\n    var classToUse;\n\n    if (typeof classesOrFunc === 'function') {\n      var params = {\n        // bad naming, as colDef here can be a group or a column,\n        // however most people won't appreciate the difference,\n        // so keeping it as colDef to avoid confusion.\n        colDef: abstractColDef,\n        column: column,\n        columnGroup: columnGroup,\n        context: gridOptionsWrapper.getContext(),\n        api: gridOptionsWrapper.getApi()\n      };\n      var headerClassFunc = classesOrFunc;\n      classToUse = headerClassFunc(params);\n    } else {\n      classToUse = classesOrFunc;\n    }\n\n    if (typeof classToUse === 'string') {\n      addCssClass(eHeaderCell, classToUse);\n    } else if (Array.isArray(classToUse)) {\n      classToUse.forEach(function (cssClassItem) {\n        addCssClass(eHeaderCell, cssClassItem);\n      });\n    }\n  };\n\n  return CssClassApplier;\n}();\n\nexport { CssClassApplier };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-community/core/dist/es6/headerRendering/cssClassApplier.js"],"names":["missing","addCssClass","CssClassApplier","addHeaderClassesFromColDef","abstractColDef","eHeaderCell","gridOptionsWrapper","column","columnGroup","addColumnClassesFromCollDef","headerClass","addToolPanelClassesFromColDef","toolPanelClass","classesOrFunc","classToUse","params","colDef","context","getContext","api","getApi","headerClassFunc","Array","isArray","forEach","cssClassItem"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AACA,IAAIC,eAAe,GAAkB,YAAY;AAC7C,WAASA,eAAT,GAA2B,CAC1B;;AACDA,EAAAA,eAAe,CAACC,0BAAhB,GAA6C,UAAUC,cAAV,EAA0BC,WAA1B,EAAuCC,kBAAvC,EAA2DC,MAA3D,EAAmEC,WAAnE,EAAgF;AACzH,QAAIR,OAAO,CAACI,cAAD,CAAX,EAA6B;AACzB;AACH;;AACD,SAAKK,2BAAL,CAAiCL,cAAc,CAACM,WAAhD,EAA6DN,cAA7D,EAA6EC,WAA7E,EAA0FC,kBAA1F,EAA8GC,MAA9G,EAAsHC,WAAtH;AACH,GALD;;AAMAN,EAAAA,eAAe,CAACS,6BAAhB,GAAgD,UAAUP,cAAV,EAA0BC,WAA1B,EAAuCC,kBAAvC,EAA2DC,MAA3D,EAAmEC,WAAnE,EAAgF;AAC5H,QAAIR,OAAO,CAACI,cAAD,CAAX,EAA6B;AACzB;AACH;;AACD,SAAKK,2BAAL,CAAiCL,cAAc,CAACQ,cAAhD,EAAgER,cAAhE,EAAgFC,WAAhF,EAA6FC,kBAA7F,EAAiHC,MAAjH,EAAyHC,WAAzH;AACH,GALD;;AAMAN,EAAAA,eAAe,CAACO,2BAAhB,GAA8C,UAAUI,aAAV,EAAyBT,cAAzB,EAAyCC,WAAzC,EAAsDC,kBAAtD,EAA0EC,MAA1E,EAAkFC,WAAlF,EAA+F;AACzI,QAAIR,OAAO,CAACa,aAAD,CAAX,EAA4B;AACxB;AACH;;AACD,QAAIC,UAAJ;;AACA,QAAI,OAAOD,aAAP,KAAyB,UAA7B,EAAyC;AACrC,UAAIE,MAAM,GAAG;AACT;AACA;AACA;AACAC,QAAAA,MAAM,EAAEZ,cAJC;AAKTG,QAAAA,MAAM,EAAEA,MALC;AAMTC,QAAAA,WAAW,EAAEA,WANJ;AAOTS,QAAAA,OAAO,EAAEX,kBAAkB,CAACY,UAAnB,EAPA;AAQTC,QAAAA,GAAG,EAAEb,kBAAkB,CAACc,MAAnB;AARI,OAAb;AAUA,UAAIC,eAAe,GAAGR,aAAtB;AACAC,MAAAA,UAAU,GAAGO,eAAe,CAACN,MAAD,CAA5B;AACH,KAbD,MAcK;AACDD,MAAAA,UAAU,GAAGD,aAAb;AACH;;AACD,QAAI,OAAOC,UAAP,KAAsB,QAA1B,EAAoC;AAChCb,MAAAA,WAAW,CAACI,WAAD,EAAcS,UAAd,CAAX;AACH,KAFD,MAGK,IAAIQ,KAAK,CAACC,OAAN,CAAcT,UAAd,CAAJ,EAA+B;AAChCA,MAAAA,UAAU,CAACU,OAAX,CAAmB,UAAUC,YAAV,EAAwB;AACvCxB,QAAAA,WAAW,CAACI,WAAD,EAAcoB,YAAd,CAAX;AACH,OAFD;AAGH;AACJ,GA9BD;;AA+BA,SAAOvB,eAAP;AACH,CA/CoC,EAArC;;AAgDA,SAASA,eAAT","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nimport { missing } from \"../utils/generic\";\nimport { addCssClass } from \"../utils/dom\";\nvar CssClassApplier = /** @class */ (function () {\n    function CssClassApplier() {\n    }\n    CssClassApplier.addHeaderClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (missing(abstractColDef)) {\n            return;\n        }\n        this.addColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.addToolPanelClassesFromColDef = function (abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (missing(abstractColDef)) {\n            return;\n        }\n        this.addColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup);\n    };\n    CssClassApplier.addColumnClassesFromCollDef = function (classesOrFunc, abstractColDef, eHeaderCell, gridOptionsWrapper, column, columnGroup) {\n        if (missing(classesOrFunc)) {\n            return;\n        }\n        var classToUse;\n        if (typeof classesOrFunc === 'function') {\n            var params = {\n                // bad naming, as colDef here can be a group or a column,\n                // however most people won't appreciate the difference,\n                // so keeping it as colDef to avoid confusion.\n                colDef: abstractColDef,\n                column: column,\n                columnGroup: columnGroup,\n                context: gridOptionsWrapper.getContext(),\n                api: gridOptionsWrapper.getApi()\n            };\n            var headerClassFunc = classesOrFunc;\n            classToUse = headerClassFunc(params);\n        }\n        else {\n            classToUse = classesOrFunc;\n        }\n        if (typeof classToUse === 'string') {\n            addCssClass(eHeaderCell, classToUse);\n        }\n        else if (Array.isArray(classToUse)) {\n            classToUse.forEach(function (cssClassItem) {\n                addCssClass(eHeaderCell, cssClassItem);\n            });\n        }\n    };\n    return CssClassApplier;\n}());\nexport { CssClassApplier };\n"]},"metadata":{},"sourceType":"module"}