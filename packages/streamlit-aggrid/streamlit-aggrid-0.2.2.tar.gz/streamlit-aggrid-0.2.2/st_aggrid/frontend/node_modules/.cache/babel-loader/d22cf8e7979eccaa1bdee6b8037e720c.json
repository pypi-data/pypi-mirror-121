{"ast":null,"code":"var getWeightName = function getWeightName(value) {\n  switch (value) {\n    case 1:\n      return 'thin';\n\n    case 2:\n      return 'medium';\n\n    case 3:\n      return 'thick';\n\n    default:\n      return 'hair';\n  }\n};\n\nvar mappedBorderNames = {\n  None: 'None',\n  Dot: 'Dotted',\n  Dash: 'Dashed',\n  Double: 'Double',\n  DashDot: 'DashDot',\n  DashDotDot: 'DashDotDot',\n  SlantDashDot: 'SlantDashDot'\n};\nvar mediumBorders = ['Dashed', 'DashDot', 'DashDotDot'];\nvar colorMap = {\n  None: 'none',\n  Solid: 'solid',\n  Gray50: 'mediumGray',\n  Gray75: 'darkGray',\n  Gray25: 'lightGray',\n  HorzStripe: 'darkHorizontal',\n  VertStripe: 'darkVertical',\n  ReverseDiagStripe: 'darkDown',\n  DiagStripe: 'darkUp',\n  DiagCross: 'darkGrid',\n  ThickDiagCross: 'darkTrellis',\n  ThinHorzStripe: 'lightHorizontal',\n  ThinVertStripe: 'lightVertical',\n  ThinReverseDiagStripe: 'lightDown',\n  ThinDiagStripe: 'lightUp',\n  ThinHorzCross: 'lightGrid',\n  ThinDiagCross: 'lightTrellis',\n  Gray125: 'gray125',\n  Gray0625: 'gray0625'\n};\nvar horizontalAlignmentMap = {\n  Automatic: 'general',\n  Left: 'left',\n  Center: 'center',\n  Right: 'right',\n  Fill: 'fill',\n  Justify: 'justify',\n  CenterAcrossSelection: 'centerContinuous',\n  Distributed: 'distributed',\n  JustifyDistributed: 'justify'\n};\nvar verticalAlignmentMap = {\n  Automatic: undefined,\n  Top: 'top',\n  Bottom: 'bottom',\n  Center: 'center',\n  Justify: 'justify',\n  Distributed: 'distributed',\n  JustifyDistributed: 'justify'\n};\nexport var convertLegacyPattern = function convertLegacyPattern(name) {\n  if (!name) {\n    return 'none';\n  }\n\n  return colorMap[name] || name;\n};\nexport var convertLegacyColor = function convertLegacyColor(color) {\n  if (color == undefined) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    color = color.substr(1);\n  }\n\n  return color.length === 6 ? 'FF' + color : color;\n};\nexport var convertLegacyBorder = function convertLegacyBorder(type, weight) {\n  if (!type) {\n    return 'thin';\n  } // Legacy Types are: None, Continuous, Dash, Dot, DashDot, DashDotDot, SlantDashDot, and Double\n  // Weight represents: 0—Hairline, 1—Thin , 2—Medium, 3—Thick\n  // New types: none, thin, medium, dashed, dotted, thick, double, hair, mediumDashed, dashDot, mediumDashDot,\n  // dashDotDot, mediumDashDotDot, slantDashDot\n\n\n  var namedWeight = getWeightName(weight);\n  var mappedName = mappedBorderNames[type];\n\n  if (type === 'Continuous') {\n    return namedWeight;\n  }\n\n  if (namedWeight === 'medium' && mediumBorders.indexOf(mappedName) !== -1) {\n    return \"medium\" + mappedName;\n  }\n\n  return mappedName.charAt(0).toLowerCase() + mappedName.substr(1);\n};\nexport var convertLegacyHorizontalAlignment = function convertLegacyHorizontalAlignment(alignment) {\n  return horizontalAlignmentMap[alignment] || 'general';\n};\nexport var convertLegacyVerticalAlignment = function convertLegacyVerticalAlignment(alignment) {\n  return verticalAlignmentMap[alignment] || undefined;\n};","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/assets/excelLegacyConvert.js"],"names":["getWeightName","value","mappedBorderNames","None","Dot","Dash","Double","DashDot","DashDotDot","SlantDashDot","mediumBorders","colorMap","Solid","Gray50","Gray75","Gray25","HorzStripe","VertStripe","ReverseDiagStripe","DiagStripe","DiagCross","ThickDiagCross","ThinHorzStripe","ThinVertStripe","ThinReverseDiagStripe","ThinDiagStripe","ThinHorzCross","ThinDiagCross","Gray125","Gray0625","horizontalAlignmentMap","Automatic","Left","Center","Right","Fill","Justify","CenterAcrossSelection","Distributed","JustifyDistributed","verticalAlignmentMap","undefined","Top","Bottom","convertLegacyPattern","name","convertLegacyColor","color","charAt","substr","length","convertLegacyBorder","type","weight","namedWeight","mappedName","indexOf","toLowerCase","convertLegacyHorizontalAlignment","alignment","convertLegacyVerticalAlignment"],"mappings":"AAAA,IAAIA,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,KAAV,EAAiB;AACjC,UAAQA,KAAR;AACI,SAAK,CAAL;AAAQ,aAAO,MAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,QAAP;;AACR,SAAK,CAAL;AAAQ,aAAO,OAAP;;AACR;AAAS,aAAO,MAAP;AAJb;AAMH,CAPD;;AAQA,IAAIC,iBAAiB,GAAG;AACpBC,EAAAA,IAAI,EAAE,MADc;AAEpBC,EAAAA,GAAG,EAAE,QAFe;AAGpBC,EAAAA,IAAI,EAAE,QAHc;AAIpBC,EAAAA,MAAM,EAAE,QAJY;AAKpBC,EAAAA,OAAO,EAAE,SALW;AAMpBC,EAAAA,UAAU,EAAE,YANQ;AAOpBC,EAAAA,YAAY,EAAE;AAPM,CAAxB;AASA,IAAIC,aAAa,GAAG,CAAC,QAAD,EAAW,SAAX,EAAsB,YAAtB,CAApB;AACA,IAAIC,QAAQ,GAAG;AACXR,EAAAA,IAAI,EAAE,MADK;AAEXS,EAAAA,KAAK,EAAE,OAFI;AAGXC,EAAAA,MAAM,EAAE,YAHG;AAIXC,EAAAA,MAAM,EAAE,UAJG;AAKXC,EAAAA,MAAM,EAAE,WALG;AAMXC,EAAAA,UAAU,EAAE,gBAND;AAOXC,EAAAA,UAAU,EAAE,cAPD;AAQXC,EAAAA,iBAAiB,EAAE,UARR;AASXC,EAAAA,UAAU,EAAE,QATD;AAUXC,EAAAA,SAAS,EAAE,UAVA;AAWXC,EAAAA,cAAc,EAAE,aAXL;AAYXC,EAAAA,cAAc,EAAE,iBAZL;AAaXC,EAAAA,cAAc,EAAE,eAbL;AAcXC,EAAAA,qBAAqB,EAAE,WAdZ;AAeXC,EAAAA,cAAc,EAAE,SAfL;AAgBXC,EAAAA,aAAa,EAAE,WAhBJ;AAiBXC,EAAAA,aAAa,EAAE,cAjBJ;AAkBXC,EAAAA,OAAO,EAAE,SAlBE;AAmBXC,EAAAA,QAAQ,EAAE;AAnBC,CAAf;AAqBA,IAAIC,sBAAsB,GAAG;AACzBC,EAAAA,SAAS,EAAE,SADc;AAEzBC,EAAAA,IAAI,EAAE,MAFmB;AAGzBC,EAAAA,MAAM,EAAE,QAHiB;AAIzBC,EAAAA,KAAK,EAAE,OAJkB;AAKzBC,EAAAA,IAAI,EAAE,MALmB;AAMzBC,EAAAA,OAAO,EAAE,SANgB;AAOzBC,EAAAA,qBAAqB,EAAE,kBAPE;AAQzBC,EAAAA,WAAW,EAAE,aARY;AASzBC,EAAAA,kBAAkB,EAAE;AATK,CAA7B;AAWA,IAAIC,oBAAoB,GAAG;AACvBT,EAAAA,SAAS,EAAEU,SADY;AAEvBC,EAAAA,GAAG,EAAE,KAFkB;AAGvBC,EAAAA,MAAM,EAAE,QAHe;AAIvBV,EAAAA,MAAM,EAAE,QAJe;AAKvBG,EAAAA,OAAO,EAAE,SALc;AAMvBE,EAAAA,WAAW,EAAE,aANU;AAOvBC,EAAAA,kBAAkB,EAAE;AAPG,CAA3B;AASA,OAAO,IAAIK,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUC,IAAV,EAAgB;AAC9C,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,MAAP;AACH;;AACD,SAAOlC,QAAQ,CAACkC,IAAD,CAAR,IAAkBA,IAAzB;AACH,CALM;AAMP,OAAO,IAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,KAAV,EAAiB;AAC7C,MAAIA,KAAK,IAAIN,SAAb,EAAwB;AACpB,WAAOM,KAAP;AACH;;AACD,MAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,MAAoB,GAAxB,EAA6B;AACzBD,IAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAa,CAAb,CAAR;AACH;;AACD,SAAOF,KAAK,CAACG,MAAN,KAAiB,CAAjB,GAAqB,OAAOH,KAA5B,GAAoCA,KAA3C;AACH,CARM;AASP,OAAO,IAAII,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACrD,MAAI,CAACD,IAAL,EAAW;AACP,WAAO,MAAP;AACH,GAHoD,CAIrD;AACA;AACA;AACA;;;AACA,MAAIE,WAAW,GAAGtD,aAAa,CAACqD,MAAD,CAA/B;AACA,MAAIE,UAAU,GAAGrD,iBAAiB,CAACkD,IAAD,CAAlC;;AACA,MAAIA,IAAI,KAAK,YAAb,EAA2B;AACvB,WAAOE,WAAP;AACH;;AACD,MAAIA,WAAW,KAAK,QAAhB,IAA4B5C,aAAa,CAAC8C,OAAd,CAAsBD,UAAtB,MAAsC,CAAC,CAAvE,EAA0E;AACtE,WAAO,WAAWA,UAAlB;AACH;;AACD,SAAOA,UAAU,CAACP,MAAX,CAAkB,CAAlB,EAAqBS,WAArB,KAAqCF,UAAU,CAACN,MAAX,CAAkB,CAAlB,CAA5C;AACH,CAjBM;AAkBP,OAAO,IAAIS,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAUC,SAAV,EAAqB;AAC/D,SAAO7B,sBAAsB,CAAC6B,SAAD,CAAtB,IAAqC,SAA5C;AACH,CAFM;AAGP,OAAO,IAAIC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAUD,SAAV,EAAqB;AAC7D,SAAOnB,oBAAoB,CAACmB,SAAD,CAApB,IAAmClB,SAA1C;AACH,CAFM","sourcesContent":["var getWeightName = function (value) {\n    switch (value) {\n        case 1: return 'thin';\n        case 2: return 'medium';\n        case 3: return 'thick';\n        default: return 'hair';\n    }\n};\nvar mappedBorderNames = {\n    None: 'None',\n    Dot: 'Dotted',\n    Dash: 'Dashed',\n    Double: 'Double',\n    DashDot: 'DashDot',\n    DashDotDot: 'DashDotDot',\n    SlantDashDot: 'SlantDashDot'\n};\nvar mediumBorders = ['Dashed', 'DashDot', 'DashDotDot'];\nvar colorMap = {\n    None: 'none',\n    Solid: 'solid',\n    Gray50: 'mediumGray',\n    Gray75: 'darkGray',\n    Gray25: 'lightGray',\n    HorzStripe: 'darkHorizontal',\n    VertStripe: 'darkVertical',\n    ReverseDiagStripe: 'darkDown',\n    DiagStripe: 'darkUp',\n    DiagCross: 'darkGrid',\n    ThickDiagCross: 'darkTrellis',\n    ThinHorzStripe: 'lightHorizontal',\n    ThinVertStripe: 'lightVertical',\n    ThinReverseDiagStripe: 'lightDown',\n    ThinDiagStripe: 'lightUp',\n    ThinHorzCross: 'lightGrid',\n    ThinDiagCross: 'lightTrellis',\n    Gray125: 'gray125',\n    Gray0625: 'gray0625'\n};\nvar horizontalAlignmentMap = {\n    Automatic: 'general',\n    Left: 'left',\n    Center: 'center',\n    Right: 'right',\n    Fill: 'fill',\n    Justify: 'justify',\n    CenterAcrossSelection: 'centerContinuous',\n    Distributed: 'distributed',\n    JustifyDistributed: 'justify'\n};\nvar verticalAlignmentMap = {\n    Automatic: undefined,\n    Top: 'top',\n    Bottom: 'bottom',\n    Center: 'center',\n    Justify: 'justify',\n    Distributed: 'distributed',\n    JustifyDistributed: 'justify'\n};\nexport var convertLegacyPattern = function (name) {\n    if (!name) {\n        return 'none';\n    }\n    return colorMap[name] || name;\n};\nexport var convertLegacyColor = function (color) {\n    if (color == undefined) {\n        return color;\n    }\n    if (color.charAt(0) === '#') {\n        color = color.substr(1);\n    }\n    return color.length === 6 ? 'FF' + color : color;\n};\nexport var convertLegacyBorder = function (type, weight) {\n    if (!type) {\n        return 'thin';\n    }\n    // Legacy Types are: None, Continuous, Dash, Dot, DashDot, DashDotDot, SlantDashDot, and Double\n    // Weight represents: 0—Hairline, 1—Thin , 2—Medium, 3—Thick\n    // New types: none, thin, medium, dashed, dotted, thick, double, hair, mediumDashed, dashDot, mediumDashDot,\n    // dashDotDot, mediumDashDotDot, slantDashDot\n    var namedWeight = getWeightName(weight);\n    var mappedName = mappedBorderNames[type];\n    if (type === 'Continuous') {\n        return namedWeight;\n    }\n    if (namedWeight === 'medium' && mediumBorders.indexOf(mappedName) !== -1) {\n        return \"medium\" + mappedName;\n    }\n    return mappedName.charAt(0).toLowerCase() + mappedName.substr(1);\n};\nexport var convertLegacyHorizontalAlignment = function (alignment) {\n    return horizontalAlignmentMap[alignment] || 'general';\n};\nexport var convertLegacyVerticalAlignment = function (alignment) {\n    return verticalAlignmentMap[alignment] || undefined;\n};\n"]},"metadata":{},"sourceType":"module"}