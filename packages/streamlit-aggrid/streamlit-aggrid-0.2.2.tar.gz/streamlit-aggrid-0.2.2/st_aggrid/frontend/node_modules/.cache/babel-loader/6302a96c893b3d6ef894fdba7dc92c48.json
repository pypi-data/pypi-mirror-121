{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ClipRect } from \"../main\";\nimport { BBox } from \"../scene/bbox\";\nimport { Chart } from \"./chart\";\n\nvar HierarchyChart = function (_super) {\n  __extends(HierarchyChart, _super);\n\n  function HierarchyChart(document) {\n    if (document === void 0) {\n      document = window.document;\n    }\n\n    var _this = _super.call(this, document) || this;\n\n    _this._data = {};\n    _this._seriesRoot = new ClipRect(); // Prevent the scene from rendering chart components in an invalid state\n    // (before first layout is performed).\n\n    _this.scene.root.visible = false;\n    var root = _this.scene.root;\n    root.append(_this.seriesRoot);\n    root.append(_this.legend.group);\n    return _this;\n  }\n\n  Object.defineProperty(HierarchyChart.prototype, \"seriesRoot\", {\n    get: function get() {\n      return this._seriesRoot;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  HierarchyChart.prototype.performLayout = function () {\n    if (this.dataPending) {\n      return;\n    }\n\n    this.scene.root.visible = true;\n\n    var _a = this,\n        width = _a.width,\n        height = _a.height,\n        legend = _a.legend;\n\n    var shrinkRect = new BBox(0, 0, width, height);\n    this.positionCaptions();\n    this.positionLegend();\n\n    if (legend.enabled && legend.data.length) {\n      var legendAutoPadding = this.legendAutoPadding;\n      var legendPadding = this.legend.spacing;\n      shrinkRect.x += legendAutoPadding.left;\n      shrinkRect.y += legendAutoPadding.top;\n      shrinkRect.width -= legendAutoPadding.left + legendAutoPadding.right;\n      shrinkRect.height -= legendAutoPadding.top + legendAutoPadding.bottom;\n\n      switch (this.legend.position) {\n        case 'right':\n          shrinkRect.width -= legendPadding;\n          break;\n\n        case 'bottom':\n          shrinkRect.height -= legendPadding;\n          break;\n\n        case 'left':\n          shrinkRect.x += legendPadding;\n          shrinkRect.width -= legendPadding;\n          break;\n\n        case 'top':\n          shrinkRect.y += legendPadding;\n          shrinkRect.height -= legendPadding;\n          break;\n      }\n    }\n\n    var _b = this,\n        captionAutoPadding = _b.captionAutoPadding,\n        padding = _b.padding;\n\n    shrinkRect.x += padding.left;\n    shrinkRect.width -= padding.left + padding.right;\n    shrinkRect.y += padding.top + captionAutoPadding;\n    shrinkRect.height -= padding.top + captionAutoPadding + padding.bottom;\n    this.seriesRect = shrinkRect;\n    this.series.forEach(function (series) {\n      series.group.translationX = Math.floor(shrinkRect.x);\n      series.group.translationY = Math.floor(shrinkRect.y);\n      series.update(); // this has to happen after the `updateAxes` call\n    });\n    var seriesRoot = this.seriesRoot;\n    seriesRoot.x = shrinkRect.x;\n    seriesRoot.y = shrinkRect.y;\n    seriesRoot.width = shrinkRect.width;\n    seriesRoot.height = shrinkRect.height;\n  };\n\n  HierarchyChart.className = 'HierarchyChart';\n  HierarchyChart.type = 'hierarchy';\n  return HierarchyChart;\n}(Chart);\n\nexport { HierarchyChart };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/ag-charts-community/dist/es6/chart/hierarchyChart.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ClipRect","BBox","Chart","HierarchyChart","_super","document","window","_this","call","_data","_seriesRoot","scene","root","visible","append","seriesRoot","legend","group","defineProperty","get","enumerable","configurable","performLayout","dataPending","_a","width","height","shrinkRect","positionCaptions","positionLegend","enabled","data","length","legendAutoPadding","legendPadding","spacing","x","left","y","top","right","bottom","position","_b","captionAutoPadding","padding","seriesRect","series","forEach","translationX","Math","floor","translationY","update","className","type"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ClipRect } from \"../main\";\nimport { BBox } from \"../scene/bbox\";\nimport { Chart } from \"./chart\";\nvar HierarchyChart = /** @class */ (function (_super) {\n    __extends(HierarchyChart, _super);\n    function HierarchyChart(document) {\n        if (document === void 0) { document = window.document; }\n        var _this = _super.call(this, document) || this;\n        _this._data = {};\n        _this._seriesRoot = new ClipRect();\n        // Prevent the scene from rendering chart components in an invalid state\n        // (before first layout is performed).\n        _this.scene.root.visible = false;\n        var root = _this.scene.root;\n        root.append(_this.seriesRoot);\n        root.append(_this.legend.group);\n        return _this;\n    }\n    Object.defineProperty(HierarchyChart.prototype, \"seriesRoot\", {\n        get: function () {\n            return this._seriesRoot;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    HierarchyChart.prototype.performLayout = function () {\n        if (this.dataPending) {\n            return;\n        }\n        this.scene.root.visible = true;\n        var _a = this, width = _a.width, height = _a.height, legend = _a.legend;\n        var shrinkRect = new BBox(0, 0, width, height);\n        this.positionCaptions();\n        this.positionLegend();\n        if (legend.enabled && legend.data.length) {\n            var legendAutoPadding = this.legendAutoPadding;\n            var legendPadding = this.legend.spacing;\n            shrinkRect.x += legendAutoPadding.left;\n            shrinkRect.y += legendAutoPadding.top;\n            shrinkRect.width -= legendAutoPadding.left + legendAutoPadding.right;\n            shrinkRect.height -= legendAutoPadding.top + legendAutoPadding.bottom;\n            switch (this.legend.position) {\n                case 'right':\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'bottom':\n                    shrinkRect.height -= legendPadding;\n                    break;\n                case 'left':\n                    shrinkRect.x += legendPadding;\n                    shrinkRect.width -= legendPadding;\n                    break;\n                case 'top':\n                    shrinkRect.y += legendPadding;\n                    shrinkRect.height -= legendPadding;\n                    break;\n            }\n        }\n        var _b = this, captionAutoPadding = _b.captionAutoPadding, padding = _b.padding;\n        shrinkRect.x += padding.left;\n        shrinkRect.width -= padding.left + padding.right;\n        shrinkRect.y += padding.top + captionAutoPadding;\n        shrinkRect.height -= padding.top + captionAutoPadding + padding.bottom;\n        this.seriesRect = shrinkRect;\n        this.series.forEach(function (series) {\n            series.group.translationX = Math.floor(shrinkRect.x);\n            series.group.translationY = Math.floor(shrinkRect.y);\n            series.update(); // this has to happen after the `updateAxes` call\n        });\n        var seriesRoot = this.seriesRoot;\n        seriesRoot.x = shrinkRect.x;\n        seriesRoot.y = shrinkRect.y;\n        seriesRoot.width = shrinkRect.width;\n        seriesRoot.height = shrinkRect.height;\n    };\n    HierarchyChart.className = 'HierarchyChart';\n    HierarchyChart.type = 'hierarchy';\n    return HierarchyChart;\n}(Chart));\nexport { HierarchyChart };\n"]},"metadata":{},"sourceType":"module"}