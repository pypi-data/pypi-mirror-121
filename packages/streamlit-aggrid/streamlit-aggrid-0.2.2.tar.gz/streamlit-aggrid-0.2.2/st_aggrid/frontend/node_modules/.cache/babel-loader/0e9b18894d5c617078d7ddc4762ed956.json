{"ast":null,"code":"var LINE_SEPARATOR = '\\r\\n';\n\nvar XmlFactory = function () {\n  function XmlFactory() {}\n\n  XmlFactory.createHeader = function (headerElement) {\n    if (headerElement === void 0) {\n      headerElement = {};\n    }\n\n    var headerStart = '<?';\n    var headerEnd = '?>';\n    var keys = ['version'];\n\n    if (!headerElement.version) {\n      headerElement.version = \"1.0\";\n    }\n\n    if (headerElement.encoding) {\n      keys.push('encoding');\n    }\n\n    if (headerElement.standalone) {\n      keys.push('standalone');\n    }\n\n    var att = keys.map(function (key) {\n      return key + \"=\\\"\" + headerElement[key] + \"\\\"\";\n    }).join(' ');\n    return headerStart + \"xml \" + att + \" \" + headerEnd;\n  };\n\n  XmlFactory.createXml = function (xmlElement, booleanTransformer) {\n    var _this = this;\n\n    var props = '';\n\n    if (xmlElement.properties) {\n      if (xmlElement.properties.prefixedAttributes) {\n        xmlElement.properties.prefixedAttributes.forEach(function (prefixedSet) {\n          Object.keys(prefixedSet.map).forEach(function (key) {\n            props += _this.returnAttributeIfPopulated(prefixedSet.prefix + key, prefixedSet.map[key], booleanTransformer);\n          });\n        });\n      }\n\n      if (xmlElement.properties.rawMap) {\n        Object.keys(xmlElement.properties.rawMap).forEach(function (key) {\n          props += _this.returnAttributeIfPopulated(key, xmlElement.properties.rawMap[key], booleanTransformer);\n        });\n      }\n    }\n\n    var result = '<' + xmlElement.name + props;\n\n    if (!xmlElement.children && xmlElement.textNode == null) {\n      return result + '/>' + LINE_SEPARATOR;\n    }\n\n    if (xmlElement.textNode != null) {\n      return result + '>' + xmlElement.textNode + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n    }\n\n    result += '>' + LINE_SEPARATOR;\n\n    if (xmlElement.children) {\n      xmlElement.children.forEach(function (it) {\n        result += _this.createXml(it, booleanTransformer);\n      });\n    }\n\n    return result + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n  };\n\n  XmlFactory.returnAttributeIfPopulated = function (key, value, booleanTransformer) {\n    if (!value && value !== '' && value !== 0) {\n      return '';\n    }\n\n    var xmlValue = value;\n\n    if (typeof value === 'boolean') {\n      if (booleanTransformer) {\n        xmlValue = booleanTransformer(value);\n      }\n    }\n\n    return \" \" + key + \"=\\\"\" + xmlValue + \"\\\"\";\n  };\n\n  return XmlFactory;\n}();\n\nexport { XmlFactory };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-community/csv-export/dist/es6/csvExport/xmlFactory.js"],"names":["LINE_SEPARATOR","XmlFactory","createHeader","headerElement","headerStart","headerEnd","keys","version","encoding","push","standalone","att","map","key","join","createXml","xmlElement","booleanTransformer","_this","props","properties","prefixedAttributes","forEach","prefixedSet","Object","returnAttributeIfPopulated","prefix","rawMap","result","name","children","textNode","it","value","xmlValue"],"mappings":"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","sourcesContent":["var LINE_SEPARATOR = '\\r\\n';\nvar XmlFactory = /** @class */ (function () {\n    function XmlFactory() {\n    }\n    XmlFactory.createHeader = function (headerElement) {\n        if (headerElement === void 0) { headerElement = {}; }\n        var headerStart = '<?';\n        var headerEnd = '?>';\n        var keys = ['version'];\n        if (!headerElement.version) {\n            headerElement.version = \"1.0\";\n        }\n        if (headerElement.encoding) {\n            keys.push('encoding');\n        }\n        if (headerElement.standalone) {\n            keys.push('standalone');\n        }\n        var att = keys.map(function (key) { return key + \"=\\\"\" + headerElement[key] + \"\\\"\"; }).join(' ');\n        return headerStart + \"xml \" + att + \" \" + headerEnd;\n    };\n    XmlFactory.createXml = function (xmlElement, booleanTransformer) {\n        var _this = this;\n        var props = '';\n        if (xmlElement.properties) {\n            if (xmlElement.properties.prefixedAttributes) {\n                xmlElement.properties.prefixedAttributes.forEach(function (prefixedSet) {\n                    Object.keys(prefixedSet.map).forEach(function (key) {\n                        props += _this.returnAttributeIfPopulated(prefixedSet.prefix + key, prefixedSet.map[key], booleanTransformer);\n                    });\n                });\n            }\n            if (xmlElement.properties.rawMap) {\n                Object.keys(xmlElement.properties.rawMap).forEach(function (key) {\n                    props += _this.returnAttributeIfPopulated(key, xmlElement.properties.rawMap[key], booleanTransformer);\n                });\n            }\n        }\n        var result = '<' + xmlElement.name + props;\n        if (!xmlElement.children && xmlElement.textNode == null) {\n            return result + '/>' + LINE_SEPARATOR;\n        }\n        if (xmlElement.textNode != null) {\n            return result + '>' + xmlElement.textNode + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n        }\n        result += '>' + LINE_SEPARATOR;\n        if (xmlElement.children) {\n            xmlElement.children.forEach(function (it) {\n                result += _this.createXml(it, booleanTransformer);\n            });\n        }\n        return result + '</' + xmlElement.name + '>' + LINE_SEPARATOR;\n    };\n    XmlFactory.returnAttributeIfPopulated = function (key, value, booleanTransformer) {\n        if (!value && value !== '' && value !== 0) {\n            return '';\n        }\n        var xmlValue = value;\n        if ((typeof (value) === 'boolean')) {\n            if (booleanTransformer) {\n                xmlValue = booleanTransformer(value);\n            }\n        }\n        return \" \" + key + \"=\\\"\" + xmlValue + \"\\\"\";\n    };\n    return XmlFactory;\n}());\nexport { XmlFactory };\n"]},"metadata":{},"sourceType":"module"}