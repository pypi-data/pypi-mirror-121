{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Component } from '../../../widgets/component';\nimport { SimpleFilter } from '../../provided/simpleFilter';\nimport { OptionsFactory } from '../../provided/optionsFactory';\n\nvar SimpleFloatingFilter = function (_super) {\n  __extends(SimpleFloatingFilter, _super);\n\n  function SimpleFloatingFilter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SimpleFloatingFilter.prototype.getDefaultDebounceMs = function () {\n    return 0;\n  }; // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n  // so we need to override destroy() just to make the method public.\n\n\n  SimpleFloatingFilter.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  }; // used by:\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n\n\n  SimpleFloatingFilter.prototype.getTextFromModel = function (model) {\n    if (!model) {\n      return null;\n    }\n\n    var isCombined = model.operator;\n\n    if (isCombined) {\n      var combinedModel = model;\n      var con1Str = this.conditionToString(combinedModel.condition1);\n      var con2Str = this.conditionToString(combinedModel.condition2);\n      return con1Str + \" \" + combinedModel.operator + \" \" + con2Str;\n    } else {\n      var condition = model;\n      var customOption = this.optionsFactory.getCustomOption(condition.type); // For custom filter options we display the Name of the filter instead\n      // of displaying the `from` value, as it wouldn't be relevant\n\n      if (customOption && customOption.hideFilterInput) {\n        this.gridOptionsWrapper.getLocaleTextFunc()(customOption.displayKey, customOption.displayName);\n        return customOption.displayName;\n      }\n\n      return this.conditionToString(condition);\n    }\n  };\n\n  SimpleFloatingFilter.prototype.isEventFromFloatingFilter = function (event) {\n    return event && event.afterFloatingFilter;\n  };\n\n  SimpleFloatingFilter.prototype.getLastType = function () {\n    return this.lastType;\n  };\n\n  SimpleFloatingFilter.prototype.setLastTypeFromModel = function (model) {\n    // if no model provided by the parent filter use default\n    if (!model) {\n      this.lastType = this.optionsFactory.getDefaultOption();\n      return;\n    }\n\n    var isCombined = model.operator;\n    var condition;\n\n    if (isCombined) {\n      var combinedModel = model;\n      condition = combinedModel.condition1;\n    } else {\n      condition = model;\n    }\n\n    this.lastType = condition.type;\n  };\n\n  SimpleFloatingFilter.prototype.canWeEditAfterModelFromParentFilter = function (model) {\n    if (!model) {\n      // if no model, then we can edit as long as the lastType is something we can edit, as this\n      // is the type we will provide to the parent filter if the user decides to use the floating filter.\n      return this.isTypeEditable(this.lastType);\n    } // never allow editing if the filter is combined (ie has two parts)\n\n\n    var isCombined = model.operator;\n\n    if (isCombined) {\n      return false;\n    }\n\n    var simpleModel = model;\n    return this.isTypeEditable(simpleModel.type);\n  };\n\n  SimpleFloatingFilter.prototype.init = function (params) {\n    this.optionsFactory = new OptionsFactory();\n    this.optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n    this.lastType = this.optionsFactory.getDefaultOption(); // we are editable if:\n    // 1) there is a type (user has configured filter wrong if not type)\n    //  AND\n    // 2) the default type is not 'in range'\n\n    var editable = this.isTypeEditable(this.lastType);\n    this.setEditable(editable);\n  };\n\n  SimpleFloatingFilter.prototype.doesFilterHaveHiddenInput = function (filterType) {\n    var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n    return customFilterOption && customFilterOption.hideFilterInput;\n  };\n\n  SimpleFloatingFilter.prototype.isTypeEditable = function (type) {\n    return !!type && !this.doesFilterHaveHiddenInput(type) && type !== SimpleFilter.IN_RANGE && type !== SimpleFilter.EMPTY;\n  };\n\n  return SimpleFloatingFilter;\n}(Component);\n\nexport { SimpleFloatingFilter };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-community/core/dist/es6/filter/floating/provided/simpleFloatingFilter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","SimpleFilter","OptionsFactory","SimpleFloatingFilter","_super","apply","arguments","getDefaultDebounceMs","destroy","call","getTextFromModel","model","isCombined","operator","combinedModel","con1Str","conditionToString","condition1","con2Str","condition2","condition","customOption","optionsFactory","getCustomOption","type","hideFilterInput","gridOptionsWrapper","getLocaleTextFunc","displayKey","displayName","isEventFromFloatingFilter","event","afterFloatingFilter","getLastType","lastType","setLastTypeFromModel","getDefaultOption","canWeEditAfterModelFromParentFilter","isTypeEditable","simpleModel","init","params","filterParams","getDefaultFilterOptions","editable","setEditable","doesFilterHaveHiddenInput","filterType","customFilterOption","IN_RANGE","EMPTY"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component } from '../../../widgets/component';\nimport { SimpleFilter } from '../../provided/simpleFilter';\nimport { OptionsFactory } from '../../provided/optionsFactory';\nvar SimpleFloatingFilter = /** @class */ (function (_super) {\n    __extends(SimpleFloatingFilter, _super);\n    function SimpleFloatingFilter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SimpleFloatingFilter.prototype.getDefaultDebounceMs = function () {\n        return 0;\n    };\n    // this is a user component, and IComponent has \"public destroy()\" as part of the interface.\n    // so we need to override destroy() just to make the method public.\n    SimpleFloatingFilter.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    // used by:\n    // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\n    // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\n    SimpleFloatingFilter.prototype.getTextFromModel = function (model) {\n        if (!model) {\n            return null;\n        }\n        var isCombined = model.operator;\n        if (isCombined) {\n            var combinedModel = model;\n            var con1Str = this.conditionToString(combinedModel.condition1);\n            var con2Str = this.conditionToString(combinedModel.condition2);\n            return con1Str + \" \" + combinedModel.operator + \" \" + con2Str;\n        }\n        else {\n            var condition = model;\n            var customOption = this.optionsFactory.getCustomOption(condition.type);\n            // For custom filter options we display the Name of the filter instead\n            // of displaying the `from` value, as it wouldn't be relevant\n            if (customOption && customOption.hideFilterInput) {\n                this.gridOptionsWrapper.getLocaleTextFunc()(customOption.displayKey, customOption.displayName);\n                return customOption.displayName;\n            }\n            return this.conditionToString(condition);\n        }\n    };\n    SimpleFloatingFilter.prototype.isEventFromFloatingFilter = function (event) {\n        return event && event.afterFloatingFilter;\n    };\n    SimpleFloatingFilter.prototype.getLastType = function () {\n        return this.lastType;\n    };\n    SimpleFloatingFilter.prototype.setLastTypeFromModel = function (model) {\n        // if no model provided by the parent filter use default\n        if (!model) {\n            this.lastType = this.optionsFactory.getDefaultOption();\n            return;\n        }\n        var isCombined = model.operator;\n        var condition;\n        if (isCombined) {\n            var combinedModel = model;\n            condition = combinedModel.condition1;\n        }\n        else {\n            condition = model;\n        }\n        this.lastType = condition.type;\n    };\n    SimpleFloatingFilter.prototype.canWeEditAfterModelFromParentFilter = function (model) {\n        if (!model) {\n            // if no model, then we can edit as long as the lastType is something we can edit, as this\n            // is the type we will provide to the parent filter if the user decides to use the floating filter.\n            return this.isTypeEditable(this.lastType);\n        }\n        // never allow editing if the filter is combined (ie has two parts)\n        var isCombined = model.operator;\n        if (isCombined) {\n            return false;\n        }\n        var simpleModel = model;\n        return this.isTypeEditable(simpleModel.type);\n    };\n    SimpleFloatingFilter.prototype.init = function (params) {\n        this.optionsFactory = new OptionsFactory();\n        this.optionsFactory.init(params.filterParams, this.getDefaultFilterOptions());\n        this.lastType = this.optionsFactory.getDefaultOption();\n        // we are editable if:\n        // 1) there is a type (user has configured filter wrong if not type)\n        //  AND\n        // 2) the default type is not 'in range'\n        var editable = this.isTypeEditable(this.lastType);\n        this.setEditable(editable);\n    };\n    SimpleFloatingFilter.prototype.doesFilterHaveHiddenInput = function (filterType) {\n        var customFilterOption = this.optionsFactory.getCustomOption(filterType);\n        return customFilterOption && customFilterOption.hideFilterInput;\n    };\n    SimpleFloatingFilter.prototype.isTypeEditable = function (type) {\n        return !!type && !this.doesFilterHaveHiddenInput(type) &&\n            type !== SimpleFilter.IN_RANGE\n            && type !== SimpleFilter.EMPTY;\n    };\n    return SimpleFloatingFilter;\n}(Component));\nexport { SimpleFloatingFilter };\n"]},"metadata":{},"sourceType":"module"}