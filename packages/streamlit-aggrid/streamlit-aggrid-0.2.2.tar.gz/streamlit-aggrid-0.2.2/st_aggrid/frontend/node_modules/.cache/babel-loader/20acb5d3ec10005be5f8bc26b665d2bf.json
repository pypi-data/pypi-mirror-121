{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { ExcelFactoryMode, _ } from '@ag-grid-community/core';\nimport coreFactory from './files/ooxml/core';\nimport contentTypesFactory from './files/ooxml/contentTypes';\nimport drawingFactory from './files/ooxml/drawing';\nimport officeThemeFactory from './files/ooxml/themes/office';\nimport sharedStringsFactory from './files/ooxml/sharedStrings';\nimport stylesheetFactory, { registerStyles } from './files/ooxml/styles/stylesheet';\nimport workbookFactory from './files/ooxml/workbook';\nimport worksheetFactory from './files/ooxml/worksheet';\nimport relationshipsFactory from './files/ooxml/relationships';\nimport { setExcelImageTotalHeight, setExcelImageTotalWidth, createXmlPart } from './assets/excelUtils';\n/**\n * See https://www.ecma-international.org/news/TC45_current_work/OpenXML%20White%20Paper.pdf\n */\n\nvar ExcelXlsxFactory = function () {\n  function ExcelXlsxFactory() {}\n\n  ExcelXlsxFactory.createExcel = function (styles, worksheet, margins, pageSetup, headerFooterConfig) {\n    this.addSheetName(worksheet);\n    registerStyles(styles, this.sheetNames.length);\n    return this.createWorksheet(worksheet, margins, pageSetup, headerFooterConfig);\n  };\n\n  ExcelXlsxFactory.buildImageMap = function (image, rowIndex, col, columnsToExport, rowHeight) {\n    var currentSheetIndex = this.sheetNames.length;\n    var registeredImage = this.images.get(image.id);\n\n    if (!image.position || !image.position.row || !image.position.column) {\n      if (!image.position) {\n        image.position = {};\n      }\n\n      image.position = _.assign({}, image.position, {\n        row: rowIndex,\n        column: columnsToExport.indexOf(col) + 1\n      });\n    }\n\n    var calculatedImage = image;\n    setExcelImageTotalWidth(calculatedImage, columnsToExport);\n    setExcelImageTotalHeight(calculatedImage, rowHeight);\n\n    if (registeredImage) {\n      var currentSheetImages = _.find(registeredImage, function (currentImage) {\n        return currentImage.sheetId === currentSheetIndex;\n      });\n\n      if (currentSheetImages) {\n        currentSheetImages.image.push(calculatedImage);\n      } else {\n        registeredImage.push({\n          sheetId: currentSheetIndex,\n          image: [calculatedImage]\n        });\n      }\n    } else {\n      this.images.set(calculatedImage.id, [{\n        sheetId: currentSheetIndex,\n        image: [calculatedImage]\n      }]);\n      this.workbookImageIds.set(calculatedImage.id, {\n        type: calculatedImage.imageType,\n        index: this.workbookImageIds.size\n      });\n    }\n\n    this.buildSheetImageMap(currentSheetIndex, calculatedImage);\n  };\n\n  ExcelXlsxFactory.buildSheetImageMap = function (sheetIndex, image) {\n    var worksheetImageIdMap = this.worksheetImageIds.get(sheetIndex);\n\n    if (!worksheetImageIdMap) {\n      worksheetImageIdMap = new Map();\n      this.worksheetImageIds.set(sheetIndex, worksheetImageIdMap);\n    }\n\n    var sheetImages = this.worksheetImages.get(sheetIndex);\n\n    if (!sheetImages) {\n      this.worksheetImages.set(sheetIndex, [image]);\n      worksheetImageIdMap.set(image.id, {\n        index: 0,\n        type: image.imageType\n      });\n    } else {\n      sheetImages.push(image);\n\n      if (!worksheetImageIdMap.get(image.id)) {\n        worksheetImageIdMap.set(image.id, {\n          index: worksheetImageIdMap.size,\n          type: image.imageType\n        });\n      }\n    }\n  };\n\n  ExcelXlsxFactory.addSheetName = function (worksheet) {\n    var name = worksheet.name;\n    var append = '';\n\n    while (this.sheetNames.indexOf(name + append) !== -1) {\n      if (append === '') {\n        append = '_1';\n      } else {\n        var curr = parseInt(append.slice(1), 10);\n        append = \"_\" + (curr + 1);\n      }\n    }\n\n    worksheet.name += append;\n    this.sheetNames.push(worksheet.name);\n  };\n\n  ExcelXlsxFactory.getStringPosition = function (str) {\n    if (this.sharedStrings.has(str)) {\n      return this.sharedStrings.get(str);\n    }\n\n    this.sharedStrings.set(str, this.sharedStrings.size);\n    return this.sharedStrings.size - 1;\n  };\n\n  ExcelXlsxFactory.resetFactory = function () {\n    this.sharedStrings = new Map();\n    this.images = new Map();\n    this.worksheetImages = new Map();\n    this.workbookImageIds = new Map();\n    this.worksheetImageIds = new Map();\n    this.sheetNames = [];\n    this.factoryMode = ExcelFactoryMode.SINGLE_SHEET;\n  };\n\n  ExcelXlsxFactory.createWorkbook = function () {\n    return createXmlPart(workbookFactory.getTemplate(this.sheetNames));\n  };\n\n  ExcelXlsxFactory.createStylesheet = function (defaultFontSize) {\n    return createXmlPart(stylesheetFactory.getTemplate(defaultFontSize));\n  };\n\n  ExcelXlsxFactory.createSharedStrings = function () {\n    return createXmlPart(sharedStringsFactory.getTemplate(this.sharedStrings));\n  };\n\n  ExcelXlsxFactory.createCore = function (author) {\n    return createXmlPart(coreFactory.getTemplate(author));\n  };\n\n  ExcelXlsxFactory.createContentTypes = function (sheetLen) {\n    return createXmlPart(contentTypesFactory.getTemplate(sheetLen));\n  };\n\n  ExcelXlsxFactory.createRels = function () {\n    var rs = relationshipsFactory.getTemplate([{\n      Id: 'rId1',\n      Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument',\n      Target: 'xl/workbook.xml'\n    }, {\n      Id: 'rId2',\n      Type: 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties',\n      Target: 'docProps/core.xml'\n    }]);\n    return createXmlPart(rs);\n  };\n\n  ExcelXlsxFactory.createTheme = function () {\n    return createXmlPart(officeThemeFactory.getTemplate());\n  };\n\n  ExcelXlsxFactory.createWorkbookRels = function (sheetLen) {\n    var worksheets = _.fill(new Array(sheetLen), undefined).map(function (v, i) {\n      return {\n        Id: \"rId\" + (i + 1),\n        Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet',\n        Target: \"worksheets/sheet\" + (i + 1) + \".xml\"\n      };\n    });\n\n    var rs = relationshipsFactory.getTemplate(__spreadArrays(worksheets, [{\n      Id: \"rId\" + (sheetLen + 1),\n      Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme',\n      Target: 'theme/theme1.xml'\n    }, {\n      Id: \"rId\" + (sheetLen + 2),\n      Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles',\n      Target: 'styles.xml'\n    }, {\n      Id: \"rId\" + (sheetLen + 3),\n      Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings',\n      Target: 'sharedStrings.xml'\n    }]));\n    return createXmlPart(rs);\n  };\n\n  ExcelXlsxFactory.createDrawing = function (sheetIndex) {\n    return createXmlPart(drawingFactory.getTemplate({\n      sheetIndex: sheetIndex\n    }));\n  };\n\n  ExcelXlsxFactory.createDrawingRel = function (sheetIndex) {\n    var _this = this;\n\n    var worksheetImageIds = this.worksheetImageIds.get(sheetIndex);\n    var XMLArr = [];\n    worksheetImageIds.forEach(function (value, key) {\n      XMLArr.push({\n        Id: \"rId\" + (value.index + 1),\n        Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n        Target: \"../media/image\" + (_this.workbookImageIds.get(key).index + 1) + \".\" + value.type\n      });\n    });\n    return createXmlPart(relationshipsFactory.getTemplate(XMLArr));\n  };\n\n  ExcelXlsxFactory.createWorksheetDrawingRel = function (currentRelationIndex) {\n    var rs = relationshipsFactory.getTemplate([{\n      Id: 'rId1',\n      Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing',\n      Target: \"../drawings/drawing\" + (currentRelationIndex + 1) + \".xml\"\n    }]);\n    return createXmlPart(rs);\n  };\n\n  ExcelXlsxFactory.createWorksheet = function (worksheet, margins, pageSetup, headerFooterConfig) {\n    return createXmlPart(worksheetFactory.getTemplate({\n      worksheet: worksheet,\n      currentSheet: this.sheetNames.length - 1,\n      margins: margins,\n      pageSetup: pageSetup,\n      headerFooterConfig: headerFooterConfig\n    }));\n  };\n\n  ExcelXlsxFactory.sharedStrings = new Map();\n  ExcelXlsxFactory.sheetNames = [];\n  /** Maps images to sheet */\n\n  ExcelXlsxFactory.images = new Map();\n  /** Maps sheets to images */\n\n  ExcelXlsxFactory.worksheetImages = new Map();\n  /** Maps all workbook images to a global Id */\n\n  ExcelXlsxFactory.workbookImageIds = new Map();\n  /** Maps all sheet images to unique Ids */\n\n  ExcelXlsxFactory.worksheetImageIds = new Map();\n  ExcelXlsxFactory.factoryMode = ExcelFactoryMode.SINGLE_SHEET;\n  return ExcelXlsxFactory;\n}();\n\nexport { ExcelXlsxFactory };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/excel-export/dist/es6/excelExport/excelXlsxFactory.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","ExcelFactoryMode","_","coreFactory","contentTypesFactory","drawingFactory","officeThemeFactory","sharedStringsFactory","stylesheetFactory","registerStyles","workbookFactory","worksheetFactory","relationshipsFactory","setExcelImageTotalHeight","setExcelImageTotalWidth","createXmlPart","ExcelXlsxFactory","createExcel","styles","worksheet","margins","pageSetup","headerFooterConfig","addSheetName","sheetNames","createWorksheet","buildImageMap","image","rowIndex","col","columnsToExport","rowHeight","currentSheetIndex","registeredImage","images","get","id","position","row","column","assign","indexOf","calculatedImage","currentSheetImages","find","currentImage","sheetId","push","set","workbookImageIds","type","imageType","index","size","buildSheetImageMap","sheetIndex","worksheetImageIdMap","worksheetImageIds","Map","sheetImages","worksheetImages","name","append","curr","parseInt","slice","getStringPosition","str","sharedStrings","has","resetFactory","factoryMode","SINGLE_SHEET","createWorkbook","getTemplate","createStylesheet","defaultFontSize","createSharedStrings","createCore","author","createContentTypes","sheetLen","createRels","rs","Id","Type","Target","createTheme","createWorkbookRels","worksheets","fill","undefined","map","v","createDrawing","createDrawingRel","_this","XMLArr","forEach","value","key","createWorksheetDrawingRel","currentRelationIndex","currentSheet"],"mappings":"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","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { ExcelFactoryMode, _ } from '@ag-grid-community/core';\nimport coreFactory from './files/ooxml/core';\nimport contentTypesFactory from './files/ooxml/contentTypes';\nimport drawingFactory from './files/ooxml/drawing';\nimport officeThemeFactory from './files/ooxml/themes/office';\nimport sharedStringsFactory from './files/ooxml/sharedStrings';\nimport stylesheetFactory, { registerStyles } from './files/ooxml/styles/stylesheet';\nimport workbookFactory from './files/ooxml/workbook';\nimport worksheetFactory from './files/ooxml/worksheet';\nimport relationshipsFactory from './files/ooxml/relationships';\nimport { setExcelImageTotalHeight, setExcelImageTotalWidth, createXmlPart } from './assets/excelUtils';\n/**\n * See https://www.ecma-international.org/news/TC45_current_work/OpenXML%20White%20Paper.pdf\n */\nvar ExcelXlsxFactory = /** @class */ (function () {\n    function ExcelXlsxFactory() {\n    }\n    ExcelXlsxFactory.createExcel = function (styles, worksheet, margins, pageSetup, headerFooterConfig) {\n        this.addSheetName(worksheet);\n        registerStyles(styles, this.sheetNames.length);\n        return this.createWorksheet(worksheet, margins, pageSetup, headerFooterConfig);\n    };\n    ExcelXlsxFactory.buildImageMap = function (image, rowIndex, col, columnsToExport, rowHeight) {\n        var currentSheetIndex = this.sheetNames.length;\n        var registeredImage = this.images.get(image.id);\n        if (!image.position || !image.position.row || !image.position.column) {\n            if (!image.position) {\n                image.position = {};\n            }\n            image.position = _.assign({}, image.position, {\n                row: rowIndex,\n                column: columnsToExport.indexOf(col) + 1\n            });\n        }\n        var calculatedImage = image;\n        setExcelImageTotalWidth(calculatedImage, columnsToExport);\n        setExcelImageTotalHeight(calculatedImage, rowHeight);\n        if (registeredImage) {\n            var currentSheetImages = _.find(registeredImage, function (currentImage) { return currentImage.sheetId === currentSheetIndex; });\n            if (currentSheetImages) {\n                currentSheetImages.image.push(calculatedImage);\n            }\n            else {\n                registeredImage.push({\n                    sheetId: currentSheetIndex,\n                    image: [calculatedImage]\n                });\n            }\n        }\n        else {\n            this.images.set(calculatedImage.id, [{ sheetId: currentSheetIndex, image: [calculatedImage] }]);\n            this.workbookImageIds.set(calculatedImage.id, { type: calculatedImage.imageType, index: this.workbookImageIds.size });\n        }\n        this.buildSheetImageMap(currentSheetIndex, calculatedImage);\n    };\n    ExcelXlsxFactory.buildSheetImageMap = function (sheetIndex, image) {\n        var worksheetImageIdMap = this.worksheetImageIds.get(sheetIndex);\n        if (!worksheetImageIdMap) {\n            worksheetImageIdMap = new Map();\n            this.worksheetImageIds.set(sheetIndex, worksheetImageIdMap);\n        }\n        var sheetImages = this.worksheetImages.get(sheetIndex);\n        if (!sheetImages) {\n            this.worksheetImages.set(sheetIndex, [image]);\n            worksheetImageIdMap.set(image.id, { index: 0, type: image.imageType });\n        }\n        else {\n            sheetImages.push(image);\n            if (!worksheetImageIdMap.get(image.id)) {\n                worksheetImageIdMap.set(image.id, { index: worksheetImageIdMap.size, type: image.imageType });\n            }\n        }\n    };\n    ExcelXlsxFactory.addSheetName = function (worksheet) {\n        var name = worksheet.name;\n        var append = '';\n        while (this.sheetNames.indexOf(name + append) !== -1) {\n            if (append === '') {\n                append = '_1';\n            }\n            else {\n                var curr = parseInt(append.slice(1), 10);\n                append = \"_\" + (curr + 1);\n            }\n        }\n        worksheet.name += append;\n        this.sheetNames.push(worksheet.name);\n    };\n    ExcelXlsxFactory.getStringPosition = function (str) {\n        if (this.sharedStrings.has(str)) {\n            return this.sharedStrings.get(str);\n        }\n        this.sharedStrings.set(str, this.sharedStrings.size);\n        return this.sharedStrings.size - 1;\n    };\n    ExcelXlsxFactory.resetFactory = function () {\n        this.sharedStrings = new Map();\n        this.images = new Map();\n        this.worksheetImages = new Map();\n        this.workbookImageIds = new Map();\n        this.worksheetImageIds = new Map();\n        this.sheetNames = [];\n        this.factoryMode = ExcelFactoryMode.SINGLE_SHEET;\n    };\n    ExcelXlsxFactory.createWorkbook = function () {\n        return createXmlPart(workbookFactory.getTemplate(this.sheetNames));\n    };\n    ExcelXlsxFactory.createStylesheet = function (defaultFontSize) {\n        return createXmlPart(stylesheetFactory.getTemplate(defaultFontSize));\n    };\n    ExcelXlsxFactory.createSharedStrings = function () {\n        return createXmlPart(sharedStringsFactory.getTemplate(this.sharedStrings));\n    };\n    ExcelXlsxFactory.createCore = function (author) {\n        return createXmlPart(coreFactory.getTemplate(author));\n    };\n    ExcelXlsxFactory.createContentTypes = function (sheetLen) {\n        return createXmlPart(contentTypesFactory.getTemplate(sheetLen));\n    };\n    ExcelXlsxFactory.createRels = function () {\n        var rs = relationshipsFactory.getTemplate([{\n                Id: 'rId1',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument',\n                Target: 'xl/workbook.xml'\n            }, {\n                Id: 'rId2',\n                Type: 'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties',\n                Target: 'docProps/core.xml'\n            }]);\n        return createXmlPart(rs);\n    };\n    ExcelXlsxFactory.createTheme = function () {\n        return createXmlPart(officeThemeFactory.getTemplate());\n    };\n    ExcelXlsxFactory.createWorkbookRels = function (sheetLen) {\n        var worksheets = _.fill(new Array(sheetLen), undefined).map(function (v, i) { return ({\n            Id: \"rId\" + (i + 1),\n            Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet',\n            Target: \"worksheets/sheet\" + (i + 1) + \".xml\"\n        }); });\n        var rs = relationshipsFactory.getTemplate(__spreadArrays(worksheets, [\n            {\n                Id: \"rId\" + (sheetLen + 1),\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme',\n                Target: 'theme/theme1.xml'\n            }, {\n                Id: \"rId\" + (sheetLen + 2),\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles',\n                Target: 'styles.xml'\n            }, {\n                Id: \"rId\" + (sheetLen + 3),\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings',\n                Target: 'sharedStrings.xml'\n            }\n        ]));\n        return createXmlPart(rs);\n    };\n    ExcelXlsxFactory.createDrawing = function (sheetIndex) {\n        return createXmlPart(drawingFactory.getTemplate({ sheetIndex: sheetIndex }));\n    };\n    ExcelXlsxFactory.createDrawingRel = function (sheetIndex) {\n        var _this = this;\n        var worksheetImageIds = this.worksheetImageIds.get(sheetIndex);\n        var XMLArr = [];\n        worksheetImageIds.forEach(function (value, key) {\n            XMLArr.push({\n                Id: \"rId\" + (value.index + 1),\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n                Target: \"../media/image\" + (_this.workbookImageIds.get(key).index + 1) + \".\" + value.type\n            });\n        });\n        return createXmlPart(relationshipsFactory.getTemplate(XMLArr));\n    };\n    ExcelXlsxFactory.createWorksheetDrawingRel = function (currentRelationIndex) {\n        var rs = relationshipsFactory.getTemplate([{\n                Id: 'rId1',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing',\n                Target: \"../drawings/drawing\" + (currentRelationIndex + 1) + \".xml\"\n            }]);\n        return createXmlPart(rs);\n    };\n    ExcelXlsxFactory.createWorksheet = function (worksheet, margins, pageSetup, headerFooterConfig) {\n        return createXmlPart(worksheetFactory.getTemplate({\n            worksheet: worksheet,\n            currentSheet: this.sheetNames.length - 1,\n            margins: margins,\n            pageSetup: pageSetup,\n            headerFooterConfig: headerFooterConfig\n        }));\n    };\n    ExcelXlsxFactory.sharedStrings = new Map();\n    ExcelXlsxFactory.sheetNames = [];\n    /** Maps images to sheet */\n    ExcelXlsxFactory.images = new Map();\n    /** Maps sheets to images */\n    ExcelXlsxFactory.worksheetImages = new Map();\n    /** Maps all workbook images to a global Id */\n    ExcelXlsxFactory.workbookImageIds = new Map();\n    /** Maps all sheet images to unique Ids */\n    ExcelXlsxFactory.worksheetImageIds = new Map();\n    ExcelXlsxFactory.factoryMode = ExcelFactoryMode.SINGLE_SHEET;\n    return ExcelXlsxFactory;\n}());\nexport { ExcelXlsxFactory };\n"]},"metadata":{},"sourceType":"module"}