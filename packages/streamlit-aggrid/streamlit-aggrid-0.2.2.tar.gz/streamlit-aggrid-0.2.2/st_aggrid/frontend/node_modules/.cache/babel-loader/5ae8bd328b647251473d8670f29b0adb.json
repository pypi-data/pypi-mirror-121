{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { CellRangeType, SelectionHandleType, _ } from \"@ag-grid-community/core\";\nimport { AbstractSelectionHandle } from \"./abstractSelectionHandle\";\n\nvar RangeHandle = function (_super) {\n  __extends(RangeHandle, _super);\n\n  function RangeHandle() {\n    var _this = _super.call(this, RangeHandle.TEMPLATE) || this;\n\n    _this.type = SelectionHandleType.RANGE;\n    _this.rangeFixed = false;\n    return _this;\n  }\n\n  RangeHandle.prototype.onDrag = function (e) {\n    var lastCellHovered = this.getLastCellHovered();\n\n    if (!lastCellHovered) {\n      return;\n    }\n\n    var cellRanges = this.rangeService.getCellRanges();\n\n    var lastRange = _.last(cellRanges);\n\n    if (!this.rangeFixed) {\n      this.fixRangeStartEnd(lastRange);\n      this.rangeFixed = true;\n    }\n\n    this.endPosition = {\n      rowIndex: lastCellHovered.rowIndex,\n      rowPinned: lastCellHovered.rowPinned,\n      column: lastCellHovered.column\n    }; // check if the cell ranges are for a chart\n\n    if (cellRanges.length === 2 && cellRanges[0].type === CellRangeType.DIMENSION && lastRange.type === CellRangeType.VALUE) {\n      var rowChanged = !this.rowPositionUtils.sameRow(this.endPosition, this.rangeService.getRangeEndRow(lastRange));\n\n      if (rowChanged) {\n        // ensure the dimension range is kept in sync with the value range (which has the handle)\n        this.rangeService.updateRangeEnd(cellRanges[0], __assign(__assign({}, this.endPosition), {\n          column: cellRanges[0].columns[0]\n        }), true);\n      }\n    }\n\n    this.rangeService.extendLatestRangeToCell(this.endPosition);\n  };\n\n  RangeHandle.prototype.onDragEnd = function (e) {\n    var cellRange = _.last(this.rangeService.getCellRanges());\n\n    this.fixRangeStartEnd(cellRange);\n    this.rangeFixed = false;\n  };\n\n  RangeHandle.prototype.fixRangeStartEnd = function (cellRange) {\n    var startRow = this.rangeService.getRangeStartRow(cellRange);\n    var endRow = this.rangeService.getRangeEndRow(cellRange);\n    var column = cellRange.columns[0];\n    cellRange.startRow = startRow;\n    cellRange.endRow = endRow;\n    cellRange.startColumn = column;\n  };\n\n  RangeHandle.TEMPLATE = \"<div class=\\\"ag-range-handle\\\"></div>\";\n  return RangeHandle;\n}(AbstractSelectionHandle);\n\nexport { RangeHandle };","map":{"version":3,"sources":["C:/dev/streamlit-aggrid/st_aggrid/frontend/node_modules/@ag-grid-enterprise/range-selection/dist/es6/rangeSelection/rangeHandle.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","CellRangeType","SelectionHandleType","_","AbstractSelectionHandle","RangeHandle","_super","_this","TEMPLATE","type","RANGE","rangeFixed","onDrag","e","lastCellHovered","getLastCellHovered","cellRanges","rangeService","getCellRanges","lastRange","last","fixRangeStartEnd","endPosition","rowIndex","rowPinned","column","DIMENSION","VALUE","rowChanged","rowPositionUtils","sameRow","getRangeEndRow","updateRangeEnd","columns","extendLatestRangeToCell","onDragEnd","cellRange","startRow","getRangeStartRow","endRow","startColumn"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { CellRangeType, SelectionHandleType, _ } from \"@ag-grid-community/core\";\nimport { AbstractSelectionHandle } from \"./abstractSelectionHandle\";\nvar RangeHandle = /** @class */ (function (_super) {\n    __extends(RangeHandle, _super);\n    function RangeHandle() {\n        var _this = _super.call(this, RangeHandle.TEMPLATE) || this;\n        _this.type = SelectionHandleType.RANGE;\n        _this.rangeFixed = false;\n        return _this;\n    }\n    RangeHandle.prototype.onDrag = function (e) {\n        var lastCellHovered = this.getLastCellHovered();\n        if (!lastCellHovered) {\n            return;\n        }\n        var cellRanges = this.rangeService.getCellRanges();\n        var lastRange = _.last(cellRanges);\n        if (!this.rangeFixed) {\n            this.fixRangeStartEnd(lastRange);\n            this.rangeFixed = true;\n        }\n        this.endPosition = {\n            rowIndex: lastCellHovered.rowIndex,\n            rowPinned: lastCellHovered.rowPinned,\n            column: lastCellHovered.column\n        };\n        // check if the cell ranges are for a chart\n        if (cellRanges.length === 2 && cellRanges[0].type === CellRangeType.DIMENSION && lastRange.type === CellRangeType.VALUE) {\n            var rowChanged = !this.rowPositionUtils.sameRow(this.endPosition, this.rangeService.getRangeEndRow(lastRange));\n            if (rowChanged) {\n                // ensure the dimension range is kept in sync with the value range (which has the handle)\n                this.rangeService.updateRangeEnd(cellRanges[0], __assign(__assign({}, this.endPosition), { column: cellRanges[0].columns[0] }), true);\n            }\n        }\n        this.rangeService.extendLatestRangeToCell(this.endPosition);\n    };\n    RangeHandle.prototype.onDragEnd = function (e) {\n        var cellRange = _.last(this.rangeService.getCellRanges());\n        this.fixRangeStartEnd(cellRange);\n        this.rangeFixed = false;\n    };\n    RangeHandle.prototype.fixRangeStartEnd = function (cellRange) {\n        var startRow = this.rangeService.getRangeStartRow(cellRange);\n        var endRow = this.rangeService.getRangeEndRow(cellRange);\n        var column = cellRange.columns[0];\n        cellRange.startRow = startRow;\n        cellRange.endRow = endRow;\n        cellRange.startColumn = column;\n    };\n    RangeHandle.TEMPLATE = \"<div class=\\\"ag-range-handle\\\"></div>\";\n    return RangeHandle;\n}(AbstractSelectionHandle));\nexport { RangeHandle };\n"]},"metadata":{},"sourceType":"module"}