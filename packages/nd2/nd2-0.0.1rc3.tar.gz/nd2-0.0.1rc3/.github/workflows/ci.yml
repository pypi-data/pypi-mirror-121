name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} (${{ matrix.python-version }})
    runs-on: ${{ matrix.platform }}
    env:
      DROPBOX_TOKEN: ${{ secrets.DROPBOX_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        platform: [macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dropbox

      - name: Download Samples
        run: |
          python scripts/download_samples.py
          python scripts/download_sdk.py

      - name: Build
        run: pip install .[testing]

      - name: Test
        run: pytest -v --cov=nd2 --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

  build:
    name: Build wheels on ${{ matrix.os }}
    needs: [test]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dropbox build

      - name: Download Samples
        run: |
          python scripts/download_samples.py
          python scripts/download_sdk.py
        env:
          DROPBOX_TOKEN: ${{ secrets.DROPBOX_TOKEN }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.2.0a1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

      - name: Build sdist
        if: matrix.os == 'macos-10.15'
        run: python -m build --sdist

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-10.15'
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.TWINE_API_KEY }}
