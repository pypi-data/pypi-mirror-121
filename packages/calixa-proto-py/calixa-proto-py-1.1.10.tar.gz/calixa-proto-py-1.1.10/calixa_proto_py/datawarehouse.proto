syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "integration_source.proto";
import "integration.proto";
import "common.proto";
import "entity.proto";

option java_package = "io.calixa.domain.datawarehouse";
option java_multiple_files = true;
option optimize_for = SPEED;

package calixa.domain.warehouse;


message QueryContext {

  string organization_id = 1;
  string query = 2;

  // The mappers that translate the fields from the output to an Entity.
  repeated entity.FieldMapper field_mappers = 3;

  // The entity type to produce
  common.EntityType output_entity_type = 4;

  // Set the IntegrationSource for the query
  domain.integration.IntegrationSource source = 5;

  // ... some number of bookkeeping fields...
  google.protobuf.Timestamp last_run_at = 6;
}

/*********************************************************************** RPC */

message VerifyCredentialsRequest {
  integration.Credentials credentials = 1;
}

message VerifyCredentialsResponse {
  integration.CredentialsStatus credentials_status = 1;
  string error_message = 2;
}

message SaveCredentialsRequest {
  integration.Credentials credentials = 1;
}

message SaveCredentialsResponse {
  integration.Integration integration = 1;
}

service DataWarehouseService {
  rpc VerifyCredentials(VerifyCredentialsRequest) returns (VerifyCredentialsResponse);
  rpc SaveCredentials(SaveCredentialsRequest) returns (SaveCredentialsResponse);
  rpc GetSchemas(GetSchemasRequest) returns (GetSchemasResponse);
  rpc GetTables(GetTablesRequest) returns (GetTablesResponse);
  rpc GetTable(GetTableRequest) returns (DataWarehouseTable);
  rpc CreateMapping(CreateMappingRequest) returns (CreateMappingResponse);
  rpc GetMappings(GetMappingsRequest) returns (GetMappingsResponse);
  rpc GetMapping(GetMappingRequest) returns (GetMappingResponse);
  rpc ReplaceMapping(ReplaceMappingRequest) returns (ReplaceMappingResponse);
  rpc TestMapping(TestMappingRequest) returns (TestMappingResponse);
}

message DataWarehouseColumn {
  string column_name = 1;
  string type = 2;
  string description = 3;
}

message DataWarehouseTable {
  string schema = 1;
  string table_name = 2;
  repeated DataWarehouseColumn columns = 3;
}

message GetSchemasRequest {
  calixa.domain.integration.Integration integration = 1;
}

message GetSchemasResponse {
  repeated string schemas = 1;
}

message GetTablesRequest {
  string schema = 1;
  calixa.domain.integration.Integration integration = 2;
}

message GetTablesResponse {
  repeated DataWarehouseTable tables = 1;
}

message GetTableRequest {
  calixa.domain.integration.Integration integration = 1;
  string schema = 2;
  string table_name = 3;
}

message GetTableResponse {
  DataWarehouseTable table = 1;
}

message CreateMappingRequest{
  string instance_id = 1;
  string schema = 2;
  string table = 3;
  repeated entity.FieldMapper field_mappers = 4;
}

message CreateMappingResponse{
  entity.DataWarehouseMapping mapping = 1;
}

message GetMappingsRequest {

}

message GetMappingsResponse {
  repeated entity.DataWarehouseMapping mapping = 1;
}

message GetMappingRequest {
  string canonical_id = 1;
}

message GetMappingResponse {
  entity.DataWarehouseMapping mapping = 1;
}

message ReplaceMappingRequest {
  string canonical_id = 1;
}

message ReplaceMappingResponse {
  entity.DataWarehouseMapping mapping = 1;
}

message TestMappingRequest{
  entity.DataWarehouseMapping mapping = 1;
}

message TestMappingResponse {
  entity.Entity entity = 1;
  DataWarehouseTable table = 2;
}