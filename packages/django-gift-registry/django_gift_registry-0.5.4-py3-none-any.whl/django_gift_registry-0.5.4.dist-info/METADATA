Metadata-Version: 2.1
Name: django-gift-registry
Version: 0.5.4
Summary: A minimal wedding registry or gift registry app.
Home-page: https://gitlab.com/BenSturmfels/django-gift-registry
Author: Ben Sturmfels
Author-email: ben@sturm.com.au
License: UNKNOWN
Project-URL: Source, https://gitlab.com/BenSturmfels/django-gift-registry
Project-URL: Bug Reports, https://gitlab.com/BenSturmfels/django-gift-registry/-/issues
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.3
Requires-Python: >=3.6
Requires-Dist: Django (>=3.2)
Requires-Dist: Pillow (>=2.5.1)

=============
Gift Registry
=============

.. A minimal wedding registry or gift registry app.

Create a list of gifts ideas that can then be reserved by guests.

Guests can browse the list of gift ideas and reserve one by entering their email
address. The item is then marked as chosen for the information of other guests.
No registration is required, just an email address to send confirmation.

Gifts ideas can be either items that you only want one of, or items that you
would be happy to receive multiples of (eg. a gift voucher). You can add a
picture, description and URL for each item.

The registry doesn't take payment or allow the gift to be directly purchase, it
simply allows gift ideas to be reserved.


Quick start
-----------

1. Add the following required Django settings:

   .. code-block:: python

          INSTALLED_APPS = [
              ...
   	   'django.contrib.sites',
              'gift_registry',
   	   ...
          ]

          SITE_ID = 1
          GIFT_REGISTRY_SETTINGS = {
              'EVENT_NAME': "Alice and Bob's Wedding",
          }

2. Include the gifts URLconf in your project urls.py like this:

   .. code-block:: python

          path('', include('gift_registry.urls')),

   and a line to serve uploaded media in development:

   .. code-block:: python

          from django.conf import settings
          from django.conf.urls.static import static
          urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

3. Run ``python manage.py migrate`` to create the Gift Registry models.

4. Run ``python manage.py createsuperuser --username=admin --email=test@example.com``.

5. Start the development server and visit the Django Admin at
   ``http://127.0.0.1:8000/admin/gift_registry/gift/`` to add gift ideas.

6. Visit ``http://127.0.0.1:8000/`` to browse the public list.

7. Before deployment, be sure to add a "Site" via the Django Admin to ensure the
   outgoing emails include the correct link back to the website.


Customising
-----------

There's a good chance that you'll want to customise the look and feel. You do
this by overriding the built-in templates.

Add your own template directory to ``settings.TEMPLATE_DIRS`` and override the base
template here. To do this, first create a ``gift_registry`` directory in your
templates directory. Then from within the django-gift-registry package, copy
``gift_registry/templates/gift_registry/base.html`` into your newly created
``gift_registry`` directory. Customise this base.html file with your own HTML and
CSS.

..
   Local Variables:
   mode: rst
   End:

Release History
---------------

0.5.4 (2021-09-29)
++++++++++++++++++

Switch to setup.cfg.


0.5.3 (2021-09-22)
++++++++++++++++++

Upgraded for Python 3 and Django 3.2.


0.4.3 (2015-08-04)
++++++++++++++++++

Initial version.


