Metadata-Version: 2.1
Name: alamopy
Version: 0.2.2
Summary: A package that is able to run ALAMO without the use of its GUI
Home-page: UNKNOWN
Author: The Optimization Firm
Author-email: info@minlp.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: Intended Audience :: Healthcare Industry
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Manufacturing
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Telecommunications Industry
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# alamopy

This is an interface for using ALAMO through a Python pip package.

<h2> Preparation : </h2>

<h4> for MacOS users: </h4>

Download the ALAMO application from minlp.com, and unzip the package.

<h4>  for Windows users: </h4>

Download the ALAMO application from minlp.com, and install with the provided installer.

<h2> Data to run ALAMO:</h2>

Add the directory of the folder you have installed the pip package with your Python file to your PATH variable.

Get your ALAMO license from minlp.com and place it inside the same folder as the Python file.

Before running ALAMO, you should decide if you will provide your own data. If so, make sure your data are all in numpy arrays.
Otherwise, select the appropriate simulator to run ALAMO.

pip install alamopy\
python\
import numpy as np

## Example


Test 1 to see if we can generate model for z = x\*\*2
Most notably tests if the given example 1 works from ALAMO UI.

from alamopy import almain as alamo\
import numpy as np

xdata = np.random.rand(11, 1)\
xdata[:, 0] = [-5,-4,-3,-2,-1,0,1,2,3,4,5]

zdata = xdata[:, 0]\*\*2

opts = alamo.doalamo(xdata, zdata, linfcns = 1, logfcns = 1, sinfcns = 1, cosfns = 1, constant = 1, expfcns = 1, monomialpower = [2,3], keep_alm_file=True, keep_lst_file=True)

<h2> Outputs from ALAMO </h2>

You would get the result dictionary with a best-fitted function and other variables when calling ALAMO using this python interface.


