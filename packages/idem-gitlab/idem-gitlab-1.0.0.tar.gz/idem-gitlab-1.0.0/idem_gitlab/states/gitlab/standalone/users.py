"""
Autogenerated using `pop-create-idem <https://gitlab.com/saltstack/pop/pop-create-idem>`__

Users
"""
from typing import Any
from typing import Dict

import dict_tools.differ as differ


async def present(hub, ctx, name: str) -> Dict[str, Any]:
    r"""
    **Autogenerated function**

    Parameters:


    Args:
        name(Text): The identifier for this state.

    Returns:
        Dict[str, Any]

    Examples:

        .. code-block:: sls

            resource_is_present:
              gitlab.standalone.users.present:
                - name: value
    """

    result = dict(comment="", changes=None, name=name, result=True)

    before = hub.exec.request.json.get(
        ctx,
        url=f"{ctx.acct.endpoint_url}/users",
        data={},
        success_codes=[200],
    )
    if before["status"]:
        result["comment"] = f"'{name}' already exists"
    else:
        ret = await hub.exec.request.json.post(
            ctx,
            success_codes=[201, 304, 204],
            url=f"{ctx.acct.endpoint_url}/users",
            **{},
        )
        result["result"] = ret["status"]
        if not result["result"]:
            result["comment"] = ret["comment"]
            return result
        result["comment"] = f"Created '{name}'"

    # Now that the resource exists, update it
    ret = await hub.exec.request.json.put(
        ctx,
        url=f"{ctx.acct.endpoint_url}/users",
        success_codes=[200, 204, 304],
    )

    if not ret["status"]:
        result["status"] = False
        result["comment"] = f"Unable to update '{name}': {ret['comment']}"

    after = hub.exec.request.json.get(
        ctx,
        url=f"{ctx.acct.endpoint_url}/users",
        data={},
        success_codes=[200],
    )
    result["changes"] = differ.deep_diff(before["ret"], after["ret"])
    return result


async def absent(hub, ctx, name: str, project_id: int, key_id: int) -> Dict[str, Any]:
    r"""
    **Autogenerated function**

    Parameters:


    Args:
        name(Text): The identifier for this state.
        project_id(int): The ID of the user.
        key_id(int): The ID of the GPG key.

    Returns:
        Dict[str, Any]

    Examples:

        .. code-block:: sls

            resource_is_absent:
              gitlab.standalone.users.absent:
                - name: value
                - project_id: value
                - key_id: value
    """

    result = dict(comment="", changes=None, name=name, result=True)
    before = hub.exec.request.json.get(
        ctx,
        url=f"{ctx.acct.endpoint_url}/users",
        data={},
        success_codes=[204, 304, 404],
    )

    if before["status"]:
        result["comment"] = f"'{name}' already absent"
    else:
        ret = await hub.exec.request.json.delete(
            ctx,
            url=f"{ctx.acct.endpoint_url}/users",
            success_code=[204],
            **{"id": project_id, "key_id": key_id},
        )
        result["result"] = ret["status"]
        if not result["result"]:
            result["comment"] = ret["comment"]
            return result
        result["comment"] = f"Deleted '{name}'"

    after = hub.exec.request.json.get(
        ctx,
        url=f"{ctx.acct.endpoint_url}/users",
        data={},
        success_codes=[204, 304, 404],
    )

    result["changes"] = differ.deep_diff(before["ret"], after["ret"])
    return result


async def describe(hub, ctx) -> Dict[str, Dict[str, Any]]:
    r"""
    **Autogenerated function**

    Describe the resource in a way that can be recreated/managed with the corresponding "present" function


    In addition, to exclude external users from the usersâ€™ list, you can use the parameter exclude_external=true.



    Returns:
        Dict[str, Any]

    Examples:

        .. code-block:: bash

            $ idem describe gitlab.standalone.users
    """

    result = {}

    async for ret in hub.exec.gitlab.request.paginate(
        ctx, url=f"{ctx.acct.endpoint_url}/users"
    ):
        result[f"standalone.users-{ret['id']}"] = {
            "gitlab.standalone.users.present": []
        }

    return result
